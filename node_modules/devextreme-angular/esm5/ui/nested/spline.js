/*!
 * devextreme-angular
 * Version: 19.2.6
 * Build date: Thu Jan 30 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
/* tslint:disable:max-line-length */
/* tslint:disable:use-input-property-decorator */
import { Component, NgModule, Host, SkipSelf } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { DxoChartCommonSeriesSettings } from './base/chart-common-series-settings';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'devextreme-angular/core';
var DxoSplineComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DxoSplineComponent, _super);
    function DxoSplineComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoSplineComponent.prototype, "_optionPath", {
        get: function () {
            return 'spline';
        },
        enumerable: true,
        configurable: true
    });
    DxoSplineComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._fullOptionPath().slice(0, -1));
    };
    DxoSplineComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoSplineComponent = tslib_1.__decorate([ tslib_1.__param(0, SkipSelf()), tslib_1.__param(0, Host()),
        tslib_1.__param(1, Host()),
        tslib_1.__metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoSplineComponent);
DxoSplineComponent.ɵfac = function DxoSplineComponent_Factory(t) { return new (t || DxoSplineComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 5), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 1)); };
DxoSplineComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxoSplineComponent, selectors: [["dxo-spline"]], inputs: { aggregation: "aggregation", area: "area", argumentField: "argumentField", axis: "axis", bar: "bar", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", bubble: "bubble", candlestick: "candlestick", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", fullstackedarea: "fullstackedarea", fullstackedbar: "fullstackedbar", fullstackedline: "fullstackedline", fullstackedspline: "fullstackedspline", fullstackedsplinearea: "fullstackedsplinearea", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", line: "line", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangearea: "rangearea", rangebar: "rangebar", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", scatter: "scatter", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", spline: "spline", splinearea: "splinearea", stack: "stack", stackedarea: "stackedarea", stackedbar: "stackedbar", stackedline: "stackedline", stackedspline: "stackedspline", stackedsplinearea: "stackedsplinearea", steparea: "steparea", stepline: "stepline", stock: "stock", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width" }, features: [ɵngcc0.ɵɵProvidersFeature([NestedOptionHost]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoSplineComponent_Template(rf, ctx) { }, styles: [""] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoSplineComponent, [{
        type: Component,
        args: [{
                selector: 'dxo-spline',
                template: '',
                providers: [NestedOptionHost],
                inputs: [
                    'aggregation',
                    'area',
                    'argumentField',
                    'axis',
                    'bar',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'bubble',
                    'candlestick',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'fullstackedarea',
                    'fullstackedbar',
                    'fullstackedline',
                    'fullstackedspline',
                    'fullstackedsplinearea',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'line',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangearea',
                    'rangebar',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'scatter',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'spline',
                    'splinearea',
                    'stack',
                    'stackedarea',
                    'stackedbar',
                    'stackedline',
                    'stackedspline',
                    'stackedsplinearea',
                    'steparea',
                    'stepline',
                    'stock',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width'
                ],
                styles: ['']
            }]
    }], function () { return [{ type: ɵngcc1.NestedOptionHost, decorators: [{
                type: SkipSelf
            }, {
                type: Host
            }] }, { type: ɵngcc1.NestedOptionHost, decorators: [{
                type: Host
            }] }]; }, null); })();
    return DxoSplineComponent;
}(DxoChartCommonSeriesSettings));
export { DxoSplineComponent };
var DxoSplineModule = /** @class */ (function () {
    function DxoSplineModule() {
    }
DxoSplineModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxoSplineModule });
DxoSplineModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxoSplineModule_Factory(t) { return new (t || DxoSplineModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxoSplineModule, { declarations: [DxoSplineComponent], exports: [DxoSplineComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoSplineModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DxoSplineComponent
                ],
                exports: [
                    DxoSplineComponent
                ]
            }]
    }], function () { return []; }, null); })();
    return DxoSplineModule;
}());
export { DxoSplineModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9wbnNiL0Rlc2t0b3AvTU9BIC0gRS1LQU5NQVMvbm9kZV9tb2R1bGVzL2RldmV4dHJlbWUtYW5ndWxhci9lc201L3VpL25lc3RlZC9zcGxpbmUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0JBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzZDQXNCNkMsQUFzRXRDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7a0NBSW9COzs7Ozs7S0FNdEI7Ozs7Ozs7Ozs7Ozs7O2dEQVVtQiIsImZpbGUiOiJzcGxpbmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcclxuICogZGV2ZXh0cmVtZS1hbmd1bGFyXHJcbiAqIFZlcnNpb246IDE5LjIuNlxyXG4gKiBCdWlsZCBkYXRlOiBUaHUgSmFuIDMwIDIwMjBcclxuICpcclxuICogQ29weXJpZ2h0IChjKSAyMDEyIC0gMjAyMCBEZXZlbG9wZXIgRXhwcmVzcyBJbmMuIEFMTCBSSUdIVFMgUkVTRVJWRURcclxuICpcclxuICogVGhpcyBzb2Z0d2FyZSBtYXkgYmUgbW9kaWZpZWQgYW5kIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSB0ZXJtc1xyXG4gKiBvZiB0aGUgTUlUIGxpY2Vuc2UuIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IG9mIHRoZSBwcm9qZWN0IGZvciBkZXRhaWxzLlxyXG4gKlxyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vRGV2RXhwcmVzcy9kZXZleHRyZW1lLWFuZ3VsYXJcclxuICovXHJcbmltcG9ydCAqIGFzIHRzbGliXzEgZnJvbSBcInRzbGliXCI7XHJcbi8qIHRzbGludDpkaXNhYmxlOm1heC1saW5lLWxlbmd0aCAqL1xyXG4vKiB0c2xpbnQ6ZGlzYWJsZTp1c2UtaW5wdXQtcHJvcGVydHktZGVjb3JhdG9yICovXHJcbmltcG9ydCB7IENvbXBvbmVudCwgTmdNb2R1bGUsIEhvc3QsIFNraXBTZWxmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE5lc3RlZE9wdGlvbkhvc3QsIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBEeG9DaGFydENvbW1vblNlcmllc1NldHRpbmdzIH0gZnJvbSAnLi9iYXNlL2NoYXJ0LWNvbW1vbi1zZXJpZXMtc2V0dGluZ3MnO1xyXG52YXIgRHhvU3BsaW5lQ29tcG9uZW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG4gICAgdHNsaWJfMS5fX2V4dGVuZHMoRHhvU3BsaW5lQ29tcG9uZW50LCBfc3VwZXIpO1xyXG4gICAgZnVuY3Rpb24gRHhvU3BsaW5lQ29tcG9uZW50KHBhcmVudE9wdGlvbkhvc3QsIG9wdGlvbkhvc3QpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xyXG4gICAgICAgIHBhcmVudE9wdGlvbkhvc3Quc2V0TmVzdGVkT3B0aW9uKF90aGlzKTtcclxuICAgICAgICBvcHRpb25Ib3N0LnNldEhvc3QoX3RoaXMsIF90aGlzLl9mdWxsT3B0aW9uUGF0aC5iaW5kKF90aGlzKSk7XHJcbiAgICAgICAgcmV0dXJuIF90aGlzO1xyXG4gICAgfVxyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KER4b1NwbGluZUNvbXBvbmVudC5wcm90b3R5cGUsIFwiX29wdGlvblBhdGhcIiwge1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gJ3NwbGluZSc7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBEeG9TcGxpbmVDb21wb25lbnQucHJvdG90eXBlLm5nT25EZXN0cm95ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuX2FkZFJlbW92ZWRPcHRpb24odGhpcy5fZnVsbE9wdGlvblBhdGgoKS5zbGljZSgwLCAtMSkpO1xyXG4gICAgfTtcclxuICAgIER4b1NwbGluZUNvbXBvbmVudC5jdG9yUGFyYW1ldGVycyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFtcclxuICAgICAgICB7IHR5cGU6IE5lc3RlZE9wdGlvbkhvc3QsIGRlY29yYXRvcnM6IFt7IHR5cGU6IFNraXBTZWxmIH0sIHsgdHlwZTogSG9zdCB9XSB9LFxyXG4gICAgICAgIHsgdHlwZTogTmVzdGVkT3B0aW9uSG9zdCwgZGVjb3JhdG9yczogW3sgdHlwZTogSG9zdCB9XSB9XHJcbiAgICBdOyB9O1xyXG4gICAgRHhvU3BsaW5lQ29tcG9uZW50ID0gdHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgICAgICBDb21wb25lbnQoe1xyXG4gICAgICAgICAgICBzZWxlY3RvcjogJ2R4by1zcGxpbmUnLFxyXG4gICAgICAgICAgICB0ZW1wbGF0ZTogJycsXHJcbiAgICAgICAgICAgIHByb3ZpZGVyczogW05lc3RlZE9wdGlvbkhvc3RdLFxyXG4gICAgICAgICAgICBpbnB1dHM6IFtcclxuICAgICAgICAgICAgICAgICdhZ2dyZWdhdGlvbicsXHJcbiAgICAgICAgICAgICAgICAnYXJlYScsXHJcbiAgICAgICAgICAgICAgICAnYXJndW1lbnRGaWVsZCcsXHJcbiAgICAgICAgICAgICAgICAnYXhpcycsXHJcbiAgICAgICAgICAgICAgICAnYmFyJyxcclxuICAgICAgICAgICAgICAgICdiYXJPdmVybGFwR3JvdXAnLFxyXG4gICAgICAgICAgICAgICAgJ2JhclBhZGRpbmcnLFxyXG4gICAgICAgICAgICAgICAgJ2JhcldpZHRoJyxcclxuICAgICAgICAgICAgICAgICdib3JkZXInLFxyXG4gICAgICAgICAgICAgICAgJ2J1YmJsZScsXHJcbiAgICAgICAgICAgICAgICAnY2FuZGxlc3RpY2snLFxyXG4gICAgICAgICAgICAgICAgJ2Nsb3NlVmFsdWVGaWVsZCcsXHJcbiAgICAgICAgICAgICAgICAnY29sb3InLFxyXG4gICAgICAgICAgICAgICAgJ2Nvcm5lclJhZGl1cycsXHJcbiAgICAgICAgICAgICAgICAnZGFzaFN0eWxlJyxcclxuICAgICAgICAgICAgICAgICdmdWxsc3RhY2tlZGFyZWEnLFxyXG4gICAgICAgICAgICAgICAgJ2Z1bGxzdGFja2VkYmFyJyxcclxuICAgICAgICAgICAgICAgICdmdWxsc3RhY2tlZGxpbmUnLFxyXG4gICAgICAgICAgICAgICAgJ2Z1bGxzdGFja2Vkc3BsaW5lJyxcclxuICAgICAgICAgICAgICAgICdmdWxsc3RhY2tlZHNwbGluZWFyZWEnLFxyXG4gICAgICAgICAgICAgICAgJ2hpZ2hWYWx1ZUZpZWxkJyxcclxuICAgICAgICAgICAgICAgICdob3Zlck1vZGUnLFxyXG4gICAgICAgICAgICAgICAgJ2hvdmVyU3R5bGUnLFxyXG4gICAgICAgICAgICAgICAgJ2lnbm9yZUVtcHR5UG9pbnRzJyxcclxuICAgICAgICAgICAgICAgICdpbm5lckNvbG9yJyxcclxuICAgICAgICAgICAgICAgICdsYWJlbCcsXHJcbiAgICAgICAgICAgICAgICAnbGluZScsXHJcbiAgICAgICAgICAgICAgICAnbG93VmFsdWVGaWVsZCcsXHJcbiAgICAgICAgICAgICAgICAnbWF4TGFiZWxDb3VudCcsXHJcbiAgICAgICAgICAgICAgICAnbWluQmFyU2l6ZScsXHJcbiAgICAgICAgICAgICAgICAnb3BhY2l0eScsXHJcbiAgICAgICAgICAgICAgICAnb3BlblZhbHVlRmllbGQnLFxyXG4gICAgICAgICAgICAgICAgJ3BhbmUnLFxyXG4gICAgICAgICAgICAgICAgJ3BvaW50JyxcclxuICAgICAgICAgICAgICAgICdyYW5nZWFyZWEnLFxyXG4gICAgICAgICAgICAgICAgJ3JhbmdlYmFyJyxcclxuICAgICAgICAgICAgICAgICdyYW5nZVZhbHVlMUZpZWxkJyxcclxuICAgICAgICAgICAgICAgICdyYW5nZVZhbHVlMkZpZWxkJyxcclxuICAgICAgICAgICAgICAgICdyZWR1Y3Rpb24nLFxyXG4gICAgICAgICAgICAgICAgJ3NjYXR0ZXInLFxyXG4gICAgICAgICAgICAgICAgJ3NlbGVjdGlvbk1vZGUnLFxyXG4gICAgICAgICAgICAgICAgJ3NlbGVjdGlvblN0eWxlJyxcclxuICAgICAgICAgICAgICAgICdzaG93SW5MZWdlbmQnLFxyXG4gICAgICAgICAgICAgICAgJ3NpemVGaWVsZCcsXHJcbiAgICAgICAgICAgICAgICAnc3BsaW5lJyxcclxuICAgICAgICAgICAgICAgICdzcGxpbmVhcmVhJyxcclxuICAgICAgICAgICAgICAgICdzdGFjaycsXHJcbiAgICAgICAgICAgICAgICAnc3RhY2tlZGFyZWEnLFxyXG4gICAgICAgICAgICAgICAgJ3N0YWNrZWRiYXInLFxyXG4gICAgICAgICAgICAgICAgJ3N0YWNrZWRsaW5lJyxcclxuICAgICAgICAgICAgICAgICdzdGFja2Vkc3BsaW5lJyxcclxuICAgICAgICAgICAgICAgICdzdGFja2Vkc3BsaW5lYXJlYScsXHJcbiAgICAgICAgICAgICAgICAnc3RlcGFyZWEnLFxyXG4gICAgICAgICAgICAgICAgJ3N0ZXBsaW5lJyxcclxuICAgICAgICAgICAgICAgICdzdG9jaycsXHJcbiAgICAgICAgICAgICAgICAndGFnRmllbGQnLFxyXG4gICAgICAgICAgICAgICAgJ3R5cGUnLFxyXG4gICAgICAgICAgICAgICAgJ3ZhbHVlRXJyb3JCYXInLFxyXG4gICAgICAgICAgICAgICAgJ3ZhbHVlRmllbGQnLFxyXG4gICAgICAgICAgICAgICAgJ3Zpc2libGUnLFxyXG4gICAgICAgICAgICAgICAgJ3dpZHRoJ1xyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICBzdHlsZXM6IFsnJ11cclxuICAgICAgICB9KSxcclxuICAgICAgICB0c2xpYl8xLl9fcGFyYW0oMCwgU2tpcFNlbGYoKSksIHRzbGliXzEuX19wYXJhbSgwLCBIb3N0KCkpLFxyXG4gICAgICAgIHRzbGliXzEuX19wYXJhbSgxLCBIb3N0KCkpLFxyXG4gICAgICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtOZXN0ZWRPcHRpb25Ib3N0LFxyXG4gICAgICAgICAgICBOZXN0ZWRPcHRpb25Ib3N0XSlcclxuICAgIF0sIER4b1NwbGluZUNvbXBvbmVudCk7XHJcbiAgICByZXR1cm4gRHhvU3BsaW5lQ29tcG9uZW50O1xyXG59KER4b0NoYXJ0Q29tbW9uU2VyaWVzU2V0dGluZ3MpKTtcclxuZXhwb3J0IHsgRHhvU3BsaW5lQ29tcG9uZW50IH07XHJcbnZhciBEeG9TcGxpbmVNb2R1bGUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBEeG9TcGxpbmVNb2R1bGUoKSB7XHJcbiAgICB9XHJcbiAgICBEeG9TcGxpbmVNb2R1bGUgPSB0c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgICAgIE5nTW9kdWxlKHtcclxuICAgICAgICAgICAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICAgICAgICAgICAgICBEeG9TcGxpbmVDb21wb25lbnRcclxuICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgZXhwb3J0czogW1xyXG4gICAgICAgICAgICAgICAgRHhvU3BsaW5lQ29tcG9uZW50XHJcbiAgICAgICAgICAgIF0sXHJcbiAgICAgICAgfSlcclxuICAgIF0sIER4b1NwbGluZU1vZHVsZSk7XHJcbiAgICByZXR1cm4gRHhvU3BsaW5lTW9kdWxlO1xyXG59KCkpO1xyXG5leHBvcnQgeyBEeG9TcGxpbmVNb2R1bGUgfTtcciJdfQ==