/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ViewEncapsulation } from '@angular/core';
import { LoadingBarService } from './loading-bar.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function LoadingBarComponent_ng_container_0_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 3);
    ɵngcc0.ɵɵelement(1, "div", 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵstyleProp("color", ctx_r2.color);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("width", ctx_r2.diameter)("height", ctx_r2.diameter);
} }
function LoadingBarComponent_ng_container_0_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 5);
    ɵngcc0.ɵɵelementStart(1, "div", 6);
    ɵngcc0.ɵɵelement(2, "div", 7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const progress_r1 = ɵngcc0.ɵɵnextContext().ngIf;
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("color", ctx_r3.color);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("background", ctx_r3.color, ɵngcc0.ɵɵdefaultStyleSanitizer)("height", ctx_r3.height)("width", progress_r1 + "%");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("height", ctx_r3.height);
} }
function LoadingBarComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, LoadingBarComponent_ng_container_0_div_1_Template, 2, 6, "div", 1);
    ɵngcc0.ɵɵtemplate(2, LoadingBarComponent_ng_container_0_div_2_Template, 3, 10, "div", 2);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.includeSpinner);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.includeBar);
} }
export class LoadingBarComponent {
    /**
     * @param {?} loader
     */
    constructor(loader) {
        this.loader = loader;
        this.includeSpinner = true;
        this.includeBar = true;
        this.fixed = true;
        this.value = null;
    }
}
LoadingBarComponent.ɵfac = function LoadingBarComponent_Factory(t) { return new (t || LoadingBarComponent)(ɵngcc0.ɵɵdirectiveInject(LoadingBarService)); };
LoadingBarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: LoadingBarComponent, selectors: [["ngx-loading-bar"]], hostVars: 2, hostBindings: function LoadingBarComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("loading-bar-fixed", ctx.fixed);
    } }, inputs: { includeSpinner: "includeSpinner", includeBar: "includeBar", fixed: "fixed", value: "value", color: "color", height: "height", diameter: "diameter" }, decls: 2, vars: 3, consts: [[4, "ngIf"], ["id", "loading-bar-spinner", 3, "color", 4, "ngIf"], ["id", "loading-bar", 3, "color", 4, "ngIf"], ["id", "loading-bar-spinner"], [1, "spinner-icon"], ["id", "loading-bar"], [1, "bar"], [1, "peg"]], template: function LoadingBarComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, LoadingBarComponent_ng_container_0_Template, 3, 2, "ng-container", 0);
        ɵngcc0.ɵɵpipe(1, "async");
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.value !== null ? ctx.value : ɵngcc0.ɵɵpipeBind1(1, 1, ctx.loader.progress$));
    } }, directives: [ɵngcc1.NgIf], pipes: [ɵngcc1.AsyncPipe], styles: ["[_nghost-%COMP%]{position:relative;display:block}.loading-bar-fixed[_nghost-%COMP%] > div[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%]{position:fixed}.loading-bar-fixed[_nghost-%COMP%] > div#loading-bar-spinner[_ngcontent-%COMP%]{position:fixed;top:10px;left:10px}[dir=rtl]   .loading-bar-fixed[_nghost-%COMP%] > div#loading-bar-spinner[_ngcontent-%COMP%]{right:10px;left:unset}.loading-bar-fixed[_nghost-%COMP%] > div[_ngcontent-%COMP%]   .peg[_ngcontent-%COMP%]{display:block}[_nghost-%COMP%] > div[_ngcontent-%COMP%]{pointer-events:none;transition:350ms linear;color:#29d}[_nghost-%COMP%] > div[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%]{transition:width 350ms;background:#29d;position:absolute;z-index:10002;top:0;left:0;width:100%;height:2px;border-bottom-right-radius:1px;border-top-right-radius:1px}[dir=rtl]   [_nghost-%COMP%] > div[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%]{right:0;left:unset}[_nghost-%COMP%] > div[_ngcontent-%COMP%]   .peg[_ngcontent-%COMP%]{display:none;position:absolute;width:70px;right:0;top:0;height:2px;opacity:.45;box-shadow:1px 0 6px 1px;color:inherit;border-radius:100%}[_nghost-%COMP%] > div#loading-bar-spinner[_ngcontent-%COMP%]{display:block;position:absolute;z-index:10002;top:5px;left:0}[_nghost-%COMP%] > div#loading-bar-spinner[_ngcontent-%COMP%]   .spinner-icon[_ngcontent-%COMP%]{width:14px;height:14px;border:2px solid transparent;border-top-color:inherit;border-left-color:inherit;border-radius:50%;-webkit-animation:.4s linear infinite loading-bar-spinner;animation:.4s linear infinite loading-bar-spinner}@-webkit-keyframes loading-bar-spinner{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes loading-bar-spinner{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}"] });
/** @nocollapse */
LoadingBarComponent.ctorParameters = () => [
    { type: LoadingBarService }
];
LoadingBarComponent.propDecorators = {
    includeSpinner: [{ type: Input }],
    includeBar: [{ type: Input }],
    fixed: [{ type: Input }],
    color: [{ type: Input }],
    height: [{ type: Input }],
    diameter: [{ type: Input }],
    value: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LoadingBarComponent, [{
        type: Component,
        args: [{
                selector: 'ngx-loading-bar',
                template: `
    <ng-container *ngIf="(value !== null ? value : loader.progress$|async) as progress">
      <div id="loading-bar-spinner" *ngIf="includeSpinner" [style.color]="color">
        <div [style.width]="diameter" [style.height]="diameter" class="spinner-icon"></div>
      </div>
      <div id="loading-bar" *ngIf="includeBar" [style.color]="color">
        <div class="bar" [style.background]="color" [style.height]="height" [style.width]="progress + '%'">
          <div class="peg" [style.height]="height"></div>
        </div>
      </div>
    </ng-container>
  `,
                preserveWhitespaces: false,
                encapsulation: ViewEncapsulation.Emulated,
                host: {
                    '[class.loading-bar-fixed]': 'fixed'
                },
                styles: [":host{position:relative;display:block}:host.loading-bar-fixed>div .bar{position:fixed}:host.loading-bar-fixed>div#loading-bar-spinner{position:fixed;top:10px;left:10px}[dir=rtl] :host.loading-bar-fixed>div#loading-bar-spinner{right:10px;left:unset}:host.loading-bar-fixed>div .peg{display:block}:host>div{pointer-events:none;transition:350ms linear;color:#29d}:host>div .bar{transition:width 350ms;background:#29d;position:absolute;z-index:10002;top:0;left:0;width:100%;height:2px;border-bottom-right-radius:1px;border-top-right-radius:1px}[dir=rtl] :host>div .bar{right:0;left:unset}:host>div .peg{display:none;position:absolute;width:70px;right:0;top:0;height:2px;opacity:.45;box-shadow:1px 0 6px 1px;color:inherit;border-radius:100%}:host>div#loading-bar-spinner{display:block;position:absolute;z-index:10002;top:5px;left:0}:host>div#loading-bar-spinner .spinner-icon{width:14px;height:14px;border:2px solid transparent;border-top-color:inherit;border-left-color:inherit;border-radius:50%;-webkit-animation:.4s linear infinite loading-bar-spinner;animation:.4s linear infinite loading-bar-spinner}@-webkit-keyframes loading-bar-spinner{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes loading-bar-spinner{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}"]
            }]
    }], function () { return [{ type: LoadingBarService }]; }, { includeSpinner: [{
            type: Input
        }], includeBar: [{
            type: Input
        }], fixed: [{
            type: Input
        }], value: [{
            type: Input
        }], color: [{
            type: Input
        }], height: [{
            type: Input
        }], diameter: [{
            type: Input
        }] }); })();
if (false) {
    /** @type {?} */
    LoadingBarComponent.prototype.includeSpinner;
    /** @type {?} */
    LoadingBarComponent.prototype.includeBar;
    /** @type {?} */
    LoadingBarComponent.prototype.fixed;
    /** @type {?} */
    LoadingBarComponent.prototype.color;
    /** @type {?} */
    LoadingBarComponent.prototype.height;
    /** @type {?} */
    LoadingBarComponent.prototype.diameter;
    /** @type {?} */
    LoadingBarComponent.prototype.value;
    /** @type {?} */
    LoadingBarComponent.prototype.loader;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9wbnNiL0Rlc2t0b3AvTU9BIC0gRS1LQU5NQVMvbm9kZV9tb2R1bGVzL0BuZ3gtbG9hZGluZy1iYXIvY29yZS9lc20yMDE1L2xvYWRpbmctYmFyLmNvbXBvbmVudC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU1BOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQVdDLG01REF1QkM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFhQSIsImZpbGUiOiJsb2FkaW5nLWJhci5jb21wb25lbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzLGV4dHJhUmVxdWlyZSxtaXNzaW5nUmV0dXJuLHVudXNlZFByaXZhdGVNZW1iZXJzLHVzZWxlc3NDb2RlfSBjaGVja2VkIGJ5IHRzY1xuICovXG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTG9hZGluZ0JhclNlcnZpY2UgfSBmcm9tICcuL2xvYWRpbmctYmFyLnNlcnZpY2UnO1xuZXhwb3J0IGNsYXNzIExvYWRpbmdCYXJDb21wb25lbnQge1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7P30gbG9hZGVyXG4gICAgICovXG4gICAgY29uc3RydWN0b3IobG9hZGVyKSB7XG4gICAgICAgIHRoaXMubG9hZGVyID0gbG9hZGVyO1xuICAgICAgICB0aGlzLmluY2x1ZGVTcGlubmVyID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5pbmNsdWRlQmFyID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5maXhlZCA9IHRydWU7XG4gICAgICAgIHRoaXMudmFsdWUgPSBudWxsO1xuICAgIH1cbn1cbkxvYWRpbmdCYXJDb21wb25lbnQuZGVjb3JhdG9ycyA9IFtcbiAgICB7IHR5cGU6IENvbXBvbmVudCwgYXJnczogW3tcbiAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ25neC1sb2FkaW5nLWJhcicsXG4gICAgICAgICAgICAgICAgdGVtcGxhdGU6IGBcbiAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiKHZhbHVlICE9PSBudWxsID8gdmFsdWUgOiBsb2FkZXIucHJvZ3Jlc3MkfGFzeW5jKSBhcyBwcm9ncmVzc1wiPlxuICAgICAgPGRpdiBpZD1cImxvYWRpbmctYmFyLXNwaW5uZXJcIiAqbmdJZj1cImluY2x1ZGVTcGlubmVyXCIgW3N0eWxlLmNvbG9yXT1cImNvbG9yXCI+XG4gICAgICAgIDxkaXYgW3N0eWxlLndpZHRoXT1cImRpYW1ldGVyXCIgW3N0eWxlLmhlaWdodF09XCJkaWFtZXRlclwiIGNsYXNzPVwic3Bpbm5lci1pY29uXCI+PC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgaWQ9XCJsb2FkaW5nLWJhclwiICpuZ0lmPVwiaW5jbHVkZUJhclwiIFtzdHlsZS5jb2xvcl09XCJjb2xvclwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiYmFyXCIgW3N0eWxlLmJhY2tncm91bmRdPVwiY29sb3JcIiBbc3R5bGUuaGVpZ2h0XT1cImhlaWdodFwiIFtzdHlsZS53aWR0aF09XCJwcm9ncmVzcyArICclJ1wiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJwZWdcIiBbc3R5bGUuaGVpZ2h0XT1cImhlaWdodFwiPjwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvbmctY29udGFpbmVyPlxuICBgLFxuICAgICAgICAgICAgICAgIHByZXNlcnZlV2hpdGVzcGFjZXM6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLkVtdWxhdGVkLFxuICAgICAgICAgICAgICAgIGhvc3Q6IHtcbiAgICAgICAgICAgICAgICAgICAgJ1tjbGFzcy5sb2FkaW5nLWJhci1maXhlZF0nOiAnZml4ZWQnLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgc3R5bGVzOiBbXCI6aG9zdHtwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5OmJsb2NrfTpob3N0LmxvYWRpbmctYmFyLWZpeGVkPmRpdiAuYmFye3Bvc2l0aW9uOmZpeGVkfTpob3N0LmxvYWRpbmctYmFyLWZpeGVkPmRpdiNsb2FkaW5nLWJhci1zcGlubmVye3Bvc2l0aW9uOmZpeGVkO3RvcDoxMHB4O2xlZnQ6MTBweH1bZGlyPXJ0bF0gOmhvc3QubG9hZGluZy1iYXItZml4ZWQ+ZGl2I2xvYWRpbmctYmFyLXNwaW5uZXJ7cmlnaHQ6MTBweDtsZWZ0OnVuc2V0fTpob3N0LmxvYWRpbmctYmFyLWZpeGVkPmRpdiAucGVne2Rpc3BsYXk6YmxvY2t9Omhvc3Q+ZGl2e3BvaW50ZXItZXZlbnRzOm5vbmU7dHJhbnNpdGlvbjozNTBtcyBsaW5lYXI7Y29sb3I6IzI5ZH06aG9zdD5kaXYgLmJhcnt0cmFuc2l0aW9uOndpZHRoIDM1MG1zO2JhY2tncm91bmQ6IzI5ZDtwb3NpdGlvbjphYnNvbHV0ZTt6LWluZGV4OjEwMDAyO3RvcDowO2xlZnQ6MDt3aWR0aDoxMDAlO2hlaWdodDoycHg7Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6MXB4O2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjFweH1bZGlyPXJ0bF0gOmhvc3Q+ZGl2IC5iYXJ7cmlnaHQ6MDtsZWZ0OnVuc2V0fTpob3N0PmRpdiAucGVne2Rpc3BsYXk6bm9uZTtwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDo3MHB4O3JpZ2h0OjA7dG9wOjA7aGVpZ2h0OjJweDtvcGFjaXR5Oi40NTtib3gtc2hhZG93OjFweCAwIDZweCAxcHg7Y29sb3I6aW5oZXJpdDtib3JkZXItcmFkaXVzOjEwMCV9Omhvc3Q+ZGl2I2xvYWRpbmctYmFyLXNwaW5uZXJ7ZGlzcGxheTpibG9jaztwb3NpdGlvbjphYnNvbHV0ZTt6LWluZGV4OjEwMDAyO3RvcDo1cHg7bGVmdDowfTpob3N0PmRpdiNsb2FkaW5nLWJhci1zcGlubmVyIC5zcGlubmVyLWljb257d2lkdGg6MTRweDtoZWlnaHQ6MTRweDtib3JkZXI6MnB4IHNvbGlkIHRyYW5zcGFyZW50O2JvcmRlci10b3AtY29sb3I6aW5oZXJpdDtib3JkZXItbGVmdC1jb2xvcjppbmhlcml0O2JvcmRlci1yYWRpdXM6NTAlOy13ZWJraXQtYW5pbWF0aW9uOi40cyBsaW5lYXIgaW5maW5pdGUgbG9hZGluZy1iYXItc3Bpbm5lcjthbmltYXRpb246LjRzIGxpbmVhciBpbmZpbml0ZSBsb2FkaW5nLWJhci1zcGlubmVyfUAtd2Via2l0LWtleWZyYW1lcyBsb2FkaW5nLWJhci1zcGlubmVyezAley13ZWJraXQtdHJhbnNmb3JtOnJvdGF0ZSgwKTt0cmFuc2Zvcm06cm90YXRlKDApfTEwMCV7LXdlYmtpdC10cmFuc2Zvcm06cm90YXRlKDM2MGRlZyk7dHJhbnNmb3JtOnJvdGF0ZSgzNjBkZWcpfX1Aa2V5ZnJhbWVzIGxvYWRpbmctYmFyLXNwaW5uZXJ7MCV7LXdlYmtpdC10cmFuc2Zvcm06cm90YXRlKDApO3RyYW5zZm9ybTpyb3RhdGUoMCl9MTAwJXstd2Via2l0LXRyYW5zZm9ybTpyb3RhdGUoMzYwZGVnKTt0cmFuc2Zvcm06cm90YXRlKDM2MGRlZyl9fVwiXVxuICAgICAgICAgICAgfV0gfVxuXTtcbi8qKiBAbm9jb2xsYXBzZSAqL1xuTG9hZGluZ0JhckNvbXBvbmVudC5jdG9yUGFyYW1ldGVycyA9ICgpID0+IFtcbiAgICB7IHR5cGU6IExvYWRpbmdCYXJTZXJ2aWNlIH1cbl07XG5Mb2FkaW5nQmFyQ29tcG9uZW50LnByb3BEZWNvcmF0b3JzID0ge1xuICAgIGluY2x1ZGVTcGlubmVyOiBbeyB0eXBlOiBJbnB1dCB9XSxcbiAgICBpbmNsdWRlQmFyOiBbeyB0eXBlOiBJbnB1dCB9XSxcbiAgICBmaXhlZDogW3sgdHlwZTogSW5wdXQgfV0sXG4gICAgY29sb3I6IFt7IHR5cGU6IElucHV0IH1dLFxuICAgIGhlaWdodDogW3sgdHlwZTogSW5wdXQgfV0sXG4gICAgZGlhbWV0ZXI6IFt7IHR5cGU6IElucHV0IH1dLFxuICAgIHZhbHVlOiBbeyB0eXBlOiBJbnB1dCB9XVxufTtcbmlmIChmYWxzZSkge1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBMb2FkaW5nQmFyQ29tcG9uZW50LnByb3RvdHlwZS5pbmNsdWRlU3Bpbm5lcjtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTG9hZGluZ0JhckNvbXBvbmVudC5wcm90b3R5cGUuaW5jbHVkZUJhcjtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTG9hZGluZ0JhckNvbXBvbmVudC5wcm90b3R5cGUuZml4ZWQ7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIExvYWRpbmdCYXJDb21wb25lbnQucHJvdG90eXBlLmNvbG9yO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBMb2FkaW5nQmFyQ29tcG9uZW50LnByb3RvdHlwZS5oZWlnaHQ7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIExvYWRpbmdCYXJDb21wb25lbnQucHJvdG90eXBlLmRpYW1ldGVyO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBMb2FkaW5nQmFyQ29tcG9uZW50LnByb3RvdHlwZS52YWx1ZTtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTG9hZGluZ0JhckNvbXBvbmVudC5wcm90b3R5cGUubG9hZGVyO1xufVxuIl19