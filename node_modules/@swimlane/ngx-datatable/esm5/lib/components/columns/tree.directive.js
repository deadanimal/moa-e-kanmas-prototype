/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, TemplateRef } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
var DataTableColumnCellTreeToggle = /** @class */ (function () {
    function DataTableColumnCellTreeToggle(template) {
        this.template = template;
    }
    /** @nocollapse */
    DataTableColumnCellTreeToggle.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
DataTableColumnCellTreeToggle.ɵfac = function DataTableColumnCellTreeToggle_Factory(t) { return new (t || DataTableColumnCellTreeToggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };
DataTableColumnCellTreeToggle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DataTableColumnCellTreeToggle, selectors: [["", "ngx-datatable-tree-toggle", ""]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTableColumnCellTreeToggle, [{
        type: Directive,
        args: [{ selector: '[ngx-datatable-tree-toggle]' }]
    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();
    return DataTableColumnCellTreeToggle;
}());
export { DataTableColumnCellTreeToggle };
if (false) {
    /** @type {?} */
    DataTableColumnCellTreeToggle.prototype.template;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9wbnNiL0Rlc2t0b3AvTU9BIC0gRS1LQU5NQVMvbm9kZV9tb2R1bGVzL0Bzd2ltbGFuZS9uZ3gtZGF0YXRhYmxlL2VzbTUvbGliL2NvbXBvbmVudHMvY29sdW1ucy90cmVlLmRpcmVjdGl2ZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0FBS0E7OztLQUdLLEFBR0M7Ozs7Ozs7Ozs7NEVBSUciLCJmaWxlIjoidHJlZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzLGNvbnN0YW50UHJvcGVydHksZXh0cmFSZXF1aXJlLG1pc3NpbmdPdmVycmlkZSxtaXNzaW5nUmV0dXJuLHVudXNlZFByaXZhdGVNZW1iZXJzLHVzZWxlc3NDb2RlfSBjaGVja2VkIGJ5IHRzY1xuICovXG5pbXBvcnQgeyBEaXJlY3RpdmUsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG52YXIgRGF0YVRhYmxlQ29sdW1uQ2VsbFRyZWVUb2dnbGUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gRGF0YVRhYmxlQ29sdW1uQ2VsbFRyZWVUb2dnbGUodGVtcGxhdGUpIHtcbiAgICAgICAgdGhpcy50ZW1wbGF0ZSA9IHRlbXBsYXRlO1xuICAgIH1cbiAgICBEYXRhVGFibGVDb2x1bW5DZWxsVHJlZVRvZ2dsZS5kZWNvcmF0b3JzID0gW1xuICAgICAgICB7IHR5cGU6IERpcmVjdGl2ZSwgYXJnczogW3sgc2VsZWN0b3I6ICdbbmd4LWRhdGF0YWJsZS10cmVlLXRvZ2dsZV0nIH0sXSB9XG4gICAgXTtcbiAgICAvKiogQG5vY29sbGFwc2UgKi9cbiAgICBEYXRhVGFibGVDb2x1bW5DZWxsVHJlZVRvZ2dsZS5jdG9yUGFyYW1ldGVycyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFtcbiAgICAgICAgeyB0eXBlOiBUZW1wbGF0ZVJlZiB9XG4gICAgXTsgfTtcbiAgICByZXR1cm4gRGF0YVRhYmxlQ29sdW1uQ2VsbFRyZWVUb2dnbGU7XG59KCkpO1xuZXhwb3J0IHsgRGF0YVRhYmxlQ29sdW1uQ2VsbFRyZWVUb2dnbGUgfTtcbmlmIChmYWxzZSkge1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBEYXRhVGFibGVDb2x1bW5DZWxsVHJlZVRvZ2dsZS5wcm90b3R5cGUudGVtcGxhdGU7XG59XG4iXX0=