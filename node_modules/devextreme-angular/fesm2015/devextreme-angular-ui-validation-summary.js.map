{"version":3,"sources":["/Users/pnsb/Desktop/MOA - E-KANMAS/node_modules/devextreme-angular/fesm2015/devextreme-angular-ui-validation-summary.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6LAmGE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2CAiFyC,AAWxC;;;;;;;;;;;;;;;;;EAQD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAkB4B","file":"devextreme-angular-ui-validation-summary.js","sourcesContent":["import { __decorate, __metadata, __param } from 'tslib';\nimport { TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, EventEmitter, ContentChildren, QueryList, Component, NgModule } from '@angular/core';\nimport DxValidationSummary from 'devextreme/ui/validation_summary';\nimport { DxComponent, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\nimport { DxiItemComponent, DxiItemModule } from 'devextreme-angular/ui/nested';\n\n/*!\r\n * devextreme-angular\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\n/**\r\n * A widget for displaying the result of checking validation rules for editors.\r\n */\r\nlet DxValidationSummaryComponent = class DxValidationSummaryComponent extends DxComponent {\r\n    constructor(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n        this._watcherHelper = _watcherHelper;\r\n        this._idh = _idh;\r\n        this._createEventEmitters([\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'itemClick', emit: 'onItemClick' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'itemsChange' },\r\n            { emit: 'itemTemplateChange' },\r\n            { emit: 'validationGroupChange' }\r\n        ]);\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    get elementAttr() {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n    /**\r\n     * Specifies whether the widget changes its state when a user pauses on it.\r\n     */\r\n    get hoverStateEnabled() {\r\n        return this._getOption('hoverStateEnabled');\r\n    }\r\n    set hoverStateEnabled(value) {\r\n        this._setOption('hoverStateEnabled', value);\r\n    }\r\n    /**\r\n     * An array of items displayed by the widget.\r\n     */\r\n    get items() {\r\n        return this._getOption('items');\r\n    }\r\n    set items(value) {\r\n        this._setOption('items', value);\r\n    }\r\n    /**\r\n     * Specifies a custom template for items.\r\n     */\r\n    get itemTemplate() {\r\n        return this._getOption('itemTemplate');\r\n    }\r\n    set itemTemplate(value) {\r\n        this._setOption('itemTemplate', value);\r\n    }\r\n    /**\r\n     * Specifies the validation group for which summary should be generated.\r\n     */\r\n    get validationGroup() {\r\n        return this._getOption('validationGroup');\r\n    }\r\n    set validationGroup(value) {\r\n        this._setOption('validationGroup', value);\r\n    }\r\n    get itemsChildren() {\r\n        return this._getOption('items');\r\n    }\r\n    set itemsChildren(value) {\r\n        this.setChildren('items', value);\r\n    }\r\n    _createInstance(element, options) {\r\n        return new DxValidationSummary(element, options);\r\n    }\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n    ngOnChanges(changes) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('items', changes);\r\n    }\r\n    setupChanges(prop, changes) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n    ngDoCheck() {\r\n        this._idh.doCheck('items');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n    _setOption(name, value) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n};\r\nDxValidationSummaryComponent.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: NgZone },\r\n    { type: DxTemplateHost },\r\n    { type: WatcherHelper },\r\n    { type: IterableDifferHelper },\r\n    { type: NestedOptionHost },\r\n    { type: TransferState },\r\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\r\n];\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], DxValidationSummaryComponent.prototype, \"elementAttr\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean),\r\n    __metadata(\"design:paramtypes\", [Boolean])\r\n], DxValidationSummaryComponent.prototype, \"hoverStateEnabled\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Array),\r\n    __metadata(\"design:paramtypes\", [Array])\r\n], DxValidationSummaryComponent.prototype, \"items\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], DxValidationSummaryComponent.prototype, \"itemTemplate\", null);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String),\r\n    __metadata(\"design:paramtypes\", [String])\r\n], DxValidationSummaryComponent.prototype, \"validationGroup\", null);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxValidationSummaryComponent.prototype, \"onContentReady\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxValidationSummaryComponent.prototype, \"onDisposing\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxValidationSummaryComponent.prototype, \"onInitialized\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxValidationSummaryComponent.prototype, \"onItemClick\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxValidationSummaryComponent.prototype, \"onOptionChanged\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxValidationSummaryComponent.prototype, \"elementAttrChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxValidationSummaryComponent.prototype, \"hoverStateEnabledChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxValidationSummaryComponent.prototype, \"itemsChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxValidationSummaryComponent.prototype, \"itemTemplateChange\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", EventEmitter)\r\n], DxValidationSummaryComponent.prototype, \"validationGroupChange\", void 0);\r\n__decorate([\r\n    ContentChildren(DxiItemComponent),\r\n    __metadata(\"design:type\", QueryList),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], DxValidationSummaryComponent.prototype, \"itemsChildren\", null);\r\nDxValidationSummaryComponent = __decorate([\r\n    Component({\r\n        selector: 'dx-validation-summary',\r\n        template: '',\r\n        providers: [\r\n            DxTemplateHost,\r\n            WatcherHelper,\r\n            NestedOptionHost,\r\n            IterableDifferHelper\r\n        ]\r\n    }),\r\n    __param(7, Inject(PLATFORM_ID)),\r\n    __metadata(\"design:paramtypes\", [ElementRef, NgZone, DxTemplateHost,\r\n        WatcherHelper,\r\n        IterableDifferHelper,\r\n        NestedOptionHost,\r\n        TransferState, Object])\r\n], DxValidationSummaryComponent);\r\nlet DxValidationSummaryModule = class DxValidationSummaryModule {\r\n};\r\nDxValidationSummaryModule = __decorate([\r\n    NgModule({\r\n        imports: [\r\n            DxiItemModule,\r\n            DxIntegrationModule,\r\n            DxTemplateModule,\r\n            BrowserTransferStateModule\r\n        ],\r\n        declarations: [\r\n            DxValidationSummaryComponent\r\n        ],\r\n        exports: [\r\n            DxValidationSummaryComponent,\r\n            DxiItemModule,\r\n            DxTemplateModule\r\n        ]\r\n    })\r\n], DxValidationSummaryModule);\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DxValidationSummaryComponent, DxValidationSummaryModule };\n"]}