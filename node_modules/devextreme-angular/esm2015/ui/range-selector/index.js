/*!
 * devextreme-angular
 * Version: 19.2.6
 * Build date: Thu Jan 30 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
/* tslint:disable:max-line-length */
import { BrowserTransferStateModule } from '@angular/platform-browser';
import { TransferState } from '@angular/platform-browser';
import { Component, NgModule, ElementRef, NgZone, PLATFORM_ID, Inject, Input, Output, OnDestroy, EventEmitter, forwardRef, HostListener, OnChanges, DoCheck, SimpleChanges } from '@angular/core';
import DxRangeSelector from 'devextreme/viz/range_selector';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { DxComponent, DxTemplateHost, DxIntegrationModule, DxTemplateModule, NestedOptionHost, IterableDifferHelper, WatcherHelper } from 'devextreme-angular/core';
import { DxoBackgroundModule } from 'devextreme-angular/ui/nested';
import { DxoImageModule } from 'devextreme-angular/ui/nested';
import { DxoBehaviorModule } from 'devextreme-angular/ui/nested';
import { DxoChartModule } from 'devextreme-angular/ui/nested';
import { DxoCommonSeriesSettingsModule } from 'devextreme-angular/ui/nested';
import { DxoAggregationModule } from 'devextreme-angular/ui/nested';
import { DxoAreaModule } from 'devextreme-angular/ui/nested';
import { DxoBorderModule } from 'devextreme-angular/ui/nested';
import { DxoHoverStyleModule } from 'devextreme-angular/ui/nested';
import { DxoHatchingModule } from 'devextreme-angular/ui/nested';
import { DxoLabelModule } from 'devextreme-angular/ui/nested';
import { DxoConnectorModule } from 'devextreme-angular/ui/nested';
import { DxoPointModule } from 'devextreme-angular/ui/nested';
import { DxoHeightModule } from 'devextreme-angular/ui/nested';
import { DxoUrlModule } from 'devextreme-angular/ui/nested';
import { DxoWidthModule } from 'devextreme-angular/ui/nested';
import { DxoSelectionStyleModule } from 'devextreme-angular/ui/nested';
import { DxoReductionModule } from 'devextreme-angular/ui/nested';
import { DxoValueErrorBarModule } from 'devextreme-angular/ui/nested';
import { DxoBarModule } from 'devextreme-angular/ui/nested';
import { DxoBubbleModule } from 'devextreme-angular/ui/nested';
import { DxoCandlestickModule } from 'devextreme-angular/ui/nested';
import { DxoFullstackedareaModule } from 'devextreme-angular/ui/nested';
import { DxoFullstackedbarModule } from 'devextreme-angular/ui/nested';
import { DxoFullstackedlineModule } from 'devextreme-angular/ui/nested';
import { DxoFullstackedsplineModule } from 'devextreme-angular/ui/nested';
import { DxoFullstackedsplineareaModule } from 'devextreme-angular/ui/nested';
import { DxoArgumentFormatModule } from 'devextreme-angular/ui/nested';
import { DxoFontModule } from 'devextreme-angular/ui/nested';
import { DxoFormatModule } from 'devextreme-angular/ui/nested';
import { DxoLineModule } from 'devextreme-angular/ui/nested';
import { DxoRangeareaModule } from 'devextreme-angular/ui/nested';
import { DxoRangebarModule } from 'devextreme-angular/ui/nested';
import { DxoScatterModule } from 'devextreme-angular/ui/nested';
import { DxoSplineModule } from 'devextreme-angular/ui/nested';
import { DxoSplineareaModule } from 'devextreme-angular/ui/nested';
import { DxoStackedareaModule } from 'devextreme-angular/ui/nested';
import { DxoStackedbarModule } from 'devextreme-angular/ui/nested';
import { DxoStackedlineModule } from 'devextreme-angular/ui/nested';
import { DxoStackedsplineModule } from 'devextreme-angular/ui/nested';
import { DxoStackedsplineareaModule } from 'devextreme-angular/ui/nested';
import { DxoStepareaModule } from 'devextreme-angular/ui/nested';
import { DxoSteplineModule } from 'devextreme-angular/ui/nested';
import { DxoStockModule } from 'devextreme-angular/ui/nested';
import { DxoDataPrepareSettingsModule } from 'devextreme-angular/ui/nested';
import { DxiSeriesModule } from 'devextreme-angular/ui/nested';
import { DxoSeriesTemplateModule } from 'devextreme-angular/ui/nested';
import { DxoValueAxisModule } from 'devextreme-angular/ui/nested';
import { DxoExportModule } from 'devextreme-angular/ui/nested';
import { DxoIndentModule } from 'devextreme-angular/ui/nested';
import { DxoLoadingIndicatorModule } from 'devextreme-angular/ui/nested';
import { DxoMarginModule } from 'devextreme-angular/ui/nested';
import { DxoScaleModule } from 'devextreme-angular/ui/nested';
import { DxoAggregationIntervalModule } from 'devextreme-angular/ui/nested';
import { DxiBreakModule } from 'devextreme-angular/ui/nested';
import { DxoBreakStyleModule } from 'devextreme-angular/ui/nested';
import { DxoMarkerModule } from 'devextreme-angular/ui/nested';
import { DxoMaxRangeModule } from 'devextreme-angular/ui/nested';
import { DxoMinorTickModule } from 'devextreme-angular/ui/nested';
import { DxoMinorTickIntervalModule } from 'devextreme-angular/ui/nested';
import { DxoMinRangeModule } from 'devextreme-angular/ui/nested';
import { DxoTickModule } from 'devextreme-angular/ui/nested';
import { DxoTickIntervalModule } from 'devextreme-angular/ui/nested';
import { DxoShutterModule } from 'devextreme-angular/ui/nested';
import { DxoSizeModule } from 'devextreme-angular/ui/nested';
import { DxoSliderHandleModule } from 'devextreme-angular/ui/nested';
import { DxoSliderMarkerModule } from 'devextreme-angular/ui/nested';
import { DxoTitleModule } from 'devextreme-angular/ui/nested';
import { DxoSubtitleModule } from 'devextreme-angular/ui/nested';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'devextreme-angular/core';
import * as ɵngcc2 from '@angular/platform-browser';
const CUSTOM_VALUE_ACCESSOR_PROVIDER = {
    provide: NG_VALUE_ACCESSOR,
    useExisting: forwardRef(() => DxRangeSelectorComponent),
    multi: true
};
/**
 * The RangeSelector is a widget that allows a user to select a range of values on a scale.
 */
let DxRangeSelectorComponent = class DxRangeSelectorComponent extends DxComponent {
    constructor(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {
        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);
        this._watcherHelper = _watcherHelper;
        this._idh = _idh;
        this.touched = (_) => { };
        this._createEventEmitters([
            { subscribe: 'disposing', emit: 'onDisposing' },
            { subscribe: 'drawn', emit: 'onDrawn' },
            { subscribe: 'exported', emit: 'onExported' },
            { subscribe: 'exporting', emit: 'onExporting' },
            { subscribe: 'fileSaving', emit: 'onFileSaving' },
            { subscribe: 'incidentOccurred', emit: 'onIncidentOccurred' },
            { subscribe: 'initialized', emit: 'onInitialized' },
            { subscribe: 'optionChanged', emit: 'onOptionChanged' },
            { subscribe: 'valueChanged', emit: 'onValueChanged' },
            { emit: 'backgroundChange' },
            { emit: 'behaviorChange' },
            { emit: 'chartChange' },
            { emit: 'containerBackgroundColorChange' },
            { emit: 'dataSourceChange' },
            { emit: 'dataSourceFieldChange' },
            { emit: 'disabledChange' },
            { emit: 'elementAttrChange' },
            { emit: 'exportChange' },
            { emit: 'indentChange' },
            { emit: 'loadingIndicatorChange' },
            { emit: 'marginChange' },
            { emit: 'pathModifiedChange' },
            { emit: 'redrawOnResizeChange' },
            { emit: 'rtlEnabledChange' },
            { emit: 'scaleChange' },
            { emit: 'selectedRangeColorChange' },
            { emit: 'selectedRangeUpdateModeChange' },
            { emit: 'shutterChange' },
            { emit: 'sizeChange' },
            { emit: 'sliderHandleChange' },
            { emit: 'sliderMarkerChange' },
            { emit: 'themeChange' },
            { emit: 'titleChange' },
            { emit: 'valueChange' },
            { emit: 'onBlur' }
        ]);
        this._idh.setHost(this);
        optionHost.setHost(this);
    }
    /**
     * Specifies the options for the range selector's background.
     */
    get background() {
        return this._getOption('background');
    }
    set background(value) {
        this._setOption('background', value);
    }
    /**
     * Specifies the RangeSelector's behavior options.
     */
    get behavior() {
        return this._getOption('behavior');
    }
    set behavior(value) {
        this._setOption('behavior', value);
    }
    /**
     * Specifies the options required to display a chart as the range selector's background.
     */
    get chart() {
        return this._getOption('chart');
    }
    set chart(value) {
        this._setOption('chart', value);
    }
    /**
     * Specifies the color of the parent page element.
     */
    get containerBackgroundColor() {
        return this._getOption('containerBackgroundColor');
    }
    set containerBackgroundColor(value) {
        this._setOption('containerBackgroundColor', value);
    }
    /**
     * Specifies a data source for the scale values and for the chart at the background.
     */
    get dataSource() {
        return this._getOption('dataSource');
    }
    set dataSource(value) {
        this._setOption('dataSource', value);
    }
    /**
     * Specifies the data source field that provides data for the scale.
     */
    get dataSourceField() {
        return this._getOption('dataSourceField');
    }
    set dataSourceField(value) {
        this._setOption('dataSourceField', value);
    }
    /**
     * Specifies whether the widget responds to the user interaction.
     */
    get disabled() {
        return this._getOption('disabled');
    }
    set disabled(value) {
        this._setOption('disabled', value);
    }
    /**
     * Specifies the attributes to be attached to the widget's root element.
     */
    get elementAttr() {
        return this._getOption('elementAttr');
    }
    set elementAttr(value) {
        this._setOption('elementAttr', value);
    }
    /**
     * Configures the exporting and printing features.
     */
    get export() {
        return this._getOption('export');
    }
    set export(value) {
        this._setOption('export', value);
    }
    /**
     * Range selector's indent options.
     */
    get indent() {
        return this._getOption('indent');
    }
    set indent(value) {
        this._setOption('indent', value);
    }
    /**
     * Configures the loading indicator.
     */
    get loadingIndicator() {
        return this._getOption('loadingIndicator');
    }
    set loadingIndicator(value) {
        this._setOption('loadingIndicator', value);
    }
    /**
     * Generates space around the widget.
     */
    get margin() {
        return this._getOption('margin');
    }
    set margin(value) {
        this._setOption('margin', value);
    }
    /**
     * Notifies the widget that it is embedded into an HTML page that uses a tag modifying the path.
     */
    get pathModified() {
        return this._getOption('pathModified');
    }
    set pathModified(value) {
        this._setOption('pathModified', value);
    }
    /**
     * Specifies whether to redraw the widget when the size of the parent browser window changes or a mobile device rotates.
     */
    get redrawOnResize() {
        return this._getOption('redrawOnResize');
    }
    set redrawOnResize(value) {
        this._setOption('redrawOnResize', value);
    }
    /**
     * Switches the widget to a right-to-left representation.
     */
    get rtlEnabled() {
        return this._getOption('rtlEnabled');
    }
    set rtlEnabled(value) {
        this._setOption('rtlEnabled', value);
    }
    /**
     * Specifies options of the range selector's scale.
     */
    get scale() {
        return this._getOption('scale');
    }
    set scale(value) {
        this._setOption('scale', value);
    }
    /**
     * Specifies the color of the selected range.
     */
    get selectedRangeColor() {
        return this._getOption('selectedRangeColor');
    }
    set selectedRangeColor(value) {
        this._setOption('selectedRangeColor', value);
    }
    /**
     * Specifies how the selected range should behave when data is updated. Applies only when the RangeSelector is bound to a data source.
     */
    get selectedRangeUpdateMode() {
        return this._getOption('selectedRangeUpdateMode');
    }
    set selectedRangeUpdateMode(value) {
        this._setOption('selectedRangeUpdateMode', value);
    }
    /**
     * Specifies range selector shutter options.
     */
    get shutter() {
        return this._getOption('shutter');
    }
    set shutter(value) {
        this._setOption('shutter', value);
    }
    /**
     * Specifies the widget's size in pixels.
     */
    get size() {
        return this._getOption('size');
    }
    set size(value) {
        this._setOption('size', value);
    }
    /**
     * Specifies the appearance of the range selector's slider handles.
     */
    get sliderHandle() {
        return this._getOption('sliderHandle');
    }
    set sliderHandle(value) {
        this._setOption('sliderHandle', value);
    }
    /**
     * Defines the options of the range selector slider markers.
     */
    get sliderMarker() {
        return this._getOption('sliderMarker');
    }
    set sliderMarker(value) {
        this._setOption('sliderMarker', value);
    }
    /**
     * Sets the name of the theme the widget uses.
     */
    get theme() {
        return this._getOption('theme');
    }
    set theme(value) {
        this._setOption('theme', value);
    }
    /**
     * Configures the widget's title.
     */
    get title() {
        return this._getOption('title');
    }
    set title(value) {
        this._setOption('title', value);
    }
    /**
     * The selected range (initial or current). Equals the entire scale when not set.
     */
    get value() {
        return this._getOption('value');
    }
    set value(value) {
        this._setOption('value', value);
    }
    change(_) { }
    _createInstance(element, options) {
        return new DxRangeSelector(element, options);
    }
    writeValue(value) {
        this.eventHelper.lockedValueChangeEvent = true;
        this.value = value;
        this.eventHelper.lockedValueChangeEvent = false;
    }
    registerOnChange(fn) { this.change = fn; }
    registerOnTouched(fn) { this.touched = fn; }
    _createWidget(element) {
        super._createWidget(element);
        this.instance.on('focusOut', (e) => {
            this.eventHelper.fireNgEvent('onBlur', [e]);
        });
    }
    ngOnDestroy() {
        this._destroyWidget();
    }
    ngOnChanges(changes) {
        super.ngOnChanges(changes);
        this.setupChanges('dataSource', changes);
        this.setupChanges('value', changes);
    }
    setupChanges(prop, changes) {
        if (!(prop in this._optionsToUpdate)) {
            this._idh.setup(prop, changes);
        }
    }
    ngDoCheck() {
        this._idh.doCheck('dataSource');
        this._idh.doCheck('value');
        this._watcherHelper.checkWatchers();
        super.ngDoCheck();
        super.clearChangedOptions();
    }
    _setOption(name, value) {
        let isSetup = this._idh.setupSingle(name, value);
        let isChanged = this._idh.getChanges(name, value) !== null;
        if (isSetup || isChanged) {
            super._setOption(name, value);
        }
    }
};
DxRangeSelectorComponent.ɵfac = function DxRangeSelectorComponent_Factory(t) { return new (t || DxRangeSelectorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DxTemplateHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.WatcherHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.IterableDifferHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TransferState), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID)); };
DxRangeSelectorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxRangeSelectorComponent, selectors: [["dx-range-selector"]], hostBindings: function DxRangeSelectorComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("onBlur", function DxRangeSelectorComponent_onBlur_HostBindingHandler($event) { return ctx.touched($event); })("valueChange", function DxRangeSelectorComponent_valueChange_HostBindingHandler($event) { return ctx.change($event); });
    } }, inputs: { background: "background", behavior: "behavior", chart: "chart", containerBackgroundColor: "containerBackgroundColor", dataSource: "dataSource", dataSourceField: "dataSourceField", disabled: "disabled", elementAttr: "elementAttr", export: "export", indent: "indent", loadingIndicator: "loadingIndicator", margin: "margin", pathModified: "pathModified", redrawOnResize: "redrawOnResize", rtlEnabled: "rtlEnabled", scale: "scale", selectedRangeColor: "selectedRangeColor", selectedRangeUpdateMode: "selectedRangeUpdateMode", shutter: "shutter", size: "size", sliderHandle: "sliderHandle", sliderMarker: "sliderMarker", theme: "theme", title: "title", value: "value" }, outputs: { onDisposing: "onDisposing", onDrawn: "onDrawn", onExported: "onExported", onExporting: "onExporting", onFileSaving: "onFileSaving", onIncidentOccurred: "onIncidentOccurred", onInitialized: "onInitialized", onOptionChanged: "onOptionChanged", onValueChanged: "onValueChanged", backgroundChange: "backgroundChange", behaviorChange: "behaviorChange", chartChange: "chartChange", containerBackgroundColorChange: "containerBackgroundColorChange", dataSourceChange: "dataSourceChange", dataSourceFieldChange: "dataSourceFieldChange", disabledChange: "disabledChange", elementAttrChange: "elementAttrChange", exportChange: "exportChange", indentChange: "indentChange", loadingIndicatorChange: "loadingIndicatorChange", marginChange: "marginChange", pathModifiedChange: "pathModifiedChange", redrawOnResizeChange: "redrawOnResizeChange", rtlEnabledChange: "rtlEnabledChange", scaleChange: "scaleChange", selectedRangeColorChange: "selectedRangeColorChange", selectedRangeUpdateModeChange: "selectedRangeUpdateModeChange", shutterChange: "shutterChange", sizeChange: "sizeChange", sliderHandleChange: "sliderHandleChange", sliderMarkerChange: "sliderMarkerChange", themeChange: "themeChange", titleChange: "titleChange", valueChange: "valueChange", onBlur: "onBlur" }, features: [ɵngcc0.ɵɵProvidersFeature([
            DxTemplateHost,
            WatcherHelper,
            CUSTOM_VALUE_ACCESSOR_PROVIDER,
            NestedOptionHost,
            IterableDifferHelper
        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature()], decls: 0, vars: 0, template: function DxRangeSelectorComponent_Template(rf, ctx) { }, styles: ["[_nghost-%COMP%] {  display: block; }"] });
DxRangeSelectorComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: NgZone },
    { type: DxTemplateHost },
    { type: WatcherHelper },
    { type: IterableDifferHelper },
    { type: NestedOptionHost },
    { type: TransferState },
    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }
];
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxRangeSelectorComponent.prototype, "background", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxRangeSelectorComponent.prototype, "behavior", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxRangeSelectorComponent.prototype, "chart", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String),
    tslib_1.__metadata("design:paramtypes", [String])
], DxRangeSelectorComponent.prototype, "containerBackgroundColor", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxRangeSelectorComponent.prototype, "dataSource", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String),
    tslib_1.__metadata("design:paramtypes", [String])
], DxRangeSelectorComponent.prototype, "dataSourceField", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [Boolean])
], DxRangeSelectorComponent.prototype, "disabled", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxRangeSelectorComponent.prototype, "elementAttr", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxRangeSelectorComponent.prototype, "export", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxRangeSelectorComponent.prototype, "indent", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxRangeSelectorComponent.prototype, "loadingIndicator", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxRangeSelectorComponent.prototype, "margin", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [Boolean])
], DxRangeSelectorComponent.prototype, "pathModified", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [Boolean])
], DxRangeSelectorComponent.prototype, "redrawOnResize", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [Boolean])
], DxRangeSelectorComponent.prototype, "rtlEnabled", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxRangeSelectorComponent.prototype, "scale", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String),
    tslib_1.__metadata("design:paramtypes", [String])
], DxRangeSelectorComponent.prototype, "selectedRangeColor", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String),
    tslib_1.__metadata("design:paramtypes", [String])
], DxRangeSelectorComponent.prototype, "selectedRangeUpdateMode", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxRangeSelectorComponent.prototype, "shutter", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxRangeSelectorComponent.prototype, "size", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxRangeSelectorComponent.prototype, "sliderHandle", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxRangeSelectorComponent.prototype, "sliderMarker", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String),
    tslib_1.__metadata("design:paramtypes", [String])
], DxRangeSelectorComponent.prototype, "theme", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxRangeSelectorComponent.prototype, "title", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxRangeSelectorComponent.prototype, "value", null);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "onDisposing", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "onDrawn", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "onExported", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "onExporting", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "onFileSaving", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "onIncidentOccurred", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "onInitialized", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "onOptionChanged", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "onValueChanged", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "backgroundChange", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "behaviorChange", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "chartChange", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "containerBackgroundColorChange", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "dataSourceChange", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "dataSourceFieldChange", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "disabledChange", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "elementAttrChange", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "exportChange", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "indentChange", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "loadingIndicatorChange", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "marginChange", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "pathModifiedChange", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "redrawOnResizeChange", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "rtlEnabledChange", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "scaleChange", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "selectedRangeColorChange", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "selectedRangeUpdateModeChange", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "shutterChange", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "sizeChange", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "sliderHandleChange", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "sliderMarkerChange", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "themeChange", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "titleChange", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "valueChange", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxRangeSelectorComponent.prototype, "onBlur", void 0);
tslib_1.__decorate([
    HostListener('valueChange', ['$event']),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object]),
    tslib_1.__metadata("design:returntype", void 0)
], DxRangeSelectorComponent.prototype, "change", null);
tslib_1.__decorate([
    HostListener('onBlur', ['$event']),
    tslib_1.__metadata("design:type", Object)
], DxRangeSelectorComponent.prototype, "touched", void 0);
DxRangeSelectorComponent = tslib_1.__decorate([ tslib_1.__param(7, Inject(PLATFORM_ID)),
    tslib_1.__metadata("design:paramtypes", [ElementRef, NgZone, DxTemplateHost,
        WatcherHelper,
        IterableDifferHelper,
        NestedOptionHost,
        TransferState, Object])
], DxRangeSelectorComponent);
export { DxRangeSelectorComponent };
let DxRangeSelectorModule = class DxRangeSelectorModule {
};
DxRangeSelectorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxRangeSelectorModule });
DxRangeSelectorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxRangeSelectorModule_Factory(t) { return new (t || DxRangeSelectorModule)(); }, imports: [[
            DxoBackgroundModule,
            DxoImageModule,
            DxoBehaviorModule,
            DxoChartModule,
            DxoCommonSeriesSettingsModule,
            DxoAggregationModule,
            DxoAreaModule,
            DxoBorderModule,
            DxoHoverStyleModule,
            DxoHatchingModule,
            DxoLabelModule,
            DxoConnectorModule,
            DxoPointModule,
            DxoHeightModule,
            DxoUrlModule,
            DxoWidthModule,
            DxoSelectionStyleModule,
            DxoReductionModule,
            DxoValueErrorBarModule,
            DxoBarModule,
            DxoBubbleModule,
            DxoCandlestickModule,
            DxoFullstackedareaModule,
            DxoFullstackedbarModule,
            DxoFullstackedlineModule,
            DxoFullstackedsplineModule,
            DxoFullstackedsplineareaModule,
            DxoArgumentFormatModule,
            DxoFontModule,
            DxoFormatModule,
            DxoLineModule,
            DxoRangeareaModule,
            DxoRangebarModule,
            DxoScatterModule,
            DxoSplineModule,
            DxoSplineareaModule,
            DxoStackedareaModule,
            DxoStackedbarModule,
            DxoStackedlineModule,
            DxoStackedsplineModule,
            DxoStackedsplineareaModule,
            DxoStepareaModule,
            DxoSteplineModule,
            DxoStockModule,
            DxoDataPrepareSettingsModule,
            DxiSeriesModule,
            DxoSeriesTemplateModule,
            DxoValueAxisModule,
            DxoExportModule,
            DxoIndentModule,
            DxoLoadingIndicatorModule,
            DxoMarginModule,
            DxoScaleModule,
            DxoAggregationIntervalModule,
            DxiBreakModule,
            DxoBreakStyleModule,
            DxoMarkerModule,
            DxoMaxRangeModule,
            DxoMinorTickModule,
            DxoMinorTickIntervalModule,
            DxoMinRangeModule,
            DxoTickModule,
            DxoTickIntervalModule,
            DxoShutterModule,
            DxoSizeModule,
            DxoSliderHandleModule,
            DxoSliderMarkerModule,
            DxoTitleModule,
            DxoSubtitleModule,
            DxIntegrationModule,
            DxTemplateModule,
            BrowserTransferStateModule
        ],
        DxoBackgroundModule,
        DxoImageModule,
        DxoBehaviorModule,
        DxoChartModule,
        DxoCommonSeriesSettingsModule,
        DxoAggregationModule,
        DxoAreaModule,
        DxoBorderModule,
        DxoHoverStyleModule,
        DxoHatchingModule,
        DxoLabelModule,
        DxoConnectorModule,
        DxoPointModule,
        DxoHeightModule,
        DxoUrlModule,
        DxoWidthModule,
        DxoSelectionStyleModule,
        DxoReductionModule,
        DxoValueErrorBarModule,
        DxoBarModule,
        DxoBubbleModule,
        DxoCandlestickModule,
        DxoFullstackedareaModule,
        DxoFullstackedbarModule,
        DxoFullstackedlineModule,
        DxoFullstackedsplineModule,
        DxoFullstackedsplineareaModule,
        DxoArgumentFormatModule,
        DxoFontModule,
        DxoFormatModule,
        DxoLineModule,
        DxoRangeareaModule,
        DxoRangebarModule,
        DxoScatterModule,
        DxoSplineModule,
        DxoSplineareaModule,
        DxoStackedareaModule,
        DxoStackedbarModule,
        DxoStackedlineModule,
        DxoStackedsplineModule,
        DxoStackedsplineareaModule,
        DxoStepareaModule,
        DxoSteplineModule,
        DxoStockModule,
        DxoDataPrepareSettingsModule,
        DxiSeriesModule,
        DxoSeriesTemplateModule,
        DxoValueAxisModule,
        DxoExportModule,
        DxoIndentModule,
        DxoLoadingIndicatorModule,
        DxoMarginModule,
        DxoScaleModule,
        DxoAggregationIntervalModule,
        DxiBreakModule,
        DxoBreakStyleModule,
        DxoMarkerModule,
        DxoMaxRangeModule,
        DxoMinorTickModule,
        DxoMinorTickIntervalModule,
        DxoMinRangeModule,
        DxoTickModule,
        DxoTickIntervalModule,
        DxoShutterModule,
        DxoSizeModule,
        DxoSliderHandleModule,
        DxoSliderMarkerModule,
        DxoTitleModule,
        DxoSubtitleModule,
        DxTemplateModule] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxRangeSelectorComponent, [{
        type: Component,
        args: [{
                selector: 'dx-range-selector',
                template: '',
                providers: [
                    DxTemplateHost,
                    WatcherHelper,
                    CUSTOM_VALUE_ACCESSOR_PROVIDER,
                    NestedOptionHost,
                    IterableDifferHelper
                ],
                styles: [' :host {  display: block; }']
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.DxTemplateHost }, { type: ɵngcc1.WatcherHelper }, { type: ɵngcc1.IterableDifferHelper }, { type: ɵngcc1.NestedOptionHost }, { type: ɵngcc2.TransferState }, { type: undefined, decorators: [{
                type: Inject,
                args: [PLATFORM_ID]
            }] }]; }, { touched: [{
            type: HostListener,
            args: ['onBlur', ['$event']]
        }], background: [{
            type: Input
        }], behavior: [{
            type: Input
        }], chart: [{
            type: Input
        }], containerBackgroundColor: [{
            type: Input
        }], dataSource: [{
            type: Input
        }], dataSourceField: [{
            type: Input
        }], disabled: [{
            type: Input
        }], elementAttr: [{
            type: Input
        }], export: [{
            type: Input
        }], indent: [{
            type: Input
        }], loadingIndicator: [{
            type: Input
        }], margin: [{
            type: Input
        }], pathModified: [{
            type: Input
        }], redrawOnResize: [{
            type: Input
        }], rtlEnabled: [{
            type: Input
        }], scale: [{
            type: Input
        }], selectedRangeColor: [{
            type: Input
        }], selectedRangeUpdateMode: [{
            type: Input
        }], shutter: [{
            type: Input
        }], size: [{
            type: Input
        }], sliderHandle: [{
            type: Input
        }], sliderMarker: [{
            type: Input
        }], theme: [{
            type: Input
        }], title: [{
            type: Input
        }], value: [{
            type: Input
        }], change: [{
            type: HostListener,
            args: ['valueChange', ['$event']]
        }], onDisposing: [{
            type: Output
        }], onDrawn: [{
            type: Output
        }], onExported: [{
            type: Output
        }], onExporting: [{
            type: Output
        }], onFileSaving: [{
            type: Output
        }], onIncidentOccurred: [{
            type: Output
        }], onInitialized: [{
            type: Output
        }], onOptionChanged: [{
            type: Output
        }], onValueChanged: [{
            type: Output
        }], backgroundChange: [{
            type: Output
        }], behaviorChange: [{
            type: Output
        }], chartChange: [{
            type: Output
        }], containerBackgroundColorChange: [{
            type: Output
        }], dataSourceChange: [{
            type: Output
        }], dataSourceFieldChange: [{
            type: Output
        }], disabledChange: [{
            type: Output
        }], elementAttrChange: [{
            type: Output
        }], exportChange: [{
            type: Output
        }], indentChange: [{
            type: Output
        }], loadingIndicatorChange: [{
            type: Output
        }], marginChange: [{
            type: Output
        }], pathModifiedChange: [{
            type: Output
        }], redrawOnResizeChange: [{
            type: Output
        }], rtlEnabledChange: [{
            type: Output
        }], scaleChange: [{
            type: Output
        }], selectedRangeColorChange: [{
            type: Output
        }], selectedRangeUpdateModeChange: [{
            type: Output
        }], shutterChange: [{
            type: Output
        }], sizeChange: [{
            type: Output
        }], sliderHandleChange: [{
            type: Output
        }], sliderMarkerChange: [{
            type: Output
        }], themeChange: [{
            type: Output
        }], titleChange: [{
            type: Output
        }], valueChange: [{
            type: Output
        }], onBlur: [{
            type: Output
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxRangeSelectorModule, { declarations: function () { return [DxRangeSelectorComponent]; }, imports: function () { return [DxoBackgroundModule,
        DxoImageModule,
        DxoBehaviorModule,
        DxoChartModule,
        DxoCommonSeriesSettingsModule,
        DxoAggregationModule,
        DxoAreaModule,
        DxoBorderModule,
        DxoHoverStyleModule,
        DxoHatchingModule,
        DxoLabelModule,
        DxoConnectorModule,
        DxoPointModule,
        DxoHeightModule,
        DxoUrlModule,
        DxoWidthModule,
        DxoSelectionStyleModule,
        DxoReductionModule,
        DxoValueErrorBarModule,
        DxoBarModule,
        DxoBubbleModule,
        DxoCandlestickModule,
        DxoFullstackedareaModule,
        DxoFullstackedbarModule,
        DxoFullstackedlineModule,
        DxoFullstackedsplineModule,
        DxoFullstackedsplineareaModule,
        DxoArgumentFormatModule,
        DxoFontModule,
        DxoFormatModule,
        DxoLineModule,
        DxoRangeareaModule,
        DxoRangebarModule,
        DxoScatterModule,
        DxoSplineModule,
        DxoSplineareaModule,
        DxoStackedareaModule,
        DxoStackedbarModule,
        DxoStackedlineModule,
        DxoStackedsplineModule,
        DxoStackedsplineareaModule,
        DxoStepareaModule,
        DxoSteplineModule,
        DxoStockModule,
        DxoDataPrepareSettingsModule,
        DxiSeriesModule,
        DxoSeriesTemplateModule,
        DxoValueAxisModule,
        DxoExportModule,
        DxoIndentModule,
        DxoLoadingIndicatorModule,
        DxoMarginModule,
        DxoScaleModule,
        DxoAggregationIntervalModule,
        DxiBreakModule,
        DxoBreakStyleModule,
        DxoMarkerModule,
        DxoMaxRangeModule,
        DxoMinorTickModule,
        DxoMinorTickIntervalModule,
        DxoMinRangeModule,
        DxoTickModule,
        DxoTickIntervalModule,
        DxoShutterModule,
        DxoSizeModule,
        DxoSliderHandleModule,
        DxoSliderMarkerModule,
        DxoTitleModule,
        DxoSubtitleModule,
        DxIntegrationModule,
        DxTemplateModule,
        BrowserTransferStateModule]; }, exports: function () { return [DxRangeSelectorComponent,
        DxoBackgroundModule,
        DxoImageModule,
        DxoBehaviorModule,
        DxoChartModule,
        DxoCommonSeriesSettingsModule,
        DxoAggregationModule,
        DxoAreaModule,
        DxoBorderModule,
        DxoHoverStyleModule,
        DxoHatchingModule,
        DxoLabelModule,
        DxoConnectorModule,
        DxoPointModule,
        DxoHeightModule,
        DxoUrlModule,
        DxoWidthModule,
        DxoSelectionStyleModule,
        DxoReductionModule,
        DxoValueErrorBarModule,
        DxoBarModule,
        DxoBubbleModule,
        DxoCandlestickModule,
        DxoFullstackedareaModule,
        DxoFullstackedbarModule,
        DxoFullstackedlineModule,
        DxoFullstackedsplineModule,
        DxoFullstackedsplineareaModule,
        DxoArgumentFormatModule,
        DxoFontModule,
        DxoFormatModule,
        DxoLineModule,
        DxoRangeareaModule,
        DxoRangebarModule,
        DxoScatterModule,
        DxoSplineModule,
        DxoSplineareaModule,
        DxoStackedareaModule,
        DxoStackedbarModule,
        DxoStackedlineModule,
        DxoStackedsplineModule,
        DxoStackedsplineareaModule,
        DxoStepareaModule,
        DxoSteplineModule,
        DxoStockModule,
        DxoDataPrepareSettingsModule,
        DxiSeriesModule,
        DxoSeriesTemplateModule,
        DxoValueAxisModule,
        DxoExportModule,
        DxoIndentModule,
        DxoLoadingIndicatorModule,
        DxoMarginModule,
        DxoScaleModule,
        DxoAggregationIntervalModule,
        DxiBreakModule,
        DxoBreakStyleModule,
        DxoMarkerModule,
        DxoMaxRangeModule,
        DxoMinorTickModule,
        DxoMinorTickIntervalModule,
        DxoMinRangeModule,
        DxoTickModule,
        DxoTickIntervalModule,
        DxoShutterModule,
        DxoSizeModule,
        DxoSliderHandleModule,
        DxoSliderMarkerModule,
        DxoTitleModule,
        DxoSubtitleModule,
        DxTemplateModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxRangeSelectorModule, [{
        type: NgModule,
        args: [{
                imports: [
                    DxoBackgroundModule,
                    DxoImageModule,
                    DxoBehaviorModule,
                    DxoChartModule,
                    DxoCommonSeriesSettingsModule,
                    DxoAggregationModule,
                    DxoAreaModule,
                    DxoBorderModule,
                    DxoHoverStyleModule,
                    DxoHatchingModule,
                    DxoLabelModule,
                    DxoConnectorModule,
                    DxoPointModule,
                    DxoHeightModule,
                    DxoUrlModule,
                    DxoWidthModule,
                    DxoSelectionStyleModule,
                    DxoReductionModule,
                    DxoValueErrorBarModule,
                    DxoBarModule,
                    DxoBubbleModule,
                    DxoCandlestickModule,
                    DxoFullstackedareaModule,
                    DxoFullstackedbarModule,
                    DxoFullstackedlineModule,
                    DxoFullstackedsplineModule,
                    DxoFullstackedsplineareaModule,
                    DxoArgumentFormatModule,
                    DxoFontModule,
                    DxoFormatModule,
                    DxoLineModule,
                    DxoRangeareaModule,
                    DxoRangebarModule,
                    DxoScatterModule,
                    DxoSplineModule,
                    DxoSplineareaModule,
                    DxoStackedareaModule,
                    DxoStackedbarModule,
                    DxoStackedlineModule,
                    DxoStackedsplineModule,
                    DxoStackedsplineareaModule,
                    DxoStepareaModule,
                    DxoSteplineModule,
                    DxoStockModule,
                    DxoDataPrepareSettingsModule,
                    DxiSeriesModule,
                    DxoSeriesTemplateModule,
                    DxoValueAxisModule,
                    DxoExportModule,
                    DxoIndentModule,
                    DxoLoadingIndicatorModule,
                    DxoMarginModule,
                    DxoScaleModule,
                    DxoAggregationIntervalModule,
                    DxiBreakModule,
                    DxoBreakStyleModule,
                    DxoMarkerModule,
                    DxoMaxRangeModule,
                    DxoMinorTickModule,
                    DxoMinorTickIntervalModule,
                    DxoMinRangeModule,
                    DxoTickModule,
                    DxoTickIntervalModule,
                    DxoShutterModule,
                    DxoSizeModule,
                    DxoSliderHandleModule,
                    DxoSliderMarkerModule,
                    DxoTitleModule,
                    DxoSubtitleModule,
                    DxIntegrationModule,
                    DxTemplateModule,
                    BrowserTransferStateModule
                ],
                declarations: [
                    DxRangeSelectorComponent
                ],
                exports: [
                    DxRangeSelectorComponent,
                    DxoBackgroundModule,
                    DxoImageModule,
                    DxoBehaviorModule,
                    DxoChartModule,
                    DxoCommonSeriesSettingsModule,
                    DxoAggregationModule,
                    DxoAreaModule,
                    DxoBorderModule,
                    DxoHoverStyleModule,
                    DxoHatchingModule,
                    DxoLabelModule,
                    DxoConnectorModule,
                    DxoPointModule,
                    DxoHeightModule,
                    DxoUrlModule,
                    DxoWidthModule,
                    DxoSelectionStyleModule,
                    DxoReductionModule,
                    DxoValueErrorBarModule,
                    DxoBarModule,
                    DxoBubbleModule,
                    DxoCandlestickModule,
                    DxoFullstackedareaModule,
                    DxoFullstackedbarModule,
                    DxoFullstackedlineModule,
                    DxoFullstackedsplineModule,
                    DxoFullstackedsplineareaModule,
                    DxoArgumentFormatModule,
                    DxoFontModule,
                    DxoFormatModule,
                    DxoLineModule,
                    DxoRangeareaModule,
                    DxoRangebarModule,
                    DxoScatterModule,
                    DxoSplineModule,
                    DxoSplineareaModule,
                    DxoStackedareaModule,
                    DxoStackedbarModule,
                    DxoStackedlineModule,
                    DxoStackedsplineModule,
                    DxoStackedsplineareaModule,
                    DxoStepareaModule,
                    DxoSteplineModule,
                    DxoStockModule,
                    DxoDataPrepareSettingsModule,
                    DxiSeriesModule,
                    DxoSeriesTemplateModule,
                    DxoValueAxisModule,
                    DxoExportModule,
                    DxoIndentModule,
                    DxoLoadingIndicatorModule,
                    DxoMarginModule,
                    DxoScaleModule,
                    DxoAggregationIntervalModule,
                    DxiBreakModule,
                    DxoBreakStyleModule,
                    DxoMarkerModule,
                    DxoMaxRangeModule,
                    DxoMinorTickModule,
                    DxoMinorTickIntervalModule,
                    DxoMinRangeModule,
                    DxoTickModule,
                    DxoTickIntervalModule,
                    DxoShutterModule,
                    DxoSizeModule,
                    DxoSliderHandleModule,
                    DxoSliderMarkerModule,
                    DxoTitleModule,
                    DxoSubtitleModule,
                    DxTemplateModule
                ]
            }]
    }], null, null); })();
export { DxRangeSelectorModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9wbnNiL0Rlc2t0b3AvTU9BIC0gRS1LQU5NQVMvbm9kZV9tb2R1bGVzL2RldmV4dHJlbWUtYW5ndWxhci9lc20yMDE1L3VpL3JhbmdlLXNlbGVjdG9yL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXlGQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBOQW1VRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrQ0E4UjZDLEFBYTVDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBU0Q7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkEwSndCIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXHJcbiAqIGRldmV4dHJlbWUtYW5ndWxhclxyXG4gKiBWZXJzaW9uOiAxOS4yLjZcclxuICogQnVpbGQgZGF0ZTogVGh1IEphbiAzMCAyMDIwXHJcbiAqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxMiAtIDIwMjAgRGV2ZWxvcGVyIEV4cHJlc3MgSW5jLiBBTEwgUklHSFRTIFJFU0VSVkVEXHJcbiAqXHJcbiAqIFRoaXMgc29mdHdhcmUgbWF5IGJlIG1vZGlmaWVkIGFuZCBkaXN0cmlidXRlZCB1bmRlciB0aGUgdGVybXNcclxuICogb2YgdGhlIE1JVCBsaWNlbnNlLiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBvZiB0aGUgcHJvamVjdCBmb3IgZGV0YWlscy5cclxuICpcclxuICogaHR0cHM6Ly9naXRodWIuY29tL0RldkV4cHJlc3MvZGV2ZXh0cmVtZS1hbmd1bGFyXHJcbiAqL1xyXG5pbXBvcnQgKiBhcyB0c2xpYl8xIGZyb20gXCJ0c2xpYlwiO1xyXG4vKiB0c2xpbnQ6ZGlzYWJsZTptYXgtbGluZS1sZW5ndGggKi9cclxuaW1wb3J0IHsgQnJvd3NlclRyYW5zZmVyU3RhdGVNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcclxuaW1wb3J0IHsgVHJhbnNmZXJTdGF0ZSB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xyXG5pbXBvcnQgeyBDb21wb25lbnQsIE5nTW9kdWxlLCBFbGVtZW50UmVmLCBOZ1pvbmUsIFBMQVRGT1JNX0lELCBJbmplY3QsIElucHV0LCBPdXRwdXQsIE9uRGVzdHJveSwgRXZlbnRFbWl0dGVyLCBmb3J3YXJkUmVmLCBIb3N0TGlzdGVuZXIsIE9uQ2hhbmdlcywgRG9DaGVjaywgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgRHhSYW5nZVNlbGVjdG9yIGZyb20gJ2RldmV4dHJlbWUvdml6L3JhbmdlX3NlbGVjdG9yJztcclxuaW1wb3J0IHsgTkdfVkFMVUVfQUNDRVNTT1IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IER4Q29tcG9uZW50LCBEeFRlbXBsYXRlSG9zdCwgRHhJbnRlZ3JhdGlvbk1vZHVsZSwgRHhUZW1wbGF0ZU1vZHVsZSwgTmVzdGVkT3B0aW9uSG9zdCwgSXRlcmFibGVEaWZmZXJIZWxwZXIsIFdhdGNoZXJIZWxwZXIgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IER4b0JhY2tncm91bmRNb2R1bGUgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvdWkvbmVzdGVkJztcclxuaW1wb3J0IHsgRHhvSW1hZ2VNb2R1bGUgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvdWkvbmVzdGVkJztcclxuaW1wb3J0IHsgRHhvQmVoYXZpb3JNb2R1bGUgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvdWkvbmVzdGVkJztcclxuaW1wb3J0IHsgRHhvQ2hhcnRNb2R1bGUgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvdWkvbmVzdGVkJztcclxuaW1wb3J0IHsgRHhvQ29tbW9uU2VyaWVzU2V0dGluZ3NNb2R1bGUgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvdWkvbmVzdGVkJztcclxuaW1wb3J0IHsgRHhvQWdncmVnYXRpb25Nb2R1bGUgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvdWkvbmVzdGVkJztcclxuaW1wb3J0IHsgRHhvQXJlYU1vZHVsZSB9IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci91aS9uZXN0ZWQnO1xyXG5pbXBvcnQgeyBEeG9Cb3JkZXJNb2R1bGUgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvdWkvbmVzdGVkJztcclxuaW1wb3J0IHsgRHhvSG92ZXJTdHlsZU1vZHVsZSB9IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci91aS9uZXN0ZWQnO1xyXG5pbXBvcnQgeyBEeG9IYXRjaGluZ01vZHVsZSB9IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci91aS9uZXN0ZWQnO1xyXG5pbXBvcnQgeyBEeG9MYWJlbE1vZHVsZSB9IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci91aS9uZXN0ZWQnO1xyXG5pbXBvcnQgeyBEeG9Db25uZWN0b3JNb2R1bGUgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvdWkvbmVzdGVkJztcclxuaW1wb3J0IHsgRHhvUG9pbnRNb2R1bGUgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvdWkvbmVzdGVkJztcclxuaW1wb3J0IHsgRHhvSGVpZ2h0TW9kdWxlIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL3VpL25lc3RlZCc7XHJcbmltcG9ydCB7IER4b1VybE1vZHVsZSB9IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci91aS9uZXN0ZWQnO1xyXG5pbXBvcnQgeyBEeG9XaWR0aE1vZHVsZSB9IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci91aS9uZXN0ZWQnO1xyXG5pbXBvcnQgeyBEeG9TZWxlY3Rpb25TdHlsZU1vZHVsZSB9IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci91aS9uZXN0ZWQnO1xyXG5pbXBvcnQgeyBEeG9SZWR1Y3Rpb25Nb2R1bGUgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvdWkvbmVzdGVkJztcclxuaW1wb3J0IHsgRHhvVmFsdWVFcnJvckJhck1vZHVsZSB9IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci91aS9uZXN0ZWQnO1xyXG5pbXBvcnQgeyBEeG9CYXJNb2R1bGUgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvdWkvbmVzdGVkJztcclxuaW1wb3J0IHsgRHhvQnViYmxlTW9kdWxlIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL3VpL25lc3RlZCc7XHJcbmltcG9ydCB7IER4b0NhbmRsZXN0aWNrTW9kdWxlIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL3VpL25lc3RlZCc7XHJcbmltcG9ydCB7IER4b0Z1bGxzdGFja2VkYXJlYU1vZHVsZSB9IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci91aS9uZXN0ZWQnO1xyXG5pbXBvcnQgeyBEeG9GdWxsc3RhY2tlZGJhck1vZHVsZSB9IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci91aS9uZXN0ZWQnO1xyXG5pbXBvcnQgeyBEeG9GdWxsc3RhY2tlZGxpbmVNb2R1bGUgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvdWkvbmVzdGVkJztcclxuaW1wb3J0IHsgRHhvRnVsbHN0YWNrZWRzcGxpbmVNb2R1bGUgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvdWkvbmVzdGVkJztcclxuaW1wb3J0IHsgRHhvRnVsbHN0YWNrZWRzcGxpbmVhcmVhTW9kdWxlIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL3VpL25lc3RlZCc7XHJcbmltcG9ydCB7IER4b0FyZ3VtZW50Rm9ybWF0TW9kdWxlIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL3VpL25lc3RlZCc7XHJcbmltcG9ydCB7IER4b0ZvbnRNb2R1bGUgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvdWkvbmVzdGVkJztcclxuaW1wb3J0IHsgRHhvRm9ybWF0TW9kdWxlIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL3VpL25lc3RlZCc7XHJcbmltcG9ydCB7IER4b0xpbmVNb2R1bGUgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvdWkvbmVzdGVkJztcclxuaW1wb3J0IHsgRHhvUmFuZ2VhcmVhTW9kdWxlIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL3VpL25lc3RlZCc7XHJcbmltcG9ydCB7IER4b1JhbmdlYmFyTW9kdWxlIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL3VpL25lc3RlZCc7XHJcbmltcG9ydCB7IER4b1NjYXR0ZXJNb2R1bGUgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvdWkvbmVzdGVkJztcclxuaW1wb3J0IHsgRHhvU3BsaW5lTW9kdWxlIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL3VpL25lc3RlZCc7XHJcbmltcG9ydCB7IER4b1NwbGluZWFyZWFNb2R1bGUgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvdWkvbmVzdGVkJztcclxuaW1wb3J0IHsgRHhvU3RhY2tlZGFyZWFNb2R1bGUgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvdWkvbmVzdGVkJztcclxuaW1wb3J0IHsgRHhvU3RhY2tlZGJhck1vZHVsZSB9IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci91aS9uZXN0ZWQnO1xyXG5pbXBvcnQgeyBEeG9TdGFja2VkbGluZU1vZHVsZSB9IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci91aS9uZXN0ZWQnO1xyXG5pbXBvcnQgeyBEeG9TdGFja2Vkc3BsaW5lTW9kdWxlIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL3VpL25lc3RlZCc7XHJcbmltcG9ydCB7IER4b1N0YWNrZWRzcGxpbmVhcmVhTW9kdWxlIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL3VpL25lc3RlZCc7XHJcbmltcG9ydCB7IER4b1N0ZXBhcmVhTW9kdWxlIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL3VpL25lc3RlZCc7XHJcbmltcG9ydCB7IER4b1N0ZXBsaW5lTW9kdWxlIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL3VpL25lc3RlZCc7XHJcbmltcG9ydCB7IER4b1N0b2NrTW9kdWxlIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL3VpL25lc3RlZCc7XHJcbmltcG9ydCB7IER4b0RhdGFQcmVwYXJlU2V0dGluZ3NNb2R1bGUgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvdWkvbmVzdGVkJztcclxuaW1wb3J0IHsgRHhpU2VyaWVzTW9kdWxlIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL3VpL25lc3RlZCc7XHJcbmltcG9ydCB7IER4b1Nlcmllc1RlbXBsYXRlTW9kdWxlIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL3VpL25lc3RlZCc7XHJcbmltcG9ydCB7IER4b1ZhbHVlQXhpc01vZHVsZSB9IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci91aS9uZXN0ZWQnO1xyXG5pbXBvcnQgeyBEeG9FeHBvcnRNb2R1bGUgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvdWkvbmVzdGVkJztcclxuaW1wb3J0IHsgRHhvSW5kZW50TW9kdWxlIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL3VpL25lc3RlZCc7XHJcbmltcG9ydCB7IER4b0xvYWRpbmdJbmRpY2F0b3JNb2R1bGUgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvdWkvbmVzdGVkJztcclxuaW1wb3J0IHsgRHhvTWFyZ2luTW9kdWxlIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL3VpL25lc3RlZCc7XHJcbmltcG9ydCB7IER4b1NjYWxlTW9kdWxlIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL3VpL25lc3RlZCc7XHJcbmltcG9ydCB7IER4b0FnZ3JlZ2F0aW9uSW50ZXJ2YWxNb2R1bGUgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvdWkvbmVzdGVkJztcclxuaW1wb3J0IHsgRHhpQnJlYWtNb2R1bGUgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvdWkvbmVzdGVkJztcclxuaW1wb3J0IHsgRHhvQnJlYWtTdHlsZU1vZHVsZSB9IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci91aS9uZXN0ZWQnO1xyXG5pbXBvcnQgeyBEeG9NYXJrZXJNb2R1bGUgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvdWkvbmVzdGVkJztcclxuaW1wb3J0IHsgRHhvTWF4UmFuZ2VNb2R1bGUgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvdWkvbmVzdGVkJztcclxuaW1wb3J0IHsgRHhvTWlub3JUaWNrTW9kdWxlIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL3VpL25lc3RlZCc7XHJcbmltcG9ydCB7IER4b01pbm9yVGlja0ludGVydmFsTW9kdWxlIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL3VpL25lc3RlZCc7XHJcbmltcG9ydCB7IER4b01pblJhbmdlTW9kdWxlIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL3VpL25lc3RlZCc7XHJcbmltcG9ydCB7IER4b1RpY2tNb2R1bGUgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvdWkvbmVzdGVkJztcclxuaW1wb3J0IHsgRHhvVGlja0ludGVydmFsTW9kdWxlIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL3VpL25lc3RlZCc7XHJcbmltcG9ydCB7IER4b1NodXR0ZXJNb2R1bGUgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvdWkvbmVzdGVkJztcclxuaW1wb3J0IHsgRHhvU2l6ZU1vZHVsZSB9IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci91aS9uZXN0ZWQnO1xyXG5pbXBvcnQgeyBEeG9TbGlkZXJIYW5kbGVNb2R1bGUgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvdWkvbmVzdGVkJztcclxuaW1wb3J0IHsgRHhvU2xpZGVyTWFya2VyTW9kdWxlIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL3VpL25lc3RlZCc7XHJcbmltcG9ydCB7IER4b1RpdGxlTW9kdWxlIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL3VpL25lc3RlZCc7XHJcbmltcG9ydCB7IER4b1N1YnRpdGxlTW9kdWxlIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL3VpL25lc3RlZCc7XHJcbmNvbnN0IENVU1RPTV9WQUxVRV9BQ0NFU1NPUl9QUk9WSURFUiA9IHtcclxuICAgIHByb3ZpZGU6IE5HX1ZBTFVFX0FDQ0VTU09SLFxyXG4gICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gRHhSYW5nZVNlbGVjdG9yQ29tcG9uZW50KSxcclxuICAgIG11bHRpOiB0cnVlXHJcbn07XHJcbi8qKlxyXG4gKiBUaGUgUmFuZ2VTZWxlY3RvciBpcyBhIHdpZGdldCB0aGF0IGFsbG93cyBhIHVzZXIgdG8gc2VsZWN0IGEgcmFuZ2Ugb2YgdmFsdWVzIG9uIGEgc2NhbGUuXHJcbiAqL1xyXG5sZXQgRHhSYW5nZVNlbGVjdG9yQ29tcG9uZW50ID0gY2xhc3MgRHhSYW5nZVNlbGVjdG9yQ29tcG9uZW50IGV4dGVuZHMgRHhDb21wb25lbnQge1xyXG4gICAgY29uc3RydWN0b3IoZWxlbWVudFJlZiwgbmdab25lLCB0ZW1wbGF0ZUhvc3QsIF93YXRjaGVySGVscGVyLCBfaWRoLCBvcHRpb25Ib3N0LCB0cmFuc2ZlclN0YXRlLCBwbGF0Zm9ybUlkKSB7XHJcbiAgICAgICAgc3VwZXIoZWxlbWVudFJlZiwgbmdab25lLCB0ZW1wbGF0ZUhvc3QsIF93YXRjaGVySGVscGVyLCB0cmFuc2ZlclN0YXRlLCBwbGF0Zm9ybUlkKTtcclxuICAgICAgICB0aGlzLl93YXRjaGVySGVscGVyID0gX3dhdGNoZXJIZWxwZXI7XHJcbiAgICAgICAgdGhpcy5faWRoID0gX2lkaDtcclxuICAgICAgICB0aGlzLnRvdWNoZWQgPSAoXykgPT4geyB9O1xyXG4gICAgICAgIHRoaXMuX2NyZWF0ZUV2ZW50RW1pdHRlcnMoW1xyXG4gICAgICAgICAgICB7IHN1YnNjcmliZTogJ2Rpc3Bvc2luZycsIGVtaXQ6ICdvbkRpc3Bvc2luZycgfSxcclxuICAgICAgICAgICAgeyBzdWJzY3JpYmU6ICdkcmF3bicsIGVtaXQ6ICdvbkRyYXduJyB9LFxyXG4gICAgICAgICAgICB7IHN1YnNjcmliZTogJ2V4cG9ydGVkJywgZW1pdDogJ29uRXhwb3J0ZWQnIH0sXHJcbiAgICAgICAgICAgIHsgc3Vic2NyaWJlOiAnZXhwb3J0aW5nJywgZW1pdDogJ29uRXhwb3J0aW5nJyB9LFxyXG4gICAgICAgICAgICB7IHN1YnNjcmliZTogJ2ZpbGVTYXZpbmcnLCBlbWl0OiAnb25GaWxlU2F2aW5nJyB9LFxyXG4gICAgICAgICAgICB7IHN1YnNjcmliZTogJ2luY2lkZW50T2NjdXJyZWQnLCBlbWl0OiAnb25JbmNpZGVudE9jY3VycmVkJyB9LFxyXG4gICAgICAgICAgICB7IHN1YnNjcmliZTogJ2luaXRpYWxpemVkJywgZW1pdDogJ29uSW5pdGlhbGl6ZWQnIH0sXHJcbiAgICAgICAgICAgIHsgc3Vic2NyaWJlOiAnb3B0aW9uQ2hhbmdlZCcsIGVtaXQ6ICdvbk9wdGlvbkNoYW5nZWQnIH0sXHJcbiAgICAgICAgICAgIHsgc3Vic2NyaWJlOiAndmFsdWVDaGFuZ2VkJywgZW1pdDogJ29uVmFsdWVDaGFuZ2VkJyB9LFxyXG4gICAgICAgICAgICB7IGVtaXQ6ICdiYWNrZ3JvdW5kQ2hhbmdlJyB9LFxyXG4gICAgICAgICAgICB7IGVtaXQ6ICdiZWhhdmlvckNoYW5nZScgfSxcclxuICAgICAgICAgICAgeyBlbWl0OiAnY2hhcnRDaGFuZ2UnIH0sXHJcbiAgICAgICAgICAgIHsgZW1pdDogJ2NvbnRhaW5lckJhY2tncm91bmRDb2xvckNoYW5nZScgfSxcclxuICAgICAgICAgICAgeyBlbWl0OiAnZGF0YVNvdXJjZUNoYW5nZScgfSxcclxuICAgICAgICAgICAgeyBlbWl0OiAnZGF0YVNvdXJjZUZpZWxkQ2hhbmdlJyB9LFxyXG4gICAgICAgICAgICB7IGVtaXQ6ICdkaXNhYmxlZENoYW5nZScgfSxcclxuICAgICAgICAgICAgeyBlbWl0OiAnZWxlbWVudEF0dHJDaGFuZ2UnIH0sXHJcbiAgICAgICAgICAgIHsgZW1pdDogJ2V4cG9ydENoYW5nZScgfSxcclxuICAgICAgICAgICAgeyBlbWl0OiAnaW5kZW50Q2hhbmdlJyB9LFxyXG4gICAgICAgICAgICB7IGVtaXQ6ICdsb2FkaW5nSW5kaWNhdG9yQ2hhbmdlJyB9LFxyXG4gICAgICAgICAgICB7IGVtaXQ6ICdtYXJnaW5DaGFuZ2UnIH0sXHJcbiAgICAgICAgICAgIHsgZW1pdDogJ3BhdGhNb2RpZmllZENoYW5nZScgfSxcclxuICAgICAgICAgICAgeyBlbWl0OiAncmVkcmF3T25SZXNpemVDaGFuZ2UnIH0sXHJcbiAgICAgICAgICAgIHsgZW1pdDogJ3J0bEVuYWJsZWRDaGFuZ2UnIH0sXHJcbiAgICAgICAgICAgIHsgZW1pdDogJ3NjYWxlQ2hhbmdlJyB9LFxyXG4gICAgICAgICAgICB7IGVtaXQ6ICdzZWxlY3RlZFJhbmdlQ29sb3JDaGFuZ2UnIH0sXHJcbiAgICAgICAgICAgIHsgZW1pdDogJ3NlbGVjdGVkUmFuZ2VVcGRhdGVNb2RlQ2hhbmdlJyB9LFxyXG4gICAgICAgICAgICB7IGVtaXQ6ICdzaHV0dGVyQ2hhbmdlJyB9LFxyXG4gICAgICAgICAgICB7IGVtaXQ6ICdzaXplQ2hhbmdlJyB9LFxyXG4gICAgICAgICAgICB7IGVtaXQ6ICdzbGlkZXJIYW5kbGVDaGFuZ2UnIH0sXHJcbiAgICAgICAgICAgIHsgZW1pdDogJ3NsaWRlck1hcmtlckNoYW5nZScgfSxcclxuICAgICAgICAgICAgeyBlbWl0OiAndGhlbWVDaGFuZ2UnIH0sXHJcbiAgICAgICAgICAgIHsgZW1pdDogJ3RpdGxlQ2hhbmdlJyB9LFxyXG4gICAgICAgICAgICB7IGVtaXQ6ICd2YWx1ZUNoYW5nZScgfSxcclxuICAgICAgICAgICAgeyBlbWl0OiAnb25CbHVyJyB9XHJcbiAgICAgICAgXSk7XHJcbiAgICAgICAgdGhpcy5faWRoLnNldEhvc3QodGhpcyk7XHJcbiAgICAgICAgb3B0aW9uSG9zdC5zZXRIb3N0KHRoaXMpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBTcGVjaWZpZXMgdGhlIG9wdGlvbnMgZm9yIHRoZSByYW5nZSBzZWxlY3RvcidzIGJhY2tncm91bmQuXHJcbiAgICAgKi9cclxuICAgIGdldCBiYWNrZ3JvdW5kKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRPcHRpb24oJ2JhY2tncm91bmQnKTtcclxuICAgIH1cclxuICAgIHNldCBiYWNrZ3JvdW5kKHZhbHVlKSB7XHJcbiAgICAgICAgdGhpcy5fc2V0T3B0aW9uKCdiYWNrZ3JvdW5kJywgdmFsdWUpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBTcGVjaWZpZXMgdGhlIFJhbmdlU2VsZWN0b3IncyBiZWhhdmlvciBvcHRpb25zLlxyXG4gICAgICovXHJcbiAgICBnZXQgYmVoYXZpb3IoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dldE9wdGlvbignYmVoYXZpb3InKTtcclxuICAgIH1cclxuICAgIHNldCBiZWhhdmlvcih2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuX3NldE9wdGlvbignYmVoYXZpb3InLCB2YWx1ZSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFNwZWNpZmllcyB0aGUgb3B0aW9ucyByZXF1aXJlZCB0byBkaXNwbGF5IGEgY2hhcnQgYXMgdGhlIHJhbmdlIHNlbGVjdG9yJ3MgYmFja2dyb3VuZC5cclxuICAgICAqL1xyXG4gICAgZ2V0IGNoYXJ0KCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRPcHRpb24oJ2NoYXJ0Jyk7XHJcbiAgICB9XHJcbiAgICBzZXQgY2hhcnQodmFsdWUpIHtcclxuICAgICAgICB0aGlzLl9zZXRPcHRpb24oJ2NoYXJ0JywgdmFsdWUpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBTcGVjaWZpZXMgdGhlIGNvbG9yIG9mIHRoZSBwYXJlbnQgcGFnZSBlbGVtZW50LlxyXG4gICAgICovXHJcbiAgICBnZXQgY29udGFpbmVyQmFja2dyb3VuZENvbG9yKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRPcHRpb24oJ2NvbnRhaW5lckJhY2tncm91bmRDb2xvcicpO1xyXG4gICAgfVxyXG4gICAgc2V0IGNvbnRhaW5lckJhY2tncm91bmRDb2xvcih2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuX3NldE9wdGlvbignY29udGFpbmVyQmFja2dyb3VuZENvbG9yJywgdmFsdWUpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBTcGVjaWZpZXMgYSBkYXRhIHNvdXJjZSBmb3IgdGhlIHNjYWxlIHZhbHVlcyBhbmQgZm9yIHRoZSBjaGFydCBhdCB0aGUgYmFja2dyb3VuZC5cclxuICAgICAqL1xyXG4gICAgZ2V0IGRhdGFTb3VyY2UoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dldE9wdGlvbignZGF0YVNvdXJjZScpO1xyXG4gICAgfVxyXG4gICAgc2V0IGRhdGFTb3VyY2UodmFsdWUpIHtcclxuICAgICAgICB0aGlzLl9zZXRPcHRpb24oJ2RhdGFTb3VyY2UnLCB2YWx1ZSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFNwZWNpZmllcyB0aGUgZGF0YSBzb3VyY2UgZmllbGQgdGhhdCBwcm92aWRlcyBkYXRhIGZvciB0aGUgc2NhbGUuXHJcbiAgICAgKi9cclxuICAgIGdldCBkYXRhU291cmNlRmllbGQoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dldE9wdGlvbignZGF0YVNvdXJjZUZpZWxkJyk7XHJcbiAgICB9XHJcbiAgICBzZXQgZGF0YVNvdXJjZUZpZWxkKHZhbHVlKSB7XHJcbiAgICAgICAgdGhpcy5fc2V0T3B0aW9uKCdkYXRhU291cmNlRmllbGQnLCB2YWx1ZSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFNwZWNpZmllcyB3aGV0aGVyIHRoZSB3aWRnZXQgcmVzcG9uZHMgdG8gdGhlIHVzZXIgaW50ZXJhY3Rpb24uXHJcbiAgICAgKi9cclxuICAgIGdldCBkaXNhYmxlZCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZ2V0T3B0aW9uKCdkaXNhYmxlZCcpO1xyXG4gICAgfVxyXG4gICAgc2V0IGRpc2FibGVkKHZhbHVlKSB7XHJcbiAgICAgICAgdGhpcy5fc2V0T3B0aW9uKCdkaXNhYmxlZCcsIHZhbHVlKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogU3BlY2lmaWVzIHRoZSBhdHRyaWJ1dGVzIHRvIGJlIGF0dGFjaGVkIHRvIHRoZSB3aWRnZXQncyByb290IGVsZW1lbnQuXHJcbiAgICAgKi9cclxuICAgIGdldCBlbGVtZW50QXR0cigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZ2V0T3B0aW9uKCdlbGVtZW50QXR0cicpO1xyXG4gICAgfVxyXG4gICAgc2V0IGVsZW1lbnRBdHRyKHZhbHVlKSB7XHJcbiAgICAgICAgdGhpcy5fc2V0T3B0aW9uKCdlbGVtZW50QXR0cicsIHZhbHVlKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQ29uZmlndXJlcyB0aGUgZXhwb3J0aW5nIGFuZCBwcmludGluZyBmZWF0dXJlcy5cclxuICAgICAqL1xyXG4gICAgZ2V0IGV4cG9ydCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZ2V0T3B0aW9uKCdleHBvcnQnKTtcclxuICAgIH1cclxuICAgIHNldCBleHBvcnQodmFsdWUpIHtcclxuICAgICAgICB0aGlzLl9zZXRPcHRpb24oJ2V4cG9ydCcsIHZhbHVlKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmFuZ2Ugc2VsZWN0b3IncyBpbmRlbnQgb3B0aW9ucy5cclxuICAgICAqL1xyXG4gICAgZ2V0IGluZGVudCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZ2V0T3B0aW9uKCdpbmRlbnQnKTtcclxuICAgIH1cclxuICAgIHNldCBpbmRlbnQodmFsdWUpIHtcclxuICAgICAgICB0aGlzLl9zZXRPcHRpb24oJ2luZGVudCcsIHZhbHVlKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQ29uZmlndXJlcyB0aGUgbG9hZGluZyBpbmRpY2F0b3IuXHJcbiAgICAgKi9cclxuICAgIGdldCBsb2FkaW5nSW5kaWNhdG9yKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRPcHRpb24oJ2xvYWRpbmdJbmRpY2F0b3InKTtcclxuICAgIH1cclxuICAgIHNldCBsb2FkaW5nSW5kaWNhdG9yKHZhbHVlKSB7XHJcbiAgICAgICAgdGhpcy5fc2V0T3B0aW9uKCdsb2FkaW5nSW5kaWNhdG9yJywgdmFsdWUpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBHZW5lcmF0ZXMgc3BhY2UgYXJvdW5kIHRoZSB3aWRnZXQuXHJcbiAgICAgKi9cclxuICAgIGdldCBtYXJnaW4oKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dldE9wdGlvbignbWFyZ2luJyk7XHJcbiAgICB9XHJcbiAgICBzZXQgbWFyZ2luKHZhbHVlKSB7XHJcbiAgICAgICAgdGhpcy5fc2V0T3B0aW9uKCdtYXJnaW4nLCB2YWx1ZSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIE5vdGlmaWVzIHRoZSB3aWRnZXQgdGhhdCBpdCBpcyBlbWJlZGRlZCBpbnRvIGFuIEhUTUwgcGFnZSB0aGF0IHVzZXMgYSB0YWcgbW9kaWZ5aW5nIHRoZSBwYXRoLlxyXG4gICAgICovXHJcbiAgICBnZXQgcGF0aE1vZGlmaWVkKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRPcHRpb24oJ3BhdGhNb2RpZmllZCcpO1xyXG4gICAgfVxyXG4gICAgc2V0IHBhdGhNb2RpZmllZCh2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuX3NldE9wdGlvbigncGF0aE1vZGlmaWVkJywgdmFsdWUpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBTcGVjaWZpZXMgd2hldGhlciB0byByZWRyYXcgdGhlIHdpZGdldCB3aGVuIHRoZSBzaXplIG9mIHRoZSBwYXJlbnQgYnJvd3NlciB3aW5kb3cgY2hhbmdlcyBvciBhIG1vYmlsZSBkZXZpY2Ugcm90YXRlcy5cclxuICAgICAqL1xyXG4gICAgZ2V0IHJlZHJhd09uUmVzaXplKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRPcHRpb24oJ3JlZHJhd09uUmVzaXplJyk7XHJcbiAgICB9XHJcbiAgICBzZXQgcmVkcmF3T25SZXNpemUodmFsdWUpIHtcclxuICAgICAgICB0aGlzLl9zZXRPcHRpb24oJ3JlZHJhd09uUmVzaXplJywgdmFsdWUpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBTd2l0Y2hlcyB0aGUgd2lkZ2V0IHRvIGEgcmlnaHQtdG8tbGVmdCByZXByZXNlbnRhdGlvbi5cclxuICAgICAqL1xyXG4gICAgZ2V0IHJ0bEVuYWJsZWQoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dldE9wdGlvbigncnRsRW5hYmxlZCcpO1xyXG4gICAgfVxyXG4gICAgc2V0IHJ0bEVuYWJsZWQodmFsdWUpIHtcclxuICAgICAgICB0aGlzLl9zZXRPcHRpb24oJ3J0bEVuYWJsZWQnLCB2YWx1ZSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFNwZWNpZmllcyBvcHRpb25zIG9mIHRoZSByYW5nZSBzZWxlY3RvcidzIHNjYWxlLlxyXG4gICAgICovXHJcbiAgICBnZXQgc2NhbGUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dldE9wdGlvbignc2NhbGUnKTtcclxuICAgIH1cclxuICAgIHNldCBzY2FsZSh2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuX3NldE9wdGlvbignc2NhbGUnLCB2YWx1ZSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFNwZWNpZmllcyB0aGUgY29sb3Igb2YgdGhlIHNlbGVjdGVkIHJhbmdlLlxyXG4gICAgICovXHJcbiAgICBnZXQgc2VsZWN0ZWRSYW5nZUNvbG9yKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRPcHRpb24oJ3NlbGVjdGVkUmFuZ2VDb2xvcicpO1xyXG4gICAgfVxyXG4gICAgc2V0IHNlbGVjdGVkUmFuZ2VDb2xvcih2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuX3NldE9wdGlvbignc2VsZWN0ZWRSYW5nZUNvbG9yJywgdmFsdWUpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBTcGVjaWZpZXMgaG93IHRoZSBzZWxlY3RlZCByYW5nZSBzaG91bGQgYmVoYXZlIHdoZW4gZGF0YSBpcyB1cGRhdGVkLiBBcHBsaWVzIG9ubHkgd2hlbiB0aGUgUmFuZ2VTZWxlY3RvciBpcyBib3VuZCB0byBhIGRhdGEgc291cmNlLlxyXG4gICAgICovXHJcbiAgICBnZXQgc2VsZWN0ZWRSYW5nZVVwZGF0ZU1vZGUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dldE9wdGlvbignc2VsZWN0ZWRSYW5nZVVwZGF0ZU1vZGUnKTtcclxuICAgIH1cclxuICAgIHNldCBzZWxlY3RlZFJhbmdlVXBkYXRlTW9kZSh2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuX3NldE9wdGlvbignc2VsZWN0ZWRSYW5nZVVwZGF0ZU1vZGUnLCB2YWx1ZSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFNwZWNpZmllcyByYW5nZSBzZWxlY3RvciBzaHV0dGVyIG9wdGlvbnMuXHJcbiAgICAgKi9cclxuICAgIGdldCBzaHV0dGVyKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRPcHRpb24oJ3NodXR0ZXInKTtcclxuICAgIH1cclxuICAgIHNldCBzaHV0dGVyKHZhbHVlKSB7XHJcbiAgICAgICAgdGhpcy5fc2V0T3B0aW9uKCdzaHV0dGVyJywgdmFsdWUpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBTcGVjaWZpZXMgdGhlIHdpZGdldCdzIHNpemUgaW4gcGl4ZWxzLlxyXG4gICAgICovXHJcbiAgICBnZXQgc2l6ZSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZ2V0T3B0aW9uKCdzaXplJyk7XHJcbiAgICB9XHJcbiAgICBzZXQgc2l6ZSh2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuX3NldE9wdGlvbignc2l6ZScsIHZhbHVlKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogU3BlY2lmaWVzIHRoZSBhcHBlYXJhbmNlIG9mIHRoZSByYW5nZSBzZWxlY3RvcidzIHNsaWRlciBoYW5kbGVzLlxyXG4gICAgICovXHJcbiAgICBnZXQgc2xpZGVySGFuZGxlKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRPcHRpb24oJ3NsaWRlckhhbmRsZScpO1xyXG4gICAgfVxyXG4gICAgc2V0IHNsaWRlckhhbmRsZSh2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuX3NldE9wdGlvbignc2xpZGVySGFuZGxlJywgdmFsdWUpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBEZWZpbmVzIHRoZSBvcHRpb25zIG9mIHRoZSByYW5nZSBzZWxlY3RvciBzbGlkZXIgbWFya2Vycy5cclxuICAgICAqL1xyXG4gICAgZ2V0IHNsaWRlck1hcmtlcigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZ2V0T3B0aW9uKCdzbGlkZXJNYXJrZXInKTtcclxuICAgIH1cclxuICAgIHNldCBzbGlkZXJNYXJrZXIodmFsdWUpIHtcclxuICAgICAgICB0aGlzLl9zZXRPcHRpb24oJ3NsaWRlck1hcmtlcicsIHZhbHVlKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogU2V0cyB0aGUgbmFtZSBvZiB0aGUgdGhlbWUgdGhlIHdpZGdldCB1c2VzLlxyXG4gICAgICovXHJcbiAgICBnZXQgdGhlbWUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dldE9wdGlvbigndGhlbWUnKTtcclxuICAgIH1cclxuICAgIHNldCB0aGVtZSh2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuX3NldE9wdGlvbigndGhlbWUnLCB2YWx1ZSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIENvbmZpZ3VyZXMgdGhlIHdpZGdldCdzIHRpdGxlLlxyXG4gICAgICovXHJcbiAgICBnZXQgdGl0bGUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dldE9wdGlvbigndGl0bGUnKTtcclxuICAgIH1cclxuICAgIHNldCB0aXRsZSh2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuX3NldE9wdGlvbigndGl0bGUnLCB2YWx1ZSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFRoZSBzZWxlY3RlZCByYW5nZSAoaW5pdGlhbCBvciBjdXJyZW50KS4gRXF1YWxzIHRoZSBlbnRpcmUgc2NhbGUgd2hlbiBub3Qgc2V0LlxyXG4gICAgICovXHJcbiAgICBnZXQgdmFsdWUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dldE9wdGlvbigndmFsdWUnKTtcclxuICAgIH1cclxuICAgIHNldCB2YWx1ZSh2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuX3NldE9wdGlvbigndmFsdWUnLCB2YWx1ZSk7XHJcbiAgICB9XHJcbiAgICBjaGFuZ2UoXykgeyB9XHJcbiAgICBfY3JlYXRlSW5zdGFuY2UoZWxlbWVudCwgb3B0aW9ucykge1xyXG4gICAgICAgIHJldHVybiBuZXcgRHhSYW5nZVNlbGVjdG9yKGVsZW1lbnQsIG9wdGlvbnMpO1xyXG4gICAgfVxyXG4gICAgd3JpdGVWYWx1ZSh2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuZXZlbnRIZWxwZXIubG9ja2VkVmFsdWVDaGFuZ2VFdmVudCA9IHRydWU7XHJcbiAgICAgICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xyXG4gICAgICAgIHRoaXMuZXZlbnRIZWxwZXIubG9ja2VkVmFsdWVDaGFuZ2VFdmVudCA9IGZhbHNlO1xyXG4gICAgfVxyXG4gICAgcmVnaXN0ZXJPbkNoYW5nZShmbikgeyB0aGlzLmNoYW5nZSA9IGZuOyB9XHJcbiAgICByZWdpc3Rlck9uVG91Y2hlZChmbikgeyB0aGlzLnRvdWNoZWQgPSBmbjsgfVxyXG4gICAgX2NyZWF0ZVdpZGdldChlbGVtZW50KSB7XHJcbiAgICAgICAgc3VwZXIuX2NyZWF0ZVdpZGdldChlbGVtZW50KTtcclxuICAgICAgICB0aGlzLmluc3RhbmNlLm9uKCdmb2N1c091dCcsIChlKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuZXZlbnRIZWxwZXIuZmlyZU5nRXZlbnQoJ29uQmx1cicsIFtlXSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBuZ09uRGVzdHJveSgpIHtcclxuICAgICAgICB0aGlzLl9kZXN0cm95V2lkZ2V0KCk7XHJcbiAgICB9XHJcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzKSB7XHJcbiAgICAgICAgc3VwZXIubmdPbkNoYW5nZXMoY2hhbmdlcyk7XHJcbiAgICAgICAgdGhpcy5zZXR1cENoYW5nZXMoJ2RhdGFTb3VyY2UnLCBjaGFuZ2VzKTtcclxuICAgICAgICB0aGlzLnNldHVwQ2hhbmdlcygndmFsdWUnLCBjaGFuZ2VzKTtcclxuICAgIH1cclxuICAgIHNldHVwQ2hhbmdlcyhwcm9wLCBjaGFuZ2VzKSB7XHJcbiAgICAgICAgaWYgKCEocHJvcCBpbiB0aGlzLl9vcHRpb25zVG9VcGRhdGUpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2lkaC5zZXR1cChwcm9wLCBjaGFuZ2VzKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBuZ0RvQ2hlY2soKSB7XHJcbiAgICAgICAgdGhpcy5faWRoLmRvQ2hlY2soJ2RhdGFTb3VyY2UnKTtcclxuICAgICAgICB0aGlzLl9pZGguZG9DaGVjaygndmFsdWUnKTtcclxuICAgICAgICB0aGlzLl93YXRjaGVySGVscGVyLmNoZWNrV2F0Y2hlcnMoKTtcclxuICAgICAgICBzdXBlci5uZ0RvQ2hlY2soKTtcclxuICAgICAgICBzdXBlci5jbGVhckNoYW5nZWRPcHRpb25zKCk7XHJcbiAgICB9XHJcbiAgICBfc2V0T3B0aW9uKG5hbWUsIHZhbHVlKSB7XHJcbiAgICAgICAgbGV0IGlzU2V0dXAgPSB0aGlzLl9pZGguc2V0dXBTaW5nbGUobmFtZSwgdmFsdWUpO1xyXG4gICAgICAgIGxldCBpc0NoYW5nZWQgPSB0aGlzLl9pZGguZ2V0Q2hhbmdlcyhuYW1lLCB2YWx1ZSkgIT09IG51bGw7XHJcbiAgICAgICAgaWYgKGlzU2V0dXAgfHwgaXNDaGFuZ2VkKSB7XHJcbiAgICAgICAgICAgIHN1cGVyLl9zZXRPcHRpb24obmFtZSwgdmFsdWUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufTtcclxuRHhSYW5nZVNlbGVjdG9yQ29tcG9uZW50LmN0b3JQYXJhbWV0ZXJzID0gKCkgPT4gW1xyXG4gICAgeyB0eXBlOiBFbGVtZW50UmVmIH0sXHJcbiAgICB7IHR5cGU6IE5nWm9uZSB9LFxyXG4gICAgeyB0eXBlOiBEeFRlbXBsYXRlSG9zdCB9LFxyXG4gICAgeyB0eXBlOiBXYXRjaGVySGVscGVyIH0sXHJcbiAgICB7IHR5cGU6IEl0ZXJhYmxlRGlmZmVySGVscGVyIH0sXHJcbiAgICB7IHR5cGU6IE5lc3RlZE9wdGlvbkhvc3QgfSxcclxuICAgIHsgdHlwZTogVHJhbnNmZXJTdGF0ZSB9LFxyXG4gICAgeyB0eXBlOiB1bmRlZmluZWQsIGRlY29yYXRvcnM6IFt7IHR5cGU6IEluamVjdCwgYXJnczogW1BMQVRGT1JNX0lELF0gfV0gfVxyXG5dO1xyXG50c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgSW5wdXQoKSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbT2JqZWN0XSlcclxuXSwgRHhSYW5nZVNlbGVjdG9yQ29tcG9uZW50LnByb3RvdHlwZSwgXCJiYWNrZ3JvdW5kXCIsIG51bGwpO1xyXG50c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgSW5wdXQoKSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbT2JqZWN0XSlcclxuXSwgRHhSYW5nZVNlbGVjdG9yQ29tcG9uZW50LnByb3RvdHlwZSwgXCJiZWhhdmlvclwiLCBudWxsKTtcclxudHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIElucHV0KCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW09iamVjdF0pXHJcbl0sIER4UmFuZ2VTZWxlY3RvckNvbXBvbmVudC5wcm90b3R5cGUsIFwiY2hhcnRcIiwgbnVsbCk7XHJcbnRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICBJbnB1dCgpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtTdHJpbmddKVxyXG5dLCBEeFJhbmdlU2VsZWN0b3JDb21wb25lbnQucHJvdG90eXBlLCBcImNvbnRhaW5lckJhY2tncm91bmRDb2xvclwiLCBudWxsKTtcclxudHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIElucHV0KCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW09iamVjdF0pXHJcbl0sIER4UmFuZ2VTZWxlY3RvckNvbXBvbmVudC5wcm90b3R5cGUsIFwiZGF0YVNvdXJjZVwiLCBudWxsKTtcclxudHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIElucHV0KCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW1N0cmluZ10pXHJcbl0sIER4UmFuZ2VTZWxlY3RvckNvbXBvbmVudC5wcm90b3R5cGUsIFwiZGF0YVNvdXJjZUZpZWxkXCIsIG51bGwpO1xyXG50c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgSW5wdXQoKSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0Jvb2xlYW5dKVxyXG5dLCBEeFJhbmdlU2VsZWN0b3JDb21wb25lbnQucHJvdG90eXBlLCBcImRpc2FibGVkXCIsIG51bGwpO1xyXG50c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgSW5wdXQoKSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbT2JqZWN0XSlcclxuXSwgRHhSYW5nZVNlbGVjdG9yQ29tcG9uZW50LnByb3RvdHlwZSwgXCJlbGVtZW50QXR0clwiLCBudWxsKTtcclxudHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIElucHV0KCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW09iamVjdF0pXHJcbl0sIER4UmFuZ2VTZWxlY3RvckNvbXBvbmVudC5wcm90b3R5cGUsIFwiZXhwb3J0XCIsIG51bGwpO1xyXG50c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgSW5wdXQoKSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbT2JqZWN0XSlcclxuXSwgRHhSYW5nZVNlbGVjdG9yQ29tcG9uZW50LnByb3RvdHlwZSwgXCJpbmRlbnRcIiwgbnVsbCk7XHJcbnRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICBJbnB1dCgpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtPYmplY3RdKVxyXG5dLCBEeFJhbmdlU2VsZWN0b3JDb21wb25lbnQucHJvdG90eXBlLCBcImxvYWRpbmdJbmRpY2F0b3JcIiwgbnVsbCk7XHJcbnRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICBJbnB1dCgpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtPYmplY3RdKVxyXG5dLCBEeFJhbmdlU2VsZWN0b3JDb21wb25lbnQucHJvdG90eXBlLCBcIm1hcmdpblwiLCBudWxsKTtcclxudHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIElucHV0KCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtCb29sZWFuXSlcclxuXSwgRHhSYW5nZVNlbGVjdG9yQ29tcG9uZW50LnByb3RvdHlwZSwgXCJwYXRoTW9kaWZpZWRcIiwgbnVsbCk7XHJcbnRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICBJbnB1dCgpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbiksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbQm9vbGVhbl0pXHJcbl0sIER4UmFuZ2VTZWxlY3RvckNvbXBvbmVudC5wcm90b3R5cGUsIFwicmVkcmF3T25SZXNpemVcIiwgbnVsbCk7XHJcbnRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICBJbnB1dCgpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbiksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbQm9vbGVhbl0pXHJcbl0sIER4UmFuZ2VTZWxlY3RvckNvbXBvbmVudC5wcm90b3R5cGUsIFwicnRsRW5hYmxlZFwiLCBudWxsKTtcclxudHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIElucHV0KCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW09iamVjdF0pXHJcbl0sIER4UmFuZ2VTZWxlY3RvckNvbXBvbmVudC5wcm90b3R5cGUsIFwic2NhbGVcIiwgbnVsbCk7XHJcbnRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICBJbnB1dCgpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtTdHJpbmddKVxyXG5dLCBEeFJhbmdlU2VsZWN0b3JDb21wb25lbnQucHJvdG90eXBlLCBcInNlbGVjdGVkUmFuZ2VDb2xvclwiLCBudWxsKTtcclxudHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIElucHV0KCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW1N0cmluZ10pXHJcbl0sIER4UmFuZ2VTZWxlY3RvckNvbXBvbmVudC5wcm90b3R5cGUsIFwic2VsZWN0ZWRSYW5nZVVwZGF0ZU1vZGVcIiwgbnVsbCk7XHJcbnRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICBJbnB1dCgpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtPYmplY3RdKVxyXG5dLCBEeFJhbmdlU2VsZWN0b3JDb21wb25lbnQucHJvdG90eXBlLCBcInNodXR0ZXJcIiwgbnVsbCk7XHJcbnRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICBJbnB1dCgpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtPYmplY3RdKVxyXG5dLCBEeFJhbmdlU2VsZWN0b3JDb21wb25lbnQucHJvdG90eXBlLCBcInNpemVcIiwgbnVsbCk7XHJcbnRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICBJbnB1dCgpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtPYmplY3RdKVxyXG5dLCBEeFJhbmdlU2VsZWN0b3JDb21wb25lbnQucHJvdG90eXBlLCBcInNsaWRlckhhbmRsZVwiLCBudWxsKTtcclxudHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIElucHV0KCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW09iamVjdF0pXHJcbl0sIER4UmFuZ2VTZWxlY3RvckNvbXBvbmVudC5wcm90b3R5cGUsIFwic2xpZGVyTWFya2VyXCIsIG51bGwpO1xyXG50c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgSW5wdXQoKSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZyksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbU3RyaW5nXSlcclxuXSwgRHhSYW5nZVNlbGVjdG9yQ29tcG9uZW50LnByb3RvdHlwZSwgXCJ0aGVtZVwiLCBudWxsKTtcclxudHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIElucHV0KCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW09iamVjdF0pXHJcbl0sIER4UmFuZ2VTZWxlY3RvckNvbXBvbmVudC5wcm90b3R5cGUsIFwidGl0bGVcIiwgbnVsbCk7XHJcbnRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICBJbnB1dCgpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtPYmplY3RdKVxyXG5dLCBEeFJhbmdlU2VsZWN0b3JDb21wb25lbnQucHJvdG90eXBlLCBcInZhbHVlXCIsIG51bGwpO1xyXG50c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgT3V0cHV0KCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXHJcbl0sIER4UmFuZ2VTZWxlY3RvckNvbXBvbmVudC5wcm90b3R5cGUsIFwib25EaXNwb3NpbmdcIiwgdm9pZCAwKTtcclxudHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIE91dHB1dCgpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxyXG5dLCBEeFJhbmdlU2VsZWN0b3JDb21wb25lbnQucHJvdG90eXBlLCBcIm9uRHJhd25cIiwgdm9pZCAwKTtcclxudHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIE91dHB1dCgpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxyXG5dLCBEeFJhbmdlU2VsZWN0b3JDb21wb25lbnQucHJvdG90eXBlLCBcIm9uRXhwb3J0ZWRcIiwgdm9pZCAwKTtcclxudHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIE91dHB1dCgpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxyXG5dLCBEeFJhbmdlU2VsZWN0b3JDb21wb25lbnQucHJvdG90eXBlLCBcIm9uRXhwb3J0aW5nXCIsIHZvaWQgMCk7XHJcbnRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICBPdXRwdXQoKSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcclxuXSwgRHhSYW5nZVNlbGVjdG9yQ29tcG9uZW50LnByb3RvdHlwZSwgXCJvbkZpbGVTYXZpbmdcIiwgdm9pZCAwKTtcclxudHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIE91dHB1dCgpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxyXG5dLCBEeFJhbmdlU2VsZWN0b3JDb21wb25lbnQucHJvdG90eXBlLCBcIm9uSW5jaWRlbnRPY2N1cnJlZFwiLCB2b2lkIDApO1xyXG50c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgT3V0cHV0KCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXHJcbl0sIER4UmFuZ2VTZWxlY3RvckNvbXBvbmVudC5wcm90b3R5cGUsIFwib25Jbml0aWFsaXplZFwiLCB2b2lkIDApO1xyXG50c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgT3V0cHV0KCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXHJcbl0sIER4UmFuZ2VTZWxlY3RvckNvbXBvbmVudC5wcm90b3R5cGUsIFwib25PcHRpb25DaGFuZ2VkXCIsIHZvaWQgMCk7XHJcbnRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICBPdXRwdXQoKSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcclxuXSwgRHhSYW5nZVNlbGVjdG9yQ29tcG9uZW50LnByb3RvdHlwZSwgXCJvblZhbHVlQ2hhbmdlZFwiLCB2b2lkIDApO1xyXG50c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgT3V0cHV0KCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXHJcbl0sIER4UmFuZ2VTZWxlY3RvckNvbXBvbmVudC5wcm90b3R5cGUsIFwiYmFja2dyb3VuZENoYW5nZVwiLCB2b2lkIDApO1xyXG50c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgT3V0cHV0KCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXHJcbl0sIER4UmFuZ2VTZWxlY3RvckNvbXBvbmVudC5wcm90b3R5cGUsIFwiYmVoYXZpb3JDaGFuZ2VcIiwgdm9pZCAwKTtcclxudHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIE91dHB1dCgpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxyXG5dLCBEeFJhbmdlU2VsZWN0b3JDb21wb25lbnQucHJvdG90eXBlLCBcImNoYXJ0Q2hhbmdlXCIsIHZvaWQgMCk7XHJcbnRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICBPdXRwdXQoKSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcclxuXSwgRHhSYW5nZVNlbGVjdG9yQ29tcG9uZW50LnByb3RvdHlwZSwgXCJjb250YWluZXJCYWNrZ3JvdW5kQ29sb3JDaGFuZ2VcIiwgdm9pZCAwKTtcclxudHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIE91dHB1dCgpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxyXG5dLCBEeFJhbmdlU2VsZWN0b3JDb21wb25lbnQucHJvdG90eXBlLCBcImRhdGFTb3VyY2VDaGFuZ2VcIiwgdm9pZCAwKTtcclxudHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIE91dHB1dCgpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxyXG5dLCBEeFJhbmdlU2VsZWN0b3JDb21wb25lbnQucHJvdG90eXBlLCBcImRhdGFTb3VyY2VGaWVsZENoYW5nZVwiLCB2b2lkIDApO1xyXG50c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgT3V0cHV0KCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXHJcbl0sIER4UmFuZ2VTZWxlY3RvckNvbXBvbmVudC5wcm90b3R5cGUsIFwiZGlzYWJsZWRDaGFuZ2VcIiwgdm9pZCAwKTtcclxudHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIE91dHB1dCgpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxyXG5dLCBEeFJhbmdlU2VsZWN0b3JDb21wb25lbnQucHJvdG90eXBlLCBcImVsZW1lbnRBdHRyQ2hhbmdlXCIsIHZvaWQgMCk7XHJcbnRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICBPdXRwdXQoKSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcclxuXSwgRHhSYW5nZVNlbGVjdG9yQ29tcG9uZW50LnByb3RvdHlwZSwgXCJleHBvcnRDaGFuZ2VcIiwgdm9pZCAwKTtcclxudHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIE91dHB1dCgpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxyXG5dLCBEeFJhbmdlU2VsZWN0b3JDb21wb25lbnQucHJvdG90eXBlLCBcImluZGVudENoYW5nZVwiLCB2b2lkIDApO1xyXG50c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgT3V0cHV0KCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXHJcbl0sIER4UmFuZ2VTZWxlY3RvckNvbXBvbmVudC5wcm90b3R5cGUsIFwibG9hZGluZ0luZGljYXRvckNoYW5nZVwiLCB2b2lkIDApO1xyXG50c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgT3V0cHV0KCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXHJcbl0sIER4UmFuZ2VTZWxlY3RvckNvbXBvbmVudC5wcm90b3R5cGUsIFwibWFyZ2luQ2hhbmdlXCIsIHZvaWQgMCk7XHJcbnRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICBPdXRwdXQoKSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcclxuXSwgRHhSYW5nZVNlbGVjdG9yQ29tcG9uZW50LnByb3RvdHlwZSwgXCJwYXRoTW9kaWZpZWRDaGFuZ2VcIiwgdm9pZCAwKTtcclxudHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIE91dHB1dCgpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxyXG5dLCBEeFJhbmdlU2VsZWN0b3JDb21wb25lbnQucHJvdG90eXBlLCBcInJlZHJhd09uUmVzaXplQ2hhbmdlXCIsIHZvaWQgMCk7XHJcbnRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICBPdXRwdXQoKSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcclxuXSwgRHhSYW5nZVNlbGVjdG9yQ29tcG9uZW50LnByb3RvdHlwZSwgXCJydGxFbmFibGVkQ2hhbmdlXCIsIHZvaWQgMCk7XHJcbnRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICBPdXRwdXQoKSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcclxuXSwgRHhSYW5nZVNlbGVjdG9yQ29tcG9uZW50LnByb3RvdHlwZSwgXCJzY2FsZUNoYW5nZVwiLCB2b2lkIDApO1xyXG50c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgT3V0cHV0KCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXHJcbl0sIER4UmFuZ2VTZWxlY3RvckNvbXBvbmVudC5wcm90b3R5cGUsIFwic2VsZWN0ZWRSYW5nZUNvbG9yQ2hhbmdlXCIsIHZvaWQgMCk7XHJcbnRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICBPdXRwdXQoKSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcclxuXSwgRHhSYW5nZVNlbGVjdG9yQ29tcG9uZW50LnByb3RvdHlwZSwgXCJzZWxlY3RlZFJhbmdlVXBkYXRlTW9kZUNoYW5nZVwiLCB2b2lkIDApO1xyXG50c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgT3V0cHV0KCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXHJcbl0sIER4UmFuZ2VTZWxlY3RvckNvbXBvbmVudC5wcm90b3R5cGUsIFwic2h1dHRlckNoYW5nZVwiLCB2b2lkIDApO1xyXG50c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgT3V0cHV0KCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXHJcbl0sIER4UmFuZ2VTZWxlY3RvckNvbXBvbmVudC5wcm90b3R5cGUsIFwic2l6ZUNoYW5nZVwiLCB2b2lkIDApO1xyXG50c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgT3V0cHV0KCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXHJcbl0sIER4UmFuZ2VTZWxlY3RvckNvbXBvbmVudC5wcm90b3R5cGUsIFwic2xpZGVySGFuZGxlQ2hhbmdlXCIsIHZvaWQgMCk7XHJcbnRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICBPdXRwdXQoKSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcclxuXSwgRHhSYW5nZVNlbGVjdG9yQ29tcG9uZW50LnByb3RvdHlwZSwgXCJzbGlkZXJNYXJrZXJDaGFuZ2VcIiwgdm9pZCAwKTtcclxudHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIE91dHB1dCgpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxyXG5dLCBEeFJhbmdlU2VsZWN0b3JDb21wb25lbnQucHJvdG90eXBlLCBcInRoZW1lQ2hhbmdlXCIsIHZvaWQgMCk7XHJcbnRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICBPdXRwdXQoKSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcclxuXSwgRHhSYW5nZVNlbGVjdG9yQ29tcG9uZW50LnByb3RvdHlwZSwgXCJ0aXRsZUNoYW5nZVwiLCB2b2lkIDApO1xyXG50c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgT3V0cHV0KCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXHJcbl0sIER4UmFuZ2VTZWxlY3RvckNvbXBvbmVudC5wcm90b3R5cGUsIFwidmFsdWVDaGFuZ2VcIiwgdm9pZCAwKTtcclxudHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIE91dHB1dCgpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxyXG5dLCBEeFJhbmdlU2VsZWN0b3JDb21wb25lbnQucHJvdG90eXBlLCBcIm9uQmx1clwiLCB2b2lkIDApO1xyXG50c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgSG9zdExpc3RlbmVyKCd2YWx1ZUNoYW5nZScsIFsnJGV2ZW50J10pLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRnVuY3Rpb24pLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW09iamVjdF0pLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnJldHVybnR5cGVcIiwgdm9pZCAwKVxyXG5dLCBEeFJhbmdlU2VsZWN0b3JDb21wb25lbnQucHJvdG90eXBlLCBcImNoYW5nZVwiLCBudWxsKTtcclxudHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIEhvc3RMaXN0ZW5lcignb25CbHVyJywgWyckZXZlbnQnXSksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXHJcbl0sIER4UmFuZ2VTZWxlY3RvckNvbXBvbmVudC5wcm90b3R5cGUsIFwidG91Y2hlZFwiLCB2b2lkIDApO1xyXG5EeFJhbmdlU2VsZWN0b3JDb21wb25lbnQgPSB0c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgQ29tcG9uZW50KHtcclxuICAgICAgICBzZWxlY3RvcjogJ2R4LXJhbmdlLXNlbGVjdG9yJyxcclxuICAgICAgICB0ZW1wbGF0ZTogJycsXHJcbiAgICAgICAgcHJvdmlkZXJzOiBbXHJcbiAgICAgICAgICAgIER4VGVtcGxhdGVIb3N0LFxyXG4gICAgICAgICAgICBXYXRjaGVySGVscGVyLFxyXG4gICAgICAgICAgICBDVVNUT01fVkFMVUVfQUNDRVNTT1JfUFJPVklERVIsXHJcbiAgICAgICAgICAgIE5lc3RlZE9wdGlvbkhvc3QsXHJcbiAgICAgICAgICAgIEl0ZXJhYmxlRGlmZmVySGVscGVyXHJcbiAgICAgICAgXSxcclxuICAgICAgICBzdHlsZXM6IFsnIDpob3N0IHsgIGRpc3BsYXk6IGJsb2NrOyB9J11cclxuICAgIH0pLFxyXG4gICAgdHNsaWJfMS5fX3BhcmFtKDcsIEluamVjdChQTEFURk9STV9JRCkpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0VsZW1lbnRSZWYsIE5nWm9uZSwgRHhUZW1wbGF0ZUhvc3QsXHJcbiAgICAgICAgV2F0Y2hlckhlbHBlcixcclxuICAgICAgICBJdGVyYWJsZURpZmZlckhlbHBlcixcclxuICAgICAgICBOZXN0ZWRPcHRpb25Ib3N0LFxyXG4gICAgICAgIFRyYW5zZmVyU3RhdGUsIE9iamVjdF0pXHJcbl0sIER4UmFuZ2VTZWxlY3RvckNvbXBvbmVudCk7XHJcbmV4cG9ydCB7IER4UmFuZ2VTZWxlY3RvckNvbXBvbmVudCB9O1xyXG5sZXQgRHhSYW5nZVNlbGVjdG9yTW9kdWxlID0gY2xhc3MgRHhSYW5nZVNlbGVjdG9yTW9kdWxlIHtcclxufTtcclxuRHhSYW5nZVNlbGVjdG9yTW9kdWxlID0gdHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIE5nTW9kdWxlKHtcclxuICAgICAgICBpbXBvcnRzOiBbXHJcbiAgICAgICAgICAgIER4b0JhY2tncm91bmRNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b0ltYWdlTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9CZWhhdmlvck1vZHVsZSxcclxuICAgICAgICAgICAgRHhvQ2hhcnRNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b0NvbW1vblNlcmllc1NldHRpbmdzTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9BZ2dyZWdhdGlvbk1vZHVsZSxcclxuICAgICAgICAgICAgRHhvQXJlYU1vZHVsZSxcclxuICAgICAgICAgICAgRHhvQm9yZGVyTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9Ib3ZlclN0eWxlTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9IYXRjaGluZ01vZHVsZSxcclxuICAgICAgICAgICAgRHhvTGFiZWxNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b0Nvbm5lY3Rvck1vZHVsZSxcclxuICAgICAgICAgICAgRHhvUG9pbnRNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b0hlaWdodE1vZHVsZSxcclxuICAgICAgICAgICAgRHhvVXJsTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9XaWR0aE1vZHVsZSxcclxuICAgICAgICAgICAgRHhvU2VsZWN0aW9uU3R5bGVNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b1JlZHVjdGlvbk1vZHVsZSxcclxuICAgICAgICAgICAgRHhvVmFsdWVFcnJvckJhck1vZHVsZSxcclxuICAgICAgICAgICAgRHhvQmFyTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9CdWJibGVNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b0NhbmRsZXN0aWNrTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9GdWxsc3RhY2tlZGFyZWFNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b0Z1bGxzdGFja2VkYmFyTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9GdWxsc3RhY2tlZGxpbmVNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b0Z1bGxzdGFja2Vkc3BsaW5lTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9GdWxsc3RhY2tlZHNwbGluZWFyZWFNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b0FyZ3VtZW50Rm9ybWF0TW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9Gb250TW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9Gb3JtYXRNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b0xpbmVNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b1JhbmdlYXJlYU1vZHVsZSxcclxuICAgICAgICAgICAgRHhvUmFuZ2ViYXJNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b1NjYXR0ZXJNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b1NwbGluZU1vZHVsZSxcclxuICAgICAgICAgICAgRHhvU3BsaW5lYXJlYU1vZHVsZSxcclxuICAgICAgICAgICAgRHhvU3RhY2tlZGFyZWFNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b1N0YWNrZWRiYXJNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b1N0YWNrZWRsaW5lTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9TdGFja2Vkc3BsaW5lTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9TdGFja2Vkc3BsaW5lYXJlYU1vZHVsZSxcclxuICAgICAgICAgICAgRHhvU3RlcGFyZWFNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b1N0ZXBsaW5lTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9TdG9ja01vZHVsZSxcclxuICAgICAgICAgICAgRHhvRGF0YVByZXBhcmVTZXR0aW5nc01vZHVsZSxcclxuICAgICAgICAgICAgRHhpU2VyaWVzTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9TZXJpZXNUZW1wbGF0ZU1vZHVsZSxcclxuICAgICAgICAgICAgRHhvVmFsdWVBeGlzTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9FeHBvcnRNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b0luZGVudE1vZHVsZSxcclxuICAgICAgICAgICAgRHhvTG9hZGluZ0luZGljYXRvck1vZHVsZSxcclxuICAgICAgICAgICAgRHhvTWFyZ2luTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9TY2FsZU1vZHVsZSxcclxuICAgICAgICAgICAgRHhvQWdncmVnYXRpb25JbnRlcnZhbE1vZHVsZSxcclxuICAgICAgICAgICAgRHhpQnJlYWtNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b0JyZWFrU3R5bGVNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b01hcmtlck1vZHVsZSxcclxuICAgICAgICAgICAgRHhvTWF4UmFuZ2VNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b01pbm9yVGlja01vZHVsZSxcclxuICAgICAgICAgICAgRHhvTWlub3JUaWNrSW50ZXJ2YWxNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b01pblJhbmdlTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9UaWNrTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9UaWNrSW50ZXJ2YWxNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b1NodXR0ZXJNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b1NpemVNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b1NsaWRlckhhbmRsZU1vZHVsZSxcclxuICAgICAgICAgICAgRHhvU2xpZGVyTWFya2VyTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9UaXRsZU1vZHVsZSxcclxuICAgICAgICAgICAgRHhvU3VidGl0bGVNb2R1bGUsXHJcbiAgICAgICAgICAgIER4SW50ZWdyYXRpb25Nb2R1bGUsXHJcbiAgICAgICAgICAgIER4VGVtcGxhdGVNb2R1bGUsXHJcbiAgICAgICAgICAgIEJyb3dzZXJUcmFuc2ZlclN0YXRlTW9kdWxlXHJcbiAgICAgICAgXSxcclxuICAgICAgICBkZWNsYXJhdGlvbnM6IFtcclxuICAgICAgICAgICAgRHhSYW5nZVNlbGVjdG9yQ29tcG9uZW50XHJcbiAgICAgICAgXSxcclxuICAgICAgICBleHBvcnRzOiBbXHJcbiAgICAgICAgICAgIER4UmFuZ2VTZWxlY3RvckNvbXBvbmVudCxcclxuICAgICAgICAgICAgRHhvQmFja2dyb3VuZE1vZHVsZSxcclxuICAgICAgICAgICAgRHhvSW1hZ2VNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b0JlaGF2aW9yTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9DaGFydE1vZHVsZSxcclxuICAgICAgICAgICAgRHhvQ29tbW9uU2VyaWVzU2V0dGluZ3NNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b0FnZ3JlZ2F0aW9uTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9BcmVhTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9Cb3JkZXJNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b0hvdmVyU3R5bGVNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b0hhdGNoaW5nTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9MYWJlbE1vZHVsZSxcclxuICAgICAgICAgICAgRHhvQ29ubmVjdG9yTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9Qb2ludE1vZHVsZSxcclxuICAgICAgICAgICAgRHhvSGVpZ2h0TW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9VcmxNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b1dpZHRoTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9TZWxlY3Rpb25TdHlsZU1vZHVsZSxcclxuICAgICAgICAgICAgRHhvUmVkdWN0aW9uTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9WYWx1ZUVycm9yQmFyTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9CYXJNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b0J1YmJsZU1vZHVsZSxcclxuICAgICAgICAgICAgRHhvQ2FuZGxlc3RpY2tNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b0Z1bGxzdGFja2VkYXJlYU1vZHVsZSxcclxuICAgICAgICAgICAgRHhvRnVsbHN0YWNrZWRiYXJNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b0Z1bGxzdGFja2VkbGluZU1vZHVsZSxcclxuICAgICAgICAgICAgRHhvRnVsbHN0YWNrZWRzcGxpbmVNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b0Z1bGxzdGFja2Vkc3BsaW5lYXJlYU1vZHVsZSxcclxuICAgICAgICAgICAgRHhvQXJndW1lbnRGb3JtYXRNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b0ZvbnRNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b0Zvcm1hdE1vZHVsZSxcclxuICAgICAgICAgICAgRHhvTGluZU1vZHVsZSxcclxuICAgICAgICAgICAgRHhvUmFuZ2VhcmVhTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9SYW5nZWJhck1vZHVsZSxcclxuICAgICAgICAgICAgRHhvU2NhdHRlck1vZHVsZSxcclxuICAgICAgICAgICAgRHhvU3BsaW5lTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9TcGxpbmVhcmVhTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9TdGFja2VkYXJlYU1vZHVsZSxcclxuICAgICAgICAgICAgRHhvU3RhY2tlZGJhck1vZHVsZSxcclxuICAgICAgICAgICAgRHhvU3RhY2tlZGxpbmVNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b1N0YWNrZWRzcGxpbmVNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b1N0YWNrZWRzcGxpbmVhcmVhTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9TdGVwYXJlYU1vZHVsZSxcclxuICAgICAgICAgICAgRHhvU3RlcGxpbmVNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b1N0b2NrTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9EYXRhUHJlcGFyZVNldHRpbmdzTW9kdWxlLFxyXG4gICAgICAgICAgICBEeGlTZXJpZXNNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b1Nlcmllc1RlbXBsYXRlTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9WYWx1ZUF4aXNNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b0V4cG9ydE1vZHVsZSxcclxuICAgICAgICAgICAgRHhvSW5kZW50TW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9Mb2FkaW5nSW5kaWNhdG9yTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9NYXJnaW5Nb2R1bGUsXHJcbiAgICAgICAgICAgIER4b1NjYWxlTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9BZ2dyZWdhdGlvbkludGVydmFsTW9kdWxlLFxyXG4gICAgICAgICAgICBEeGlCcmVha01vZHVsZSxcclxuICAgICAgICAgICAgRHhvQnJlYWtTdHlsZU1vZHVsZSxcclxuICAgICAgICAgICAgRHhvTWFya2VyTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9NYXhSYW5nZU1vZHVsZSxcclxuICAgICAgICAgICAgRHhvTWlub3JUaWNrTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9NaW5vclRpY2tJbnRlcnZhbE1vZHVsZSxcclxuICAgICAgICAgICAgRHhvTWluUmFuZ2VNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b1RpY2tNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b1RpY2tJbnRlcnZhbE1vZHVsZSxcclxuICAgICAgICAgICAgRHhvU2h1dHRlck1vZHVsZSxcclxuICAgICAgICAgICAgRHhvU2l6ZU1vZHVsZSxcclxuICAgICAgICAgICAgRHhvU2xpZGVySGFuZGxlTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9TbGlkZXJNYXJrZXJNb2R1bGUsXHJcbiAgICAgICAgICAgIER4b1RpdGxlTW9kdWxlLFxyXG4gICAgICAgICAgICBEeG9TdWJ0aXRsZU1vZHVsZSxcclxuICAgICAgICAgICAgRHhUZW1wbGF0ZU1vZHVsZVxyXG4gICAgICAgIF1cclxuICAgIH0pXHJcbl0sIER4UmFuZ2VTZWxlY3Rvck1vZHVsZSk7XHJcbmV4cG9ydCB7IER4UmFuZ2VTZWxlY3Rvck1vZHVsZSB9O1xyIl19