/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// todo: split
import { Injectable } from '@angular/core';
/**
 * Provides default values for Pagination and pager components
 */
import * as ɵngcc0 from '@angular/core';
export class PaginationConfig {
    constructor() {
        this.main = {
            maxSize: void 0,
            itemsPerPage: 10,
            boundaryLinks: false,
            directionLinks: true,
            firstText: 'First',
            previousText: 'Previous',
            nextText: 'Next',
            lastText: 'Last',
            pageBtnClass: '',
            rotate: true
        };
        this.pager = {
            itemsPerPage: 15,
            previousText: '« Previous',
            nextText: 'Next »',
            pageBtnClass: '',
            align: true
        };
    }
}
PaginationConfig.ɵfac = function PaginationConfig_Factory(t) { return new (t || PaginationConfig)(); };
PaginationConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: PaginationConfig, factory: PaginationConfig.ɵfac });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PaginationConfig, [{
        type: Injectable
    }], function () { return []; }, null); })();
if (false) {
    /** @type {?} */
    PaginationConfig.prototype.main;
    /** @type {?} */
    PaginationConfig.prototype.pager;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9wbnNiL0Rlc2t0b3AvTU9BIC0gRS1LQU5NQVMvbm9kZV9tb2R1bGVzL25neC1ib290c3RyYXAvcGFnaW5hdGlvbi9lc20yMDE1L3BhZ2luYXRpb24uY29uZmlnLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7O0FBU0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQXNCQzs7O2dEQUdDIiwiZmlsZSI6InBhZ2luYXRpb24uY29uZmlnLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlcyxleHRyYVJlcXVpcmUsbWlzc2luZ092ZXJyaWRlLG1pc3NpbmdSZXR1cm4sdW51c2VkUHJpdmF0ZU1lbWJlcnMsdXNlbGVzc0NvZGV9IGNoZWNrZWQgYnkgdHNjXG4gKi9cbi8vIHRvZG86IHNwbGl0XG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG4vKipcbiAqIFByb3ZpZGVzIGRlZmF1bHQgdmFsdWVzIGZvciBQYWdpbmF0aW9uIGFuZCBwYWdlciBjb21wb25lbnRzXG4gKi9cbmV4cG9ydCBjbGFzcyBQYWdpbmF0aW9uQ29uZmlnIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5tYWluID0ge1xuICAgICAgICAgICAgbWF4U2l6ZTogdm9pZCAwLFxuICAgICAgICAgICAgaXRlbXNQZXJQYWdlOiAxMCxcbiAgICAgICAgICAgIGJvdW5kYXJ5TGlua3M6IGZhbHNlLFxuICAgICAgICAgICAgZGlyZWN0aW9uTGlua3M6IHRydWUsXG4gICAgICAgICAgICBmaXJzdFRleHQ6ICdGaXJzdCcsXG4gICAgICAgICAgICBwcmV2aW91c1RleHQ6ICdQcmV2aW91cycsXG4gICAgICAgICAgICBuZXh0VGV4dDogJ05leHQnLFxuICAgICAgICAgICAgbGFzdFRleHQ6ICdMYXN0JyxcbiAgICAgICAgICAgIHBhZ2VCdG5DbGFzczogJycsXG4gICAgICAgICAgICByb3RhdGU6IHRydWVcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5wYWdlciA9IHtcbiAgICAgICAgICAgIGl0ZW1zUGVyUGFnZTogMTUsXG4gICAgICAgICAgICBwcmV2aW91c1RleHQ6ICfCqyBQcmV2aW91cycsXG4gICAgICAgICAgICBuZXh0VGV4dDogJ05leHQgwrsnLFxuICAgICAgICAgICAgcGFnZUJ0bkNsYXNzOiAnJyxcbiAgICAgICAgICAgIGFsaWduOiB0cnVlXG4gICAgICAgIH07XG4gICAgfVxufVxuUGFnaW5hdGlvbkNvbmZpZy5kZWNvcmF0b3JzID0gW1xuICAgIHsgdHlwZTogSW5qZWN0YWJsZSB9XG5dO1xuaWYgKGZhbHNlKSB7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIFBhZ2luYXRpb25Db25maWcucHJvdG90eXBlLm1haW47XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIFBhZ2luYXRpb25Db25maWcucHJvdG90eXBlLnBhZ2VyO1xufVxuIl19