import { __decorate } from "tslib";
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { ClipboardIfSupportedDirective } from './ngx-clipboard-if-supported.directive';
import { ClipboardDirective } from './ngx-clipboard.directive';
import * as ɵngcc0 from '@angular/core';
var ClipboardModule = /** @class */ (function () {
    function ClipboardModule() {
    }
ClipboardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ClipboardModule });
ClipboardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ClipboardModule_Factory(t) { return new (t || ClipboardModule)(); }, imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ClipboardModule, { declarations: function () { return [ClipboardDirective, ClipboardIfSupportedDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [ClipboardDirective, ClipboardIfSupportedDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClipboardModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                declarations: [ClipboardDirective, ClipboardIfSupportedDirective],
                exports: [ClipboardDirective, ClipboardIfSupportedDirective]
            }]
    }], function () { return []; }, null); })();
    return ClipboardModule;
}());
export { ClipboardModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9wbnNiL0Rlc2t0b3AvTU9BIC0gRS1LQU5NQVMvbm9kZV9tb2R1bGVzL25neC1jbGlwYm9hcmQvZXNtNS9saWIvbmd4LWNsaXBib2FyZC5tb2R1bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztBQUtBOztLQUVLOzs7Ozs7Ozs7OztnREFPbUIiLCJmaWxlIjoibmd4LWNsaXBib2FyZC5tb2R1bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX2RlY29yYXRlIH0gZnJvbSBcInRzbGliXCI7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENsaXBib2FyZElmU3VwcG9ydGVkRGlyZWN0aXZlIH0gZnJvbSAnLi9uZ3gtY2xpcGJvYXJkLWlmLXN1cHBvcnRlZC5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBDbGlwYm9hcmREaXJlY3RpdmUgfSBmcm9tICcuL25neC1jbGlwYm9hcmQuZGlyZWN0aXZlJztcclxudmFyIENsaXBib2FyZE1vZHVsZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIENsaXBib2FyZE1vZHVsZSgpIHtcclxuICAgIH1cclxuICAgIENsaXBib2FyZE1vZHVsZSA9IF9fZGVjb3JhdGUoW1xyXG4gICAgICAgIE5nTW9kdWxlKHtcclxuICAgICAgICAgICAgaW1wb3J0czogW0NvbW1vbk1vZHVsZV0sXHJcbiAgICAgICAgICAgIGRlY2xhcmF0aW9uczogW0NsaXBib2FyZERpcmVjdGl2ZSwgQ2xpcGJvYXJkSWZTdXBwb3J0ZWREaXJlY3RpdmVdLFxyXG4gICAgICAgICAgICBleHBvcnRzOiBbQ2xpcGJvYXJkRGlyZWN0aXZlLCBDbGlwYm9hcmRJZlN1cHBvcnRlZERpcmVjdGl2ZV1cclxuICAgICAgICB9KVxyXG4gICAgXSwgQ2xpcGJvYXJkTW9kdWxlKTtcclxuICAgIHJldHVybiBDbGlwYm9hcmRNb2R1bGU7XHJcbn0oKSk7XHJcbmV4cG9ydCB7IENsaXBib2FyZE1vZHVsZSB9O1xyIl19