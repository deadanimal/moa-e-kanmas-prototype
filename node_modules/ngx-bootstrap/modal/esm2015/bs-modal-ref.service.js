/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export class BsModalRef {
    constructor() {
        /**
         * Hides the modal
         */
        this.hide = Function;
        /**
         * Sets new class to modal window
         */
        this.setClass = Function;
    }
}
BsModalRef.ɵfac = function BsModalRef_Factory(t) { return new (t || BsModalRef)(); };
BsModalRef.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: BsModalRef, factory: BsModalRef.ɵfac });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BsModalRef, [{
        type: Injectable
    }], function () { return []; }, null); })();
if (false) {
    /**
     * Reference to a component inside the modal. Null if modal's been created with TemplateRef
     * @type {?}
     */
    BsModalRef.prototype.content;
    /**
     * Hides the modal
     * @type {?}
     */
    BsModalRef.prototype.hide;
    /**
     * Sets new class to modal window
     * @type {?}
     */
    BsModalRef.prototype.setClass;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9wbnNiL0Rlc2t0b3AvTU9BIC0gRS1LQU5NQVMvbm9kZV9tb2R1bGVzL25neC1ib290c3RyYXAvbW9kYWwvZXNtMjAxNS9icy1tb2RhbC1yZWYuc2VydmljZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0FBS0E7Ozs7Ozs7Ozs7Ozs7Q0FXQzs7O2dEQUdDIiwiZmlsZSI6ImJzLW1vZGFsLXJlZi5zZXJ2aWNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlcyxleHRyYVJlcXVpcmUsbWlzc2luZ092ZXJyaWRlLG1pc3NpbmdSZXR1cm4sdW51c2VkUHJpdmF0ZU1lbWJlcnMsdXNlbGVzc0NvZGV9IGNoZWNrZWQgYnkgdHNjXG4gKi9cbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmV4cG9ydCBjbGFzcyBCc01vZGFsUmVmIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEhpZGVzIHRoZSBtb2RhbFxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5oaWRlID0gRnVuY3Rpb247XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTZXRzIG5ldyBjbGFzcyB0byBtb2RhbCB3aW5kb3dcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuc2V0Q2xhc3MgPSBGdW5jdGlvbjtcbiAgICB9XG59XG5Cc01vZGFsUmVmLmRlY29yYXRvcnMgPSBbXG4gICAgeyB0eXBlOiBJbmplY3RhYmxlIH1cbl07XG5pZiAoZmFsc2UpIHtcbiAgICAvKipcbiAgICAgKiBSZWZlcmVuY2UgdG8gYSBjb21wb25lbnQgaW5zaWRlIHRoZSBtb2RhbC4gTnVsbCBpZiBtb2RhbCdzIGJlZW4gY3JlYXRlZCB3aXRoIFRlbXBsYXRlUmVmXG4gICAgICogQHR5cGUgez99XG4gICAgICovXG4gICAgQnNNb2RhbFJlZi5wcm90b3R5cGUuY29udGVudDtcbiAgICAvKipcbiAgICAgKiBIaWRlcyB0aGUgbW9kYWxcbiAgICAgKiBAdHlwZSB7P31cbiAgICAgKi9cbiAgICBCc01vZGFsUmVmLnByb3RvdHlwZS5oaWRlO1xuICAgIC8qKlxuICAgICAqIFNldHMgbmV3IGNsYXNzIHRvIG1vZGFsIHdpbmRvd1xuICAgICAqIEB0eXBlIHs/fVxuICAgICAqL1xuICAgIEJzTW9kYWxSZWYucHJvdG90eXBlLnNldENsYXNzO1xufVxuIl19