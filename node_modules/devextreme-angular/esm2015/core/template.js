/*!
 * devextreme-angular
 * Version: 19.2.6
 * Build date: Thu Jan 30 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
/* tslint:disable:use-input-property-decorator */
import { Directive, NgModule, TemplateRef, ViewContainerRef, Input, Renderer2, NgZone, EmbeddedViewRef } from '@angular/core';
import { DxTemplateHost } from './template-host';
import { getElement } from './utils';
import * as events from 'devextreme/events';
import * as ɵngcc0 from '@angular/core';
export const DX_TEMPLATE_WRAPPER_CLASS = 'dx-template-wrapper';
export class RenderData {
}
let DxTemplateDirective = class DxTemplateDirective {
    constructor(templateRef, viewContainerRef, templateHost, renderer, zone) {
        this.templateRef = templateRef;
        this.viewContainerRef = viewContainerRef;
        this.renderer = renderer;
        this.zone = zone;
        templateHost.setTemplate(this);
    }
    set dxTemplateOf(value) {
        this.name = value;
    }
    ;
    renderTemplate(renderData) {
        const childView = this.viewContainerRef.createEmbeddedView(this.templateRef, {
            '$implicit': renderData.model,
            index: renderData.index
        });
        const container = getElement(renderData.container);
        if (renderData.container) {
            childView.rootNodes.forEach((element) => {
                this.renderer.appendChild(container, element);
            });
        }
        return childView;
    }
    render(renderData) {
        let childView;
        if (this.zone.isStable) {
            childView = this.zone.run(() => {
                return this.renderTemplate(renderData);
            });
        }
        else {
            childView = this.renderTemplate(renderData);
            // =========== WORKAROUND =============
            // https://github.com/angular/angular/issues/12243
            childView['detectChanges']();
            // =========== /WORKAROUND =============
        }
        childView.rootNodes.forEach((element) => {
            if (element.nodeType === 1) {
                this.renderer.addClass(element, DX_TEMPLATE_WRAPPER_CLASS);
            }
            events.one(element, 'dxremove', ({}, params) => {
                if (!params || !params._angularIntegration) {
                    childView.destroy();
                }
            });
        });
        return childView.rootNodes;
    }
};
DxTemplateDirective.ɵfac = function DxTemplateDirective_Factory(t) { return new (t || DxTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DxTemplateHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
DxTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DxTemplateDirective, selectors: [["", "dxTemplate", ""]], inputs: { dxTemplateOf: "dxTemplateOf" } });
DxTemplateDirective.ctorParameters = () => [
    { type: TemplateRef },
    { type: ViewContainerRef },
    { type: DxTemplateHost },
    { type: Renderer2 },
    { type: NgZone }
];
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxTemplateDirective.prototype, "dxTemplateOf", null);
DxTemplateDirective = tslib_1.__decorate([ tslib_1.__metadata("design:paramtypes", [TemplateRef,
        ViewContainerRef,
        DxTemplateHost,
        Renderer2,
        NgZone])
], DxTemplateDirective);
export { DxTemplateDirective };
let DxTemplateModule = class DxTemplateModule {
};
DxTemplateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxTemplateModule });
DxTemplateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxTemplateModule_Factory(t) { return new (t || DxTemplateModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxTemplateDirective, [{
        type: Directive,
        args: [{
                selector: '[dxTemplate]'
            }]
    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }, { type: DxTemplateHost }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.NgZone }]; }, { dxTemplateOf: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxTemplateModule, { declarations: [DxTemplateDirective], exports: [DxTemplateDirective] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxTemplateModule, [{
        type: NgModule,
        args: [{
                declarations: [DxTemplateDirective],
                exports: [DxTemplateDirective]
            }]
    }], null, null); })();
export { DxTemplateModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9wbnNiL0Rlc2t0b3AvTU9BIC0gRS1LQU5NQVMvbm9kZV9tb2R1bGVzL2RldmV4dHJlbWUtYW5ndWxhci9lc20yMDE1L2NvcmUvdGVtcGxhdGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFrQkE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2tLQXNERTs7Ozs7Ozs7Ozs7OzswQ0Fhd0MsQUFJdkM7Ozs7Ozs7Ozs7RUFRRDs7Ozs7Ozs7Ozs7Ozs7OzswQkFNbUIiLCJmaWxlIjoidGVtcGxhdGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcclxuICogZGV2ZXh0cmVtZS1hbmd1bGFyXHJcbiAqIFZlcnNpb246IDE5LjIuNlxyXG4gKiBCdWlsZCBkYXRlOiBUaHUgSmFuIDMwIDIwMjBcclxuICpcclxuICogQ29weXJpZ2h0IChjKSAyMDEyIC0gMjAyMCBEZXZlbG9wZXIgRXhwcmVzcyBJbmMuIEFMTCBSSUdIVFMgUkVTRVJWRURcclxuICpcclxuICogVGhpcyBzb2Z0d2FyZSBtYXkgYmUgbW9kaWZpZWQgYW5kIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSB0ZXJtc1xyXG4gKiBvZiB0aGUgTUlUIGxpY2Vuc2UuIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IG9mIHRoZSBwcm9qZWN0IGZvciBkZXRhaWxzLlxyXG4gKlxyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vRGV2RXhwcmVzcy9kZXZleHRyZW1lLWFuZ3VsYXJcclxuICovXHJcbmltcG9ydCAqIGFzIHRzbGliXzEgZnJvbSBcInRzbGliXCI7XHJcbi8qIHRzbGludDpkaXNhYmxlOnVzZS1pbnB1dC1wcm9wZXJ0eS1kZWNvcmF0b3IgKi9cclxuaW1wb3J0IHsgRGlyZWN0aXZlLCBOZ01vZHVsZSwgVGVtcGxhdGVSZWYsIFZpZXdDb250YWluZXJSZWYsIElucHV0LCBSZW5kZXJlcjIsIE5nWm9uZSwgRW1iZWRkZWRWaWV3UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IER4VGVtcGxhdGVIb3N0IH0gZnJvbSAnLi90ZW1wbGF0ZS1ob3N0JztcclxuaW1wb3J0IHsgZ2V0RWxlbWVudCB9IGZyb20gJy4vdXRpbHMnO1xyXG5pbXBvcnQgKiBhcyBldmVudHMgZnJvbSAnZGV2ZXh0cmVtZS9ldmVudHMnO1xyXG5leHBvcnQgY29uc3QgRFhfVEVNUExBVEVfV1JBUFBFUl9DTEFTUyA9ICdkeC10ZW1wbGF0ZS13cmFwcGVyJztcclxuZXhwb3J0IGNsYXNzIFJlbmRlckRhdGEge1xyXG59XHJcbmxldCBEeFRlbXBsYXRlRGlyZWN0aXZlID0gY2xhc3MgRHhUZW1wbGF0ZURpcmVjdGl2ZSB7XHJcbiAgICBjb25zdHJ1Y3Rvcih0ZW1wbGF0ZVJlZiwgdmlld0NvbnRhaW5lclJlZiwgdGVtcGxhdGVIb3N0LCByZW5kZXJlciwgem9uZSkge1xyXG4gICAgICAgIHRoaXMudGVtcGxhdGVSZWYgPSB0ZW1wbGF0ZVJlZjtcclxuICAgICAgICB0aGlzLnZpZXdDb250YWluZXJSZWYgPSB2aWV3Q29udGFpbmVyUmVmO1xyXG4gICAgICAgIHRoaXMucmVuZGVyZXIgPSByZW5kZXJlcjtcclxuICAgICAgICB0aGlzLnpvbmUgPSB6b25lO1xyXG4gICAgICAgIHRlbXBsYXRlSG9zdC5zZXRUZW1wbGF0ZSh0aGlzKTtcclxuICAgIH1cclxuICAgIHNldCBkeFRlbXBsYXRlT2YodmFsdWUpIHtcclxuICAgICAgICB0aGlzLm5hbWUgPSB2YWx1ZTtcclxuICAgIH1cclxuICAgIDtcclxuICAgIHJlbmRlclRlbXBsYXRlKHJlbmRlckRhdGEpIHtcclxuICAgICAgICBjb25zdCBjaGlsZFZpZXcgPSB0aGlzLnZpZXdDb250YWluZXJSZWYuY3JlYXRlRW1iZWRkZWRWaWV3KHRoaXMudGVtcGxhdGVSZWYsIHtcclxuICAgICAgICAgICAgJyRpbXBsaWNpdCc6IHJlbmRlckRhdGEubW9kZWwsXHJcbiAgICAgICAgICAgIGluZGV4OiByZW5kZXJEYXRhLmluZGV4XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgY29uc3QgY29udGFpbmVyID0gZ2V0RWxlbWVudChyZW5kZXJEYXRhLmNvbnRhaW5lcik7XHJcbiAgICAgICAgaWYgKHJlbmRlckRhdGEuY29udGFpbmVyKSB7XHJcbiAgICAgICAgICAgIGNoaWxkVmlldy5yb290Tm9kZXMuZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJlci5hcHBlbmRDaGlsZChjb250YWluZXIsIGVsZW1lbnQpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGNoaWxkVmlldztcclxuICAgIH1cclxuICAgIHJlbmRlcihyZW5kZXJEYXRhKSB7XHJcbiAgICAgICAgbGV0IGNoaWxkVmlldztcclxuICAgICAgICBpZiAodGhpcy56b25lLmlzU3RhYmxlKSB7XHJcbiAgICAgICAgICAgIGNoaWxkVmlldyA9IHRoaXMuem9uZS5ydW4oKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVuZGVyVGVtcGxhdGUocmVuZGVyRGF0YSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgY2hpbGRWaWV3ID0gdGhpcy5yZW5kZXJUZW1wbGF0ZShyZW5kZXJEYXRhKTtcclxuICAgICAgICAgICAgLy8gPT09PT09PT09PT0gV09SS0FST1VORCA9PT09PT09PT09PT09XHJcbiAgICAgICAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbmd1bGFyL2FuZ3VsYXIvaXNzdWVzLzEyMjQzXHJcbiAgICAgICAgICAgIGNoaWxkVmlld1snZGV0ZWN0Q2hhbmdlcyddKCk7XHJcbiAgICAgICAgICAgIC8vID09PT09PT09PT09IC9XT1JLQVJPVU5EID09PT09PT09PT09PT1cclxuICAgICAgICB9XHJcbiAgICAgICAgY2hpbGRWaWV3LnJvb3ROb2Rlcy5mb3JFYWNoKChlbGVtZW50KSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChlbGVtZW50Lm5vZGVUeXBlID09PSAxKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnJlbmRlcmVyLmFkZENsYXNzKGVsZW1lbnQsIERYX1RFTVBMQVRFX1dSQVBQRVJfQ0xBU1MpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGV2ZW50cy5vbmUoZWxlbWVudCwgJ2R4cmVtb3ZlJywgKHt9LCBwYXJhbXMpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmICghcGFyYW1zIHx8ICFwYXJhbXMuX2FuZ3VsYXJJbnRlZ3JhdGlvbikge1xyXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkVmlldy5kZXN0cm95KCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBjaGlsZFZpZXcucm9vdE5vZGVzO1xyXG4gICAgfVxyXG59O1xyXG5EeFRlbXBsYXRlRGlyZWN0aXZlLmN0b3JQYXJhbWV0ZXJzID0gKCkgPT4gW1xyXG4gICAgeyB0eXBlOiBUZW1wbGF0ZVJlZiB9LFxyXG4gICAgeyB0eXBlOiBWaWV3Q29udGFpbmVyUmVmIH0sXHJcbiAgICB7IHR5cGU6IER4VGVtcGxhdGVIb3N0IH0sXHJcbiAgICB7IHR5cGU6IFJlbmRlcmVyMiB9LFxyXG4gICAgeyB0eXBlOiBOZ1pvbmUgfVxyXG5dO1xyXG50c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgSW5wdXQoKSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbT2JqZWN0XSlcclxuXSwgRHhUZW1wbGF0ZURpcmVjdGl2ZS5wcm90b3R5cGUsIFwiZHhUZW1wbGF0ZU9mXCIsIG51bGwpO1xyXG5EeFRlbXBsYXRlRGlyZWN0aXZlID0gdHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIERpcmVjdGl2ZSh7XHJcbiAgICAgICAgc2VsZWN0b3I6ICdbZHhUZW1wbGF0ZV0nXHJcbiAgICB9KSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtUZW1wbGF0ZVJlZixcclxuICAgICAgICBWaWV3Q29udGFpbmVyUmVmLFxyXG4gICAgICAgIER4VGVtcGxhdGVIb3N0LFxyXG4gICAgICAgIFJlbmRlcmVyMixcclxuICAgICAgICBOZ1pvbmVdKVxyXG5dLCBEeFRlbXBsYXRlRGlyZWN0aXZlKTtcclxuZXhwb3J0IHsgRHhUZW1wbGF0ZURpcmVjdGl2ZSB9O1xyXG5sZXQgRHhUZW1wbGF0ZU1vZHVsZSA9IGNsYXNzIER4VGVtcGxhdGVNb2R1bGUge1xyXG59O1xyXG5EeFRlbXBsYXRlTW9kdWxlID0gdHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIE5nTW9kdWxlKHtcclxuICAgICAgICBkZWNsYXJhdGlvbnM6IFtEeFRlbXBsYXRlRGlyZWN0aXZlXSxcclxuICAgICAgICBleHBvcnRzOiBbRHhUZW1wbGF0ZURpcmVjdGl2ZV1cclxuICAgIH0pXHJcbl0sIER4VGVtcGxhdGVNb2R1bGUpO1xyXG5leHBvcnQgeyBEeFRlbXBsYXRlTW9kdWxlIH07XHIiXX0=