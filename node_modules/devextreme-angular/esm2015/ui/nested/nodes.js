/*!
 * devextreme-angular
 * Version: 19.2.6
 * Build date: Thu Jan 30 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
/* tslint:disable:max-line-length */
import { Component, NgModule, Host, SkipSelf, Input } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'devextreme-angular/core';
let DxoNodesComponent = class DxoNodesComponent extends NestedOption {
    constructor(parentOptionHost, optionHost) {
        super();
        parentOptionHost.setNestedOption(this);
        optionHost.setHost(this, this._fullOptionPath.bind(this));
    }
    get autoLayout() {
        return this._getOption('autoLayout');
    }
    set autoLayout(value) {
        this._setOption('autoLayout', value);
    }
    get childrenExpr() {
        return this._getOption('childrenExpr');
    }
    set childrenExpr(value) {
        this._setOption('childrenExpr', value);
    }
    get containerKeyExpr() {
        return this._getOption('containerKeyExpr');
    }
    set containerKeyExpr(value) {
        this._setOption('containerKeyExpr', value);
    }
    get dataSource() {
        return this._getOption('dataSource');
    }
    set dataSource(value) {
        this._setOption('dataSource', value);
    }
    get heightExpr() {
        return this._getOption('heightExpr');
    }
    set heightExpr(value) {
        this._setOption('heightExpr', value);
    }
    get imageUrlExpr() {
        return this._getOption('imageUrlExpr');
    }
    set imageUrlExpr(value) {
        this._setOption('imageUrlExpr', value);
    }
    get itemsExpr() {
        return this._getOption('itemsExpr');
    }
    set itemsExpr(value) {
        this._setOption('itemsExpr', value);
    }
    get keyExpr() {
        return this._getOption('keyExpr');
    }
    set keyExpr(value) {
        this._setOption('keyExpr', value);
    }
    get leftExpr() {
        return this._getOption('leftExpr');
    }
    set leftExpr(value) {
        this._setOption('leftExpr', value);
    }
    get lockedExpr() {
        return this._getOption('lockedExpr');
    }
    set lockedExpr(value) {
        this._setOption('lockedExpr', value);
    }
    get parentKeyExpr() {
        return this._getOption('parentKeyExpr');
    }
    set parentKeyExpr(value) {
        this._setOption('parentKeyExpr', value);
    }
    get styleExpr() {
        return this._getOption('styleExpr');
    }
    set styleExpr(value) {
        this._setOption('styleExpr', value);
    }
    get textExpr() {
        return this._getOption('textExpr');
    }
    set textExpr(value) {
        this._setOption('textExpr', value);
    }
    get textStyleExpr() {
        return this._getOption('textStyleExpr');
    }
    set textStyleExpr(value) {
        this._setOption('textStyleExpr', value);
    }
    get topExpr() {
        return this._getOption('topExpr');
    }
    set topExpr(value) {
        this._setOption('topExpr', value);
    }
    get typeExpr() {
        return this._getOption('typeExpr');
    }
    set typeExpr(value) {
        this._setOption('typeExpr', value);
    }
    get widthExpr() {
        return this._getOption('widthExpr');
    }
    set widthExpr(value) {
        this._setOption('widthExpr', value);
    }
    get zIndexExpr() {
        return this._getOption('zIndexExpr');
    }
    set zIndexExpr(value) {
        this._setOption('zIndexExpr', value);
    }
    get _optionPath() {
        return 'nodes';
    }
    ngOnDestroy() {
        this._addRemovedOption(this._fullOptionPath().slice(0, -1));
    }
};
DxoNodesComponent.ɵfac = function DxoNodesComponent_Factory(t) { return new (t || DxoNodesComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 5), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 1)); };
DxoNodesComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxoNodesComponent, selectors: [["dxo-nodes"]], inputs: { autoLayout: "autoLayout", childrenExpr: "childrenExpr", containerKeyExpr: "containerKeyExpr", dataSource: "dataSource", heightExpr: "heightExpr", imageUrlExpr: "imageUrlExpr", itemsExpr: "itemsExpr", keyExpr: "keyExpr", leftExpr: "leftExpr", lockedExpr: "lockedExpr", parentKeyExpr: "parentKeyExpr", styleExpr: "styleExpr", textExpr: "textExpr", textStyleExpr: "textStyleExpr", topExpr: "topExpr", typeExpr: "typeExpr", widthExpr: "widthExpr", zIndexExpr: "zIndexExpr" }, features: [ɵngcc0.ɵɵProvidersFeature([NestedOptionHost]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoNodesComponent_Template(rf, ctx) { }, styles: [""] });
DxoNodesComponent.ctorParameters = () => [
    { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
    { type: NestedOptionHost, decorators: [{ type: Host }] }
];
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxoNodesComponent.prototype, "autoLayout", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxoNodesComponent.prototype, "childrenExpr", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxoNodesComponent.prototype, "containerKeyExpr", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxoNodesComponent.prototype, "dataSource", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxoNodesComponent.prototype, "heightExpr", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxoNodesComponent.prototype, "imageUrlExpr", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxoNodesComponent.prototype, "itemsExpr", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxoNodesComponent.prototype, "keyExpr", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxoNodesComponent.prototype, "leftExpr", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxoNodesComponent.prototype, "lockedExpr", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxoNodesComponent.prototype, "parentKeyExpr", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxoNodesComponent.prototype, "styleExpr", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxoNodesComponent.prototype, "textExpr", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxoNodesComponent.prototype, "textStyleExpr", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxoNodesComponent.prototype, "topExpr", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxoNodesComponent.prototype, "typeExpr", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxoNodesComponent.prototype, "widthExpr", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxoNodesComponent.prototype, "zIndexExpr", null);
DxoNodesComponent = tslib_1.__decorate([ tslib_1.__param(0, SkipSelf()), tslib_1.__param(0, Host()),
    tslib_1.__param(1, Host()),
    tslib_1.__metadata("design:paramtypes", [NestedOptionHost,
        NestedOptionHost])
], DxoNodesComponent);
export { DxoNodesComponent };
let DxoNodesModule = class DxoNodesModule {
};
DxoNodesModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxoNodesModule });
DxoNodesModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxoNodesModule_Factory(t) { return new (t || DxoNodesModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoNodesComponent, [{
        type: Component,
        args: [{
                selector: 'dxo-nodes',
                template: '',
                providers: [NestedOptionHost],
                styles: ['']
            }]
    }], function () { return [{ type: ɵngcc1.NestedOptionHost, decorators: [{
                type: SkipSelf
            }, {
                type: Host
            }] }, { type: ɵngcc1.NestedOptionHost, decorators: [{
                type: Host
            }] }]; }, { autoLayout: [{
            type: Input
        }], childrenExpr: [{
            type: Input
        }], containerKeyExpr: [{
            type: Input
        }], dataSource: [{
            type: Input
        }], heightExpr: [{
            type: Input
        }], imageUrlExpr: [{
            type: Input
        }], itemsExpr: [{
            type: Input
        }], keyExpr: [{
            type: Input
        }], leftExpr: [{
            type: Input
        }], lockedExpr: [{
            type: Input
        }], parentKeyExpr: [{
            type: Input
        }], styleExpr: [{
            type: Input
        }], textExpr: [{
            type: Input
        }], textStyleExpr: [{
            type: Input
        }], topExpr: [{
            type: Input
        }], typeExpr: [{
            type: Input
        }], widthExpr: [{
            type: Input
        }], zIndexExpr: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxoNodesModule, { declarations: [DxoNodesComponent], exports: [DxoNodesComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoNodesModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DxoNodesComponent
                ],
                exports: [
                    DxoNodesComponent
                ]
            }]
    }], null, null); })();
export { DxoNodesModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,