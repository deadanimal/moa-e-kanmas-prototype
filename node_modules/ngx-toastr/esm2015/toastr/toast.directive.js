import { __decorate } from "tslib";
import { Directive, ElementRef, NgModule, } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
let ToastContainerDirective = class ToastContainerDirective {
    constructor(el) {
        this.el = el;
    }
    getContainerElement() {
        return this.el.nativeElement;
    }
};
ToastContainerDirective.ɵfac = function ToastContainerDirective_Factory(t) { return new (t || ToastContainerDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ToastContainerDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ToastContainerDirective, selectors: [["", "toastContainer", ""]], exportAs: ["toastContainer"] });
ToastContainerDirective.ctorParameters = () => [
    { type: ElementRef }
];
export { ToastContainerDirective };
let ToastContainerModule = class ToastContainerModule {
};
ToastContainerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ToastContainerModule });
ToastContainerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ToastContainerModule_Factory(t) { return new (t || ToastContainerModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ToastContainerDirective, [{
        type: Directive,
        args: [{
                selector: '[toastContainer]',
                exportAs: 'toastContainer'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ToastContainerModule, { declarations: [ToastContainerDirective], exports: [ToastContainerDirective] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ToastContainerModule, [{
        type: NgModule,
        args: [{
                declarations: [ToastContainerDirective],
                exports: [ToastContainerDirective]
            }]
    }], null, null); })();
export { ToastContainerModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9wbnNiL0Rlc2t0b3AvTU9BIC0gRS1LQU5NQVMvbm9kZV9tb2R1bGVzL25neC10b2FzdHIvZXNtMjAxNS90b2FzdHIvdG9hc3QuZGlyZWN0aXZlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUFFQTs7Ozs7Ozs7O2tLQU9FOzs7RUFHQSxBQU0wQjs7Ozs7RUFHMUI7Ozs7Ozs7Ozs7Ozs7OzswQkFNdUIiLCJmaWxlIjoidG9hc3QuZGlyZWN0aXZlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19kZWNvcmF0ZSB9IGZyb20gXCJ0c2xpYlwiO1xuaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBOZ01vZHVsZSwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmxldCBUb2FzdENvbnRhaW5lckRpcmVjdGl2ZSA9IGNsYXNzIFRvYXN0Q29udGFpbmVyRGlyZWN0aXZlIHtcbiAgICBjb25zdHJ1Y3RvcihlbCkge1xuICAgICAgICB0aGlzLmVsID0gZWw7XG4gICAgfVxuICAgIGdldENvbnRhaW5lckVsZW1lbnQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQ7XG4gICAgfVxufTtcblRvYXN0Q29udGFpbmVyRGlyZWN0aXZlLmN0b3JQYXJhbWV0ZXJzID0gKCkgPT4gW1xuICAgIHsgdHlwZTogRWxlbWVudFJlZiB9XG5dO1xuVG9hc3RDb250YWluZXJEaXJlY3RpdmUgPSBfX2RlY29yYXRlKFtcbiAgICBEaXJlY3RpdmUoe1xuICAgICAgICBzZWxlY3RvcjogJ1t0b2FzdENvbnRhaW5lcl0nLFxuICAgICAgICBleHBvcnRBczogJ3RvYXN0Q29udGFpbmVyJyxcbiAgICB9KVxuXSwgVG9hc3RDb250YWluZXJEaXJlY3RpdmUpO1xuZXhwb3J0IHsgVG9hc3RDb250YWluZXJEaXJlY3RpdmUgfTtcbmxldCBUb2FzdENvbnRhaW5lck1vZHVsZSA9IGNsYXNzIFRvYXN0Q29udGFpbmVyTW9kdWxlIHtcbn07XG5Ub2FzdENvbnRhaW5lck1vZHVsZSA9IF9fZGVjb3JhdGUoW1xuICAgIE5nTW9kdWxlKHtcbiAgICAgICAgZGVjbGFyYXRpb25zOiBbVG9hc3RDb250YWluZXJEaXJlY3RpdmVdLFxuICAgICAgICBleHBvcnRzOiBbVG9hc3RDb250YWluZXJEaXJlY3RpdmVdLFxuICAgIH0pXG5dLCBUb2FzdENvbnRhaW5lck1vZHVsZSk7XG5leHBvcnQgeyBUb2FzdENvbnRhaW5lck1vZHVsZSB9O1xuIl19