/*!
 * devextreme-angular
 * Version: 19.2.6
 * Build date: Thu Jan 30 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'devextreme-angular/core';

const _c0 = ["*"];
var DxiItemComponent_1;
/* tslint:disable:max-line-length */
/* tslint:disable:use-input-property-decorator */
import { Component, NgModule, Host, ElementRef, Renderer2, Inject, AfterViewInit, SkipSelf, ContentChildren, forwardRef, QueryList } from '@angular/core';
import { DOCUMENT } from '@angular/common';
import { NestedOptionHost, extractTemplate, DxTemplateDirective, IDxTemplateHost, DxTemplateHost } from 'devextreme-angular/core';
import { DxiButtonGroupItem } from './base/button-group-item-dxi';
import { DxiValidationRuleComponent } from './validation-rule-dxi';
import { DxiTabComponent } from './tab-dxi';
import { DxiLocationComponent } from './location-dxi';
let DxiItemComponent = DxiItemComponent_1 = class DxiItemComponent extends DxiButtonGroupItem {
    constructor(parentOptionHost, optionHost, renderer, document, templateHost, element) {
        super();
        this.renderer = renderer;
        this.document = document;
        this.element = element;
        parentOptionHost.setNestedOption(this);
        optionHost.setHost(this, this._fullOptionPath.bind(this));
        templateHost.setHost(this);
    }
    get _optionPath() {
        return 'items';
    }
    get itemsChildren() {
        return this._getOption('items');
    }
    set itemsChildren(value) {
        this.setChildren('items', value);
    }
    get validationRulesChildren() {
        return this._getOption('validationRules');
    }
    set validationRulesChildren(value) {
        this.setChildren('validationRules', value);
    }
    get tabsChildren() {
        return this._getOption('tabs');
    }
    set tabsChildren(value) {
        this.setChildren('tabs', value);
    }
    get locationChildren() {
        return this._getOption('location');
    }
    set locationChildren(value) {
        this.setChildren('location', value);
    }
    setTemplate(template) {
        this.template = template;
    }
    ngAfterViewInit() {
        extractTemplate(this, this.element, this.renderer, this.document);
    }
};
DxiItemComponent.ɵfac = function DxiItemComponent_Factory(t) { return new (t || DxiItemComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 5), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DxTemplateHost, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
DxiItemComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxiItemComponent, selectors: [["dxi-item"]], contentQueries: function DxiItemComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, DxiItemComponent_1, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, DxiValidationRuleComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, DxiTabComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, DxiLocationComponent, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.itemsChildren = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.validationRulesChildren = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tabsChildren = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.locationChildren = _t);
    } }, inputs: { disabled: "disabled", html: "html", icon: "icon", template: "template", text: "text", title: "title", visible: "visible", onClick: "onClick", type: "type", baseSize: "baseSize", box: "box", ratio: "ratio", shrink: "shrink", hint: "hint", beginGroup: "beginGroup", closeMenuOnClick: "closeMenuOnClick", items: "items", selectable: "selectable", selected: "selected", colSpan: "colSpan", cssClass: "cssClass", dataField: "dataField", editorOptions: "editorOptions", editorType: "editorType", helpText: "helpText", isRequired: "isRequired", itemType: "itemType", label: "label", name: "name", validationRules: "validationRules", visibleIndex: "visibleIndex", alignItemLabels: "alignItemLabels", caption: "caption", colCount: "colCount", colCountByScreen: "colCountByScreen", tabPanelOptions: "tabPanelOptions", tabs: "tabs", badge: "badge", tabTemplate: "tabTemplate", alignment: "alignment", buttonOptions: "buttonOptions", horizontalAlignment: "horizontalAlignment", verticalAlignment: "verticalAlignment", height: "height", width: "width", locateInMenu: "locateInMenu", location: "location", menuItemTemplate: "menuItemTemplate", options: "options", showText: "showText", widget: "widget", imageAlt: "imageAlt", imageSrc: "imageSrc", formatName: "formatName", formatValues: "formatValues", key: "key", showChevron: "showChevron", menuTemplate: "menuTemplate", heightRatio: "heightRatio", widthRatio: "widthRatio", expanded: "expanded", hasItems: "hasItems", parentId: "parentId" }, features: [ɵngcc0.ɵɵProvidersFeature([NestedOptionHost, DxTemplateHost]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function DxiItemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: ["[_nghost-%COMP%] { display: block; }"] });
DxiItemComponent.ctorParameters = () => [
    { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
    { type: NestedOptionHost, decorators: [{ type: Host }] },
    { type: Renderer2 },
    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },
    { type: DxTemplateHost, decorators: [{ type: Host }] },
    { type: ElementRef }
];
tslib_1.__decorate([
    ContentChildren(forwardRef(() => DxiItemComponent_1)),
    tslib_1.__metadata("design:type", QueryList),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxiItemComponent.prototype, "itemsChildren", null);
tslib_1.__decorate([
    ContentChildren(forwardRef(() => DxiValidationRuleComponent)),
    tslib_1.__metadata("design:type", QueryList),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxiItemComponent.prototype, "validationRulesChildren", null);
tslib_1.__decorate([
    ContentChildren(forwardRef(() => DxiTabComponent)),
    tslib_1.__metadata("design:type", QueryList),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxiItemComponent.prototype, "tabsChildren", null);
tslib_1.__decorate([
    ContentChildren(forwardRef(() => DxiLocationComponent)),
    tslib_1.__metadata("design:type", QueryList),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxiItemComponent.prototype, "locationChildren", null);
DxiItemComponent = DxiItemComponent_1 = tslib_1.__decorate([ tslib_1.__param(0, SkipSelf()), tslib_1.__param(0, Host()),
    tslib_1.__param(1, Host()),
    tslib_1.__param(3, Inject(DOCUMENT)),
    tslib_1.__param(4, Host()),
    tslib_1.__metadata("design:paramtypes", [NestedOptionHost,
        NestedOptionHost,
        Renderer2, Object, DxTemplateHost,
        ElementRef])
], DxiItemComponent);
export { DxiItemComponent };
let DxiItemModule = class DxiItemModule {
};
DxiItemModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxiItemModule });
DxiItemModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxiItemModule_Factory(t) { return new (t || DxiItemModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxiItemComponent, [{
        type: Component,
        args: [{
                selector: 'dxi-item',
                template: '<ng-content></ng-content>',
                providers: [NestedOptionHost, DxTemplateHost],
                inputs: [
                    'disabled',
                    'html',
                    'icon',
                    'template',
                    'text',
                    'title',
                    'visible',
                    'onClick',
                    'type',
                    'baseSize',
                    'box',
                    'ratio',
                    'shrink',
                    'hint',
                    'beginGroup',
                    'closeMenuOnClick',
                    'items',
                    'selectable',
                    'selected',
                    'colSpan',
                    'cssClass',
                    'dataField',
                    'editorOptions',
                    'editorType',
                    'helpText',
                    'isRequired',
                    'itemType',
                    'label',
                    'name',
                    'validationRules',
                    'visibleIndex',
                    'alignItemLabels',
                    'caption',
                    'colCount',
                    'colCountByScreen',
                    'tabPanelOptions',
                    'tabs',
                    'badge',
                    'tabTemplate',
                    'alignment',
                    'buttonOptions',
                    'horizontalAlignment',
                    'verticalAlignment',
                    'height',
                    'width',
                    'locateInMenu',
                    'location',
                    'menuItemTemplate',
                    'options',
                    'showText',
                    'widget',
                    'imageAlt',
                    'imageSrc',
                    'formatName',
                    'formatValues',
                    'key',
                    'showChevron',
                    'menuTemplate',
                    'heightRatio',
                    'widthRatio',
                    'expanded',
                    'hasItems',
                    'parentId'
                ],
                styles: [':host { display: block; }']
            }]
    }], function () { return [{ type: ɵngcc1.NestedOptionHost, decorators: [{
                type: SkipSelf
            }, {
                type: Host
            }] }, { type: ɵngcc1.NestedOptionHost, decorators: [{
                type: Host
            }] }, { type: ɵngcc0.Renderer2 }, { type: undefined, decorators: [{
                type: Inject,
                args: [DOCUMENT]
            }] }, { type: ɵngcc1.DxTemplateHost, decorators: [{
                type: Host
            }] }, { type: ɵngcc0.ElementRef }]; }, { itemsChildren: [{
            type: ContentChildren,
            args: [forwardRef(() => DxiItemComponent_1)]
        }], validationRulesChildren: [{
            type: ContentChildren,
            args: [forwardRef(() => DxiValidationRuleComponent)]
        }], tabsChildren: [{
            type: ContentChildren,
            args: [forwardRef(() => DxiTabComponent)]
        }], locationChildren: [{
            type: ContentChildren,
            args: [forwardRef(() => DxiLocationComponent)]
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxiItemModule, { declarations: [DxiItemComponent], exports: [DxiItemComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxiItemModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DxiItemComponent
                ],
                exports: [
                    DxiItemComponent
                ]
            }]
    }], null, null); })();
export { DxiItemModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,