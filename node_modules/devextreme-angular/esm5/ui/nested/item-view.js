/*!
 * devextreme-angular
 * Version: 19.2.6
 * Build date: Thu Jan 30 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
/* tslint:disable:max-line-length */
import { Component, NgModule, Host, SkipSelf, Input } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'devextreme-angular/core';
var DxoItemViewComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DxoItemViewComponent, _super);
    function DxoItemViewComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoItemViewComponent.prototype, "mode", {
        get: function () {
            return this._getOption('mode');
        },
        set: function (value) {
            this._setOption('mode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoItemViewComponent.prototype, "showFolders", {
        get: function () {
            return this._getOption('showFolders');
        },
        set: function (value) {
            this._setOption('showFolders', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoItemViewComponent.prototype, "showParentFolder", {
        get: function () {
            return this._getOption('showParentFolder');
        },
        set: function (value) {
            this._setOption('showParentFolder', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoItemViewComponent.prototype, "_optionPath", {
        get: function () {
            return 'itemView';
        },
        enumerable: true,
        configurable: true
    });
    DxoItemViewComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._fullOptionPath().slice(0, -1));
    };
    DxoItemViewComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], DxoItemViewComponent.prototype, "mode", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [Boolean])
    ], DxoItemViewComponent.prototype, "showFolders", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [Boolean])
    ], DxoItemViewComponent.prototype, "showParentFolder", null);
    DxoItemViewComponent = tslib_1.__decorate([ tslib_1.__param(0, SkipSelf()), tslib_1.__param(0, Host()),
        tslib_1.__param(1, Host()),
        tslib_1.__metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoItemViewComponent);
DxoItemViewComponent.ɵfac = function DxoItemViewComponent_Factory(t) { return new (t || DxoItemViewComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 5), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 1)); };
DxoItemViewComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxoItemViewComponent, selectors: [["dxo-item-view"]], inputs: { mode: "mode", showFolders: "showFolders", showParentFolder: "showParentFolder" }, features: [ɵngcc0.ɵɵProvidersFeature([NestedOptionHost]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoItemViewComponent_Template(rf, ctx) { }, styles: [""] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoItemViewComponent, [{
        type: Component,
        args: [{
                selector: 'dxo-item-view',
                template: '',
                providers: [NestedOptionHost],
                styles: ['']
            }]
    }], function () { return [{ type: ɵngcc1.NestedOptionHost, decorators: [{
                type: SkipSelf
            }, {
                type: Host
            }] }, { type: ɵngcc1.NestedOptionHost, decorators: [{
                type: Host
            }] }]; }, { mode: [{
            type: Input
        }], showFolders: [{
            type: Input
        }], showParentFolder: [{
            type: Input
        }] }); })();
    return DxoItemViewComponent;
}(NestedOption));
export { DxoItemViewComponent };
var DxoItemViewModule = /** @class */ (function () {
    function DxoItemViewModule() {
    }
DxoItemViewModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxoItemViewModule });
DxoItemViewModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxoItemViewModule_Factory(t) { return new (t || DxoItemViewModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxoItemViewModule, { declarations: [DxoItemViewComponent], exports: [DxoItemViewComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoItemViewModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DxoItemViewComponent
                ],
                exports: [
                    DxoItemViewComponent
                ]
            }]
    }], function () { return []; }, null); })();
    return DxoItemViewModule;
}());
export { DxoItemViewModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9wbnNiL0Rlc2t0b3AvTU9BIC0gRS1LQU5NQVMvbm9kZV9tb2R1bGVzL2RldmV4dHJlbWUtYW5ndWxhci9lc201L3VpL25lc3RlZC9pdGVtLXZpZXcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0NBbUUrQyxBQU94Qzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUlzQjs7Ozs7O0tBTXhCOzs7Ozs7Ozs7Ozs7OztnREFVcUIiLCJmaWxlIjoiaXRlbS12aWV3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXHJcbiAqIGRldmV4dHJlbWUtYW5ndWxhclxyXG4gKiBWZXJzaW9uOiAxOS4yLjZcclxuICogQnVpbGQgZGF0ZTogVGh1IEphbiAzMCAyMDIwXHJcbiAqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxMiAtIDIwMjAgRGV2ZWxvcGVyIEV4cHJlc3MgSW5jLiBBTEwgUklHSFRTIFJFU0VSVkVEXHJcbiAqXHJcbiAqIFRoaXMgc29mdHdhcmUgbWF5IGJlIG1vZGlmaWVkIGFuZCBkaXN0cmlidXRlZCB1bmRlciB0aGUgdGVybXNcclxuICogb2YgdGhlIE1JVCBsaWNlbnNlLiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBvZiB0aGUgcHJvamVjdCBmb3IgZGV0YWlscy5cclxuICpcclxuICogaHR0cHM6Ly9naXRodWIuY29tL0RldkV4cHJlc3MvZGV2ZXh0cmVtZS1hbmd1bGFyXHJcbiAqL1xyXG5pbXBvcnQgKiBhcyB0c2xpYl8xIGZyb20gXCJ0c2xpYlwiO1xyXG4vKiB0c2xpbnQ6ZGlzYWJsZTptYXgtbGluZS1sZW5ndGggKi9cclxuaW1wb3J0IHsgQ29tcG9uZW50LCBOZ01vZHVsZSwgSG9zdCwgU2tpcFNlbGYsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE5lc3RlZE9wdGlvbkhvc3QsIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBOZXN0ZWRPcHRpb24gfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvY29yZSc7XHJcbnZhciBEeG9JdGVtVmlld0NvbXBvbmVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuICAgIHRzbGliXzEuX19leHRlbmRzKER4b0l0ZW1WaWV3Q29tcG9uZW50LCBfc3VwZXIpO1xyXG4gICAgZnVuY3Rpb24gRHhvSXRlbVZpZXdDb21wb25lbnQocGFyZW50T3B0aW9uSG9zdCwgb3B0aW9uSG9zdCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7XHJcbiAgICAgICAgcGFyZW50T3B0aW9uSG9zdC5zZXROZXN0ZWRPcHRpb24oX3RoaXMpO1xyXG4gICAgICAgIG9wdGlvbkhvc3Quc2V0SG9zdChfdGhpcywgX3RoaXMuX2Z1bGxPcHRpb25QYXRoLmJpbmQoX3RoaXMpKTtcclxuICAgICAgICByZXR1cm4gX3RoaXM7XHJcbiAgICB9XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRHhvSXRlbVZpZXdDb21wb25lbnQucHJvdG90eXBlLCBcIm1vZGVcIiwge1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fZ2V0T3B0aW9uKCdtb2RlJyk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICB0aGlzLl9zZXRPcHRpb24oJ21vZGUnLCB2YWx1ZSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRHhvSXRlbVZpZXdDb21wb25lbnQucHJvdG90eXBlLCBcInNob3dGb2xkZXJzXCIsIHtcclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2dldE9wdGlvbignc2hvd0ZvbGRlcnMnKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3NldE9wdGlvbignc2hvd0ZvbGRlcnMnLCB2YWx1ZSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRHhvSXRlbVZpZXdDb21wb25lbnQucHJvdG90eXBlLCBcInNob3dQYXJlbnRGb2xkZXJcIiwge1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fZ2V0T3B0aW9uKCdzaG93UGFyZW50Rm9sZGVyJyk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICB0aGlzLl9zZXRPcHRpb24oJ3Nob3dQYXJlbnRGb2xkZXInLCB2YWx1ZSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRHhvSXRlbVZpZXdDb21wb25lbnQucHJvdG90eXBlLCBcIl9vcHRpb25QYXRoXCIsIHtcclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuICdpdGVtVmlldyc7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBEeG9JdGVtVmlld0NvbXBvbmVudC5wcm90b3R5cGUubmdPbkRlc3Ryb3kgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5fYWRkUmVtb3ZlZE9wdGlvbih0aGlzLl9mdWxsT3B0aW9uUGF0aCgpLnNsaWNlKDAsIC0xKSk7XHJcbiAgICB9O1xyXG4gICAgRHhvSXRlbVZpZXdDb21wb25lbnQuY3RvclBhcmFtZXRlcnMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBbXHJcbiAgICAgICAgeyB0eXBlOiBOZXN0ZWRPcHRpb25Ib3N0LCBkZWNvcmF0b3JzOiBbeyB0eXBlOiBTa2lwU2VsZiB9LCB7IHR5cGU6IEhvc3QgfV0gfSxcclxuICAgICAgICB7IHR5cGU6IE5lc3RlZE9wdGlvbkhvc3QsIGRlY29yYXRvcnM6IFt7IHR5cGU6IEhvc3QgfV0gfVxyXG4gICAgXTsgfTtcclxuICAgIHRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICAgICAgSW5wdXQoKSxcclxuICAgICAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpLFxyXG4gICAgICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtTdHJpbmddKVxyXG4gICAgXSwgRHhvSXRlbVZpZXdDb21wb25lbnQucHJvdG90eXBlLCBcIm1vZGVcIiwgbnVsbCk7XHJcbiAgICB0c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgICAgIElucHV0KCksXHJcbiAgICAgICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbiksXHJcbiAgICAgICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0Jvb2xlYW5dKVxyXG4gICAgXSwgRHhvSXRlbVZpZXdDb21wb25lbnQucHJvdG90eXBlLCBcInNob3dGb2xkZXJzXCIsIG51bGwpO1xyXG4gICAgdHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgICAgICBJbnB1dCgpLFxyXG4gICAgICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pLFxyXG4gICAgICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtCb29sZWFuXSlcclxuICAgIF0sIER4b0l0ZW1WaWV3Q29tcG9uZW50LnByb3RvdHlwZSwgXCJzaG93UGFyZW50Rm9sZGVyXCIsIG51bGwpO1xyXG4gICAgRHhvSXRlbVZpZXdDb21wb25lbnQgPSB0c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgICAgIENvbXBvbmVudCh7XHJcbiAgICAgICAgICAgIHNlbGVjdG9yOiAnZHhvLWl0ZW0tdmlldycsXHJcbiAgICAgICAgICAgIHRlbXBsYXRlOiAnJyxcclxuICAgICAgICAgICAgcHJvdmlkZXJzOiBbTmVzdGVkT3B0aW9uSG9zdF0sXHJcbiAgICAgICAgICAgIHN0eWxlczogWycnXVxyXG4gICAgICAgIH0pLFxyXG4gICAgICAgIHRzbGliXzEuX19wYXJhbSgwLCBTa2lwU2VsZigpKSwgdHNsaWJfMS5fX3BhcmFtKDAsIEhvc3QoKSksXHJcbiAgICAgICAgdHNsaWJfMS5fX3BhcmFtKDEsIEhvc3QoKSksXHJcbiAgICAgICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW05lc3RlZE9wdGlvbkhvc3QsXHJcbiAgICAgICAgICAgIE5lc3RlZE9wdGlvbkhvc3RdKVxyXG4gICAgXSwgRHhvSXRlbVZpZXdDb21wb25lbnQpO1xyXG4gICAgcmV0dXJuIER4b0l0ZW1WaWV3Q29tcG9uZW50O1xyXG59KE5lc3RlZE9wdGlvbikpO1xyXG5leHBvcnQgeyBEeG9JdGVtVmlld0NvbXBvbmVudCB9O1xyXG52YXIgRHhvSXRlbVZpZXdNb2R1bGUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBEeG9JdGVtVmlld01vZHVsZSgpIHtcclxuICAgIH1cclxuICAgIER4b0l0ZW1WaWV3TW9kdWxlID0gdHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgICAgICBOZ01vZHVsZSh7XHJcbiAgICAgICAgICAgIGRlY2xhcmF0aW9uczogW1xyXG4gICAgICAgICAgICAgICAgRHhvSXRlbVZpZXdDb21wb25lbnRcclxuICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgZXhwb3J0czogW1xyXG4gICAgICAgICAgICAgICAgRHhvSXRlbVZpZXdDb21wb25lbnRcclxuICAgICAgICAgICAgXSxcclxuICAgICAgICB9KVxyXG4gICAgXSwgRHhvSXRlbVZpZXdNb2R1bGUpO1xyXG4gICAgcmV0dXJuIER4b0l0ZW1WaWV3TW9kdWxlO1xyXG59KCkpO1xyXG5leHBvcnQgeyBEeG9JdGVtVmlld01vZHVsZSB9O1xyIl19