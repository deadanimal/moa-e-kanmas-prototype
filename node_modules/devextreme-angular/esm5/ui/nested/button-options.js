/*!
 * devextreme-angular
 * Version: 19.2.6
 * Build date: Thu Jan 30 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
/* tslint:disable:max-line-length */
/* tslint:disable:use-input-property-decorator */
import { Component, NgModule, Host, SkipSelf } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { DxoButtonOptions } from './base/button-options';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'devextreme-angular/core';
var DxoButtonOptionsComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DxoButtonOptionsComponent, _super);
    function DxoButtonOptionsComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoButtonOptionsComponent.prototype, "_optionPath", {
        get: function () {
            return 'buttonOptions';
        },
        enumerable: true,
        configurable: true
    });
    DxoButtonOptionsComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._fullOptionPath().slice(0, -1));
    };
    DxoButtonOptionsComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxoButtonOptionsComponent = tslib_1.__decorate([ tslib_1.__param(0, SkipSelf()), tslib_1.__param(0, Host()),
        tslib_1.__param(1, Host()),
        tslib_1.__metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoButtonOptionsComponent);
DxoButtonOptionsComponent.ɵfac = function DxoButtonOptionsComponent_Factory(t) { return new (t || DxoButtonOptionsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 5), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 1)); };
DxoButtonOptionsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxoButtonOptionsComponent, selectors: [["dxo-button-options"]], inputs: { accessKey: "accessKey", activeStateEnabled: "activeStateEnabled", disabled: "disabled", elementAttr: "elementAttr", focusStateEnabled: "focusStateEnabled", height: "height", hint: "hint", hoverStateEnabled: "hoverStateEnabled", icon: "icon", onClick: "onClick", onContentReady: "onContentReady", onDisposing: "onDisposing", onInitialized: "onInitialized", onOptionChanged: "onOptionChanged", rtlEnabled: "rtlEnabled", stylingMode: "stylingMode", tabIndex: "tabIndex", template: "template", text: "text", type: "type", useSubmitBehavior: "useSubmitBehavior", validationGroup: "validationGroup", visible: "visible", width: "width" }, features: [ɵngcc0.ɵɵProvidersFeature([NestedOptionHost]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoButtonOptionsComponent_Template(rf, ctx) { }, styles: [""] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoButtonOptionsComponent, [{
        type: Component,
        args: [{
                selector: 'dxo-button-options',
                template: '',
                providers: [NestedOptionHost],
                inputs: [
                    'accessKey',
                    'activeStateEnabled',
                    'disabled',
                    'elementAttr',
                    'focusStateEnabled',
                    'height',
                    'hint',
                    'hoverStateEnabled',
                    'icon',
                    'onClick',
                    'onContentReady',
                    'onDisposing',
                    'onInitialized',
                    'onOptionChanged',
                    'rtlEnabled',
                    'stylingMode',
                    'tabIndex',
                    'template',
                    'text',
                    'type',
                    'useSubmitBehavior',
                    'validationGroup',
                    'visible',
                    'width'
                ],
                styles: ['']
            }]
    }], function () { return [{ type: ɵngcc1.NestedOptionHost, decorators: [{
                type: SkipSelf
            }, {
                type: Host
            }] }, { type: ɵngcc1.NestedOptionHost, decorators: [{
                type: Host
            }] }]; }, null); })();
    return DxoButtonOptionsComponent;
}(DxoButtonOptions));
export { DxoButtonOptionsComponent };
var DxoButtonOptionsModule = /** @class */ (function () {
    function DxoButtonOptionsModule() {
    }
DxoButtonOptionsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxoButtonOptionsModule });
DxoButtonOptionsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxoButtonOptionsModule_Factory(t) { return new (t || DxoButtonOptionsModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxoButtonOptionsModule, { declarations: [DxoButtonOptionsComponent], exports: [DxoButtonOptionsComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoButtonOptionsModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DxoButtonOptionsComponent
                ],
                exports: [
                    DxoButtonOptionsComponent
                ]
            }]
    }], function () { return []; }, null); })();
    return DxoButtonOptionsModule;
}());
export { DxoButtonOptionsModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9wbnNiL0Rlc2t0b3AvTU9BIC0gRS1LQU5NQVMvbm9kZV9tb2R1bGVzL2RldmV4dHJlbWUtYW5ndWxhci9lc201L3VpL25lc3RlZC9idXR0b24tb3B0aW9ucy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFrQkE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0RBc0JvRCxBQWlDN0M7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2tDQUkyQjs7Ozs7O0tBTTdCOzs7Ozs7Ozs7Ozs7OztnREFVMEIiLCJmaWxlIjoiYnV0dG9uLW9wdGlvbnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcclxuICogZGV2ZXh0cmVtZS1hbmd1bGFyXHJcbiAqIFZlcnNpb246IDE5LjIuNlxyXG4gKiBCdWlsZCBkYXRlOiBUaHUgSmFuIDMwIDIwMjBcclxuICpcclxuICogQ29weXJpZ2h0IChjKSAyMDEyIC0gMjAyMCBEZXZlbG9wZXIgRXhwcmVzcyBJbmMuIEFMTCBSSUdIVFMgUkVTRVJWRURcclxuICpcclxuICogVGhpcyBzb2Z0d2FyZSBtYXkgYmUgbW9kaWZpZWQgYW5kIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSB0ZXJtc1xyXG4gKiBvZiB0aGUgTUlUIGxpY2Vuc2UuIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IG9mIHRoZSBwcm9qZWN0IGZvciBkZXRhaWxzLlxyXG4gKlxyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vRGV2RXhwcmVzcy9kZXZleHRyZW1lLWFuZ3VsYXJcclxuICovXHJcbmltcG9ydCAqIGFzIHRzbGliXzEgZnJvbSBcInRzbGliXCI7XHJcbi8qIHRzbGludDpkaXNhYmxlOm1heC1saW5lLWxlbmd0aCAqL1xyXG4vKiB0c2xpbnQ6ZGlzYWJsZTp1c2UtaW5wdXQtcHJvcGVydHktZGVjb3JhdG9yICovXHJcbmltcG9ydCB7IENvbXBvbmVudCwgTmdNb2R1bGUsIEhvc3QsIFNraXBTZWxmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE5lc3RlZE9wdGlvbkhvc3QsIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBEeG9CdXR0b25PcHRpb25zIH0gZnJvbSAnLi9iYXNlL2J1dHRvbi1vcHRpb25zJztcclxudmFyIER4b0J1dHRvbk9wdGlvbnNDb21wb25lbnQgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcbiAgICB0c2xpYl8xLl9fZXh0ZW5kcyhEeG9CdXR0b25PcHRpb25zQ29tcG9uZW50LCBfc3VwZXIpO1xyXG4gICAgZnVuY3Rpb24gRHhvQnV0dG9uT3B0aW9uc0NvbXBvbmVudChwYXJlbnRPcHRpb25Ib3N0LCBvcHRpb25Ib3N0KSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcclxuICAgICAgICBwYXJlbnRPcHRpb25Ib3N0LnNldE5lc3RlZE9wdGlvbihfdGhpcyk7XHJcbiAgICAgICAgb3B0aW9uSG9zdC5zZXRIb3N0KF90aGlzLCBfdGhpcy5fZnVsbE9wdGlvblBhdGguYmluZChfdGhpcykpO1xyXG4gICAgICAgIHJldHVybiBfdGhpcztcclxuICAgIH1cclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShEeG9CdXR0b25PcHRpb25zQ29tcG9uZW50LnByb3RvdHlwZSwgXCJfb3B0aW9uUGF0aFwiLCB7XHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAnYnV0dG9uT3B0aW9ucyc7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBEeG9CdXR0b25PcHRpb25zQ29tcG9uZW50LnByb3RvdHlwZS5uZ09uRGVzdHJveSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLl9hZGRSZW1vdmVkT3B0aW9uKHRoaXMuX2Z1bGxPcHRpb25QYXRoKCkuc2xpY2UoMCwgLTEpKTtcclxuICAgIH07XHJcbiAgICBEeG9CdXR0b25PcHRpb25zQ29tcG9uZW50LmN0b3JQYXJhbWV0ZXJzID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gW1xyXG4gICAgICAgIHsgdHlwZTogTmVzdGVkT3B0aW9uSG9zdCwgZGVjb3JhdG9yczogW3sgdHlwZTogU2tpcFNlbGYgfSwgeyB0eXBlOiBIb3N0IH1dIH0sXHJcbiAgICAgICAgeyB0eXBlOiBOZXN0ZWRPcHRpb25Ib3N0LCBkZWNvcmF0b3JzOiBbeyB0eXBlOiBIb3N0IH1dIH1cclxuICAgIF07IH07XHJcbiAgICBEeG9CdXR0b25PcHRpb25zQ29tcG9uZW50ID0gdHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgICAgICBDb21wb25lbnQoe1xyXG4gICAgICAgICAgICBzZWxlY3RvcjogJ2R4by1idXR0b24tb3B0aW9ucycsXHJcbiAgICAgICAgICAgIHRlbXBsYXRlOiAnJyxcclxuICAgICAgICAgICAgcHJvdmlkZXJzOiBbTmVzdGVkT3B0aW9uSG9zdF0sXHJcbiAgICAgICAgICAgIGlucHV0czogW1xyXG4gICAgICAgICAgICAgICAgJ2FjY2Vzc0tleScsXHJcbiAgICAgICAgICAgICAgICAnYWN0aXZlU3RhdGVFbmFibGVkJyxcclxuICAgICAgICAgICAgICAgICdkaXNhYmxlZCcsXHJcbiAgICAgICAgICAgICAgICAnZWxlbWVudEF0dHInLFxyXG4gICAgICAgICAgICAgICAgJ2ZvY3VzU3RhdGVFbmFibGVkJyxcclxuICAgICAgICAgICAgICAgICdoZWlnaHQnLFxyXG4gICAgICAgICAgICAgICAgJ2hpbnQnLFxyXG4gICAgICAgICAgICAgICAgJ2hvdmVyU3RhdGVFbmFibGVkJyxcclxuICAgICAgICAgICAgICAgICdpY29uJyxcclxuICAgICAgICAgICAgICAgICdvbkNsaWNrJyxcclxuICAgICAgICAgICAgICAgICdvbkNvbnRlbnRSZWFkeScsXHJcbiAgICAgICAgICAgICAgICAnb25EaXNwb3NpbmcnLFxyXG4gICAgICAgICAgICAgICAgJ29uSW5pdGlhbGl6ZWQnLFxyXG4gICAgICAgICAgICAgICAgJ29uT3B0aW9uQ2hhbmdlZCcsXHJcbiAgICAgICAgICAgICAgICAncnRsRW5hYmxlZCcsXHJcbiAgICAgICAgICAgICAgICAnc3R5bGluZ01vZGUnLFxyXG4gICAgICAgICAgICAgICAgJ3RhYkluZGV4JyxcclxuICAgICAgICAgICAgICAgICd0ZW1wbGF0ZScsXHJcbiAgICAgICAgICAgICAgICAndGV4dCcsXHJcbiAgICAgICAgICAgICAgICAndHlwZScsXHJcbiAgICAgICAgICAgICAgICAndXNlU3VibWl0QmVoYXZpb3InLFxyXG4gICAgICAgICAgICAgICAgJ3ZhbGlkYXRpb25Hcm91cCcsXHJcbiAgICAgICAgICAgICAgICAndmlzaWJsZScsXHJcbiAgICAgICAgICAgICAgICAnd2lkdGgnXHJcbiAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgIHN0eWxlczogWycnXVxyXG4gICAgICAgIH0pLFxyXG4gICAgICAgIHRzbGliXzEuX19wYXJhbSgwLCBTa2lwU2VsZigpKSwgdHNsaWJfMS5fX3BhcmFtKDAsIEhvc3QoKSksXHJcbiAgICAgICAgdHNsaWJfMS5fX3BhcmFtKDEsIEhvc3QoKSksXHJcbiAgICAgICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW05lc3RlZE9wdGlvbkhvc3QsXHJcbiAgICAgICAgICAgIE5lc3RlZE9wdGlvbkhvc3RdKVxyXG4gICAgXSwgRHhvQnV0dG9uT3B0aW9uc0NvbXBvbmVudCk7XHJcbiAgICByZXR1cm4gRHhvQnV0dG9uT3B0aW9uc0NvbXBvbmVudDtcclxufShEeG9CdXR0b25PcHRpb25zKSk7XHJcbmV4cG9ydCB7IER4b0J1dHRvbk9wdGlvbnNDb21wb25lbnQgfTtcclxudmFyIER4b0J1dHRvbk9wdGlvbnNNb2R1bGUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBEeG9CdXR0b25PcHRpb25zTW9kdWxlKCkge1xyXG4gICAgfVxyXG4gICAgRHhvQnV0dG9uT3B0aW9uc01vZHVsZSA9IHRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICAgICAgTmdNb2R1bGUoe1xyXG4gICAgICAgICAgICBkZWNsYXJhdGlvbnM6IFtcclxuICAgICAgICAgICAgICAgIER4b0J1dHRvbk9wdGlvbnNDb21wb25lbnRcclxuICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgZXhwb3J0czogW1xyXG4gICAgICAgICAgICAgICAgRHhvQnV0dG9uT3B0aW9uc0NvbXBvbmVudFxyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgIH0pXHJcbiAgICBdLCBEeG9CdXR0b25PcHRpb25zTW9kdWxlKTtcclxuICAgIHJldHVybiBEeG9CdXR0b25PcHRpb25zTW9kdWxlO1xyXG59KCkpO1xyXG5leHBvcnQgeyBEeG9CdXR0b25PcHRpb25zTW9kdWxlIH07XHIiXX0=