/*!
 * devextreme-angular
 * Version: 19.2.6
 * Build date: Thu Jan 30 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
/* tslint:disable:max-line-length */
/* tslint:disable:use-input-property-decorator */
import { Component, NgModule, Host, SkipSelf, Output, EventEmitter, ContentChildren, forwardRef, QueryList } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { DxoTextBoxOptions } from './base/text-box-options';
import { DxiButtonComponent } from './button-dxi';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'devextreme-angular/core';
let DxoSearchEditorOptionsComponent = class DxoSearchEditorOptionsComponent extends DxoTextBoxOptions {
    constructor(parentOptionHost, optionHost) {
        super();
        this._createEventEmitters([
            { emit: 'textChange' },
            { emit: 'valueChange' }
        ]);
        parentOptionHost.setNestedOption(this);
        optionHost.setHost(this, this._fullOptionPath.bind(this));
    }
    get _optionPath() {
        return 'searchEditorOptions';
    }
    get buttonsChildren() {
        return this._getOption('buttons');
    }
    set buttonsChildren(value) {
        this.setChildren('buttons', value);
    }
    ngOnDestroy() {
        this._addRemovedOption(this._fullOptionPath().slice(0, -1));
    }
};
DxoSearchEditorOptionsComponent.ɵfac = function DxoSearchEditorOptionsComponent_Factory(t) { return new (t || DxoSearchEditorOptionsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 5), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 1)); };
DxoSearchEditorOptionsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxoSearchEditorOptionsComponent, selectors: [["dxo-search-editor-options"]], contentQueries: function DxoSearchEditorOptionsComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, DxiButtonComponent, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.buttonsChildren = _t);
    } }, inputs: { accessKey: "accessKey", activeStateEnabled: "activeStateEnabled", buttons: "buttons", disabled: "disabled", elementAttr: "elementAttr", focusStateEnabled: "focusStateEnabled", height: "height", hint: "hint", hoverStateEnabled: "hoverStateEnabled", inputAttr: "inputAttr", isValid: "isValid", mask: "mask", maskChar: "maskChar", maskInvalidMessage: "maskInvalidMessage", maskRules: "maskRules", maxLength: "maxLength", mode: "mode", name: "name", onChange: "onChange", onContentReady: "onContentReady", onCopy: "onCopy", onCut: "onCut", onDisposing: "onDisposing", onEnterKey: "onEnterKey", onFocusIn: "onFocusIn", onFocusOut: "onFocusOut", onInitialized: "onInitialized", onInput: "onInput", onKeyDown: "onKeyDown", onKeyPress: "onKeyPress", onKeyUp: "onKeyUp", onOptionChanged: "onOptionChanged", onPaste: "onPaste", onValueChanged: "onValueChanged", placeholder: "placeholder", readOnly: "readOnly", rtlEnabled: "rtlEnabled", showClearButton: "showClearButton", showMaskMode: "showMaskMode", spellcheck: "spellcheck", stylingMode: "stylingMode", tabIndex: "tabIndex", text: "text", useMaskedValue: "useMaskedValue", validationError: "validationError", validationErrors: "validationErrors", validationMessageMode: "validationMessageMode", validationStatus: "validationStatus", value: "value", valueChangeEvent: "valueChangeEvent", visible: "visible", width: "width" }, outputs: { textChange: "textChange", valueChange: "valueChange" }, features: [ɵngcc0.ɵɵProvidersFeature([NestedOptionHost]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoSearchEditorOptionsComponent_Template(rf, ctx) { }, styles: [""] });
DxoSearchEditorOptionsComponent.ctorParameters = () => [
    { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
    { type: NestedOptionHost, decorators: [{ type: Host }] }
];
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxoSearchEditorOptionsComponent.prototype, "textChange", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], DxoSearchEditorOptionsComponent.prototype, "valueChange", void 0);
tslib_1.__decorate([
    ContentChildren(forwardRef(() => DxiButtonComponent)),
    tslib_1.__metadata("design:type", QueryList),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxoSearchEditorOptionsComponent.prototype, "buttonsChildren", null);
DxoSearchEditorOptionsComponent = tslib_1.__decorate([ tslib_1.__param(0, SkipSelf()), tslib_1.__param(0, Host()),
    tslib_1.__param(1, Host()),
    tslib_1.__metadata("design:paramtypes", [NestedOptionHost,
        NestedOptionHost])
], DxoSearchEditorOptionsComponent);
export { DxoSearchEditorOptionsComponent };
let DxoSearchEditorOptionsModule = class DxoSearchEditorOptionsModule {
};
DxoSearchEditorOptionsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxoSearchEditorOptionsModule });
DxoSearchEditorOptionsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxoSearchEditorOptionsModule_Factory(t) { return new (t || DxoSearchEditorOptionsModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoSearchEditorOptionsComponent, [{
        type: Component,
        args: [{
                selector: 'dxo-search-editor-options',
                template: '',
                providers: [NestedOptionHost],
                inputs: [
                    'accessKey',
                    'activeStateEnabled',
                    'buttons',
                    'disabled',
                    'elementAttr',
                    'focusStateEnabled',
                    'height',
                    'hint',
                    'hoverStateEnabled',
                    'inputAttr',
                    'isValid',
                    'mask',
                    'maskChar',
                    'maskInvalidMessage',
                    'maskRules',
                    'maxLength',
                    'mode',
                    'name',
                    'onChange',
                    'onContentReady',
                    'onCopy',
                    'onCut',
                    'onDisposing',
                    'onEnterKey',
                    'onFocusIn',
                    'onFocusOut',
                    'onInitialized',
                    'onInput',
                    'onKeyDown',
                    'onKeyPress',
                    'onKeyUp',
                    'onOptionChanged',
                    'onPaste',
                    'onValueChanged',
                    'placeholder',
                    'readOnly',
                    'rtlEnabled',
                    'showClearButton',
                    'showMaskMode',
                    'spellcheck',
                    'stylingMode',
                    'tabIndex',
                    'text',
                    'useMaskedValue',
                    'validationError',
                    'validationErrors',
                    'validationMessageMode',
                    'validationStatus',
                    'value',
                    'valueChangeEvent',
                    'visible',
                    'width'
                ],
                styles: ['']
            }]
    }], function () { return [{ type: ɵngcc1.NestedOptionHost, decorators: [{
                type: SkipSelf
            }, {
                type: Host
            }] }, { type: ɵngcc1.NestedOptionHost, decorators: [{
                type: Host
            }] }]; }, { buttonsChildren: [{
            type: ContentChildren,
            args: [forwardRef(() => DxiButtonComponent)]
        }], textChange: [{
            type: Output
        }], valueChange: [{
            type: Output
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxoSearchEditorOptionsModule, { declarations: [DxoSearchEditorOptionsComponent], exports: [DxoSearchEditorOptionsComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoSearchEditorOptionsModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DxoSearchEditorOptionsComponent
                ],
                exports: [
                    DxoSearchEditorOptionsComponent
                ]
            }]
    }], null, null); })();
export { DxoSearchEditorOptionsModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9wbnNiL0Rlc2t0b3AvTU9BIC0gRS1LQU5NQVMvbm9kZV9tb2R1bGVzL2RldmV4dHJlbWUtYW5ndWxhci9lc20yMDE1L3VpL25lc3RlZC9zZWFyY2gtZWRpdG9yLW9wdGlvbnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1CQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Mm5EQXNCRTs7Ozs7Ozs7Ozs7Ozs7Ozs7O3NEQWtCb0QsQUE2RG5EOzs7Ozs7Ozs7RUFPRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFVK0IiLCJmaWxlIjoic2VhcmNoLWVkaXRvci1vcHRpb25zLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXHJcbiAqIGRldmV4dHJlbWUtYW5ndWxhclxyXG4gKiBWZXJzaW9uOiAxOS4yLjZcclxuICogQnVpbGQgZGF0ZTogVGh1IEphbiAzMCAyMDIwXHJcbiAqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxMiAtIDIwMjAgRGV2ZWxvcGVyIEV4cHJlc3MgSW5jLiBBTEwgUklHSFRTIFJFU0VSVkVEXHJcbiAqXHJcbiAqIFRoaXMgc29mdHdhcmUgbWF5IGJlIG1vZGlmaWVkIGFuZCBkaXN0cmlidXRlZCB1bmRlciB0aGUgdGVybXNcclxuICogb2YgdGhlIE1JVCBsaWNlbnNlLiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBvZiB0aGUgcHJvamVjdCBmb3IgZGV0YWlscy5cclxuICpcclxuICogaHR0cHM6Ly9naXRodWIuY29tL0RldkV4cHJlc3MvZGV2ZXh0cmVtZS1hbmd1bGFyXHJcbiAqL1xyXG5pbXBvcnQgKiBhcyB0c2xpYl8xIGZyb20gXCJ0c2xpYlwiO1xyXG4vKiB0c2xpbnQ6ZGlzYWJsZTptYXgtbGluZS1sZW5ndGggKi9cclxuLyogdHNsaW50OmRpc2FibGU6dXNlLWlucHV0LXByb3BlcnR5LWRlY29yYXRvciAqL1xyXG5pbXBvcnQgeyBDb21wb25lbnQsIE5nTW9kdWxlLCBIb3N0LCBTa2lwU2VsZiwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIENvbnRlbnRDaGlsZHJlbiwgZm9yd2FyZFJlZiwgUXVlcnlMaXN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE5lc3RlZE9wdGlvbkhvc3QsIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBEeG9UZXh0Qm94T3B0aW9ucyB9IGZyb20gJy4vYmFzZS90ZXh0LWJveC1vcHRpb25zJztcclxuaW1wb3J0IHsgRHhpQnV0dG9uQ29tcG9uZW50IH0gZnJvbSAnLi9idXR0b24tZHhpJztcclxubGV0IER4b1NlYXJjaEVkaXRvck9wdGlvbnNDb21wb25lbnQgPSBjbGFzcyBEeG9TZWFyY2hFZGl0b3JPcHRpb25zQ29tcG9uZW50IGV4dGVuZHMgRHhvVGV4dEJveE9wdGlvbnMge1xyXG4gICAgY29uc3RydWN0b3IocGFyZW50T3B0aW9uSG9zdCwgb3B0aW9uSG9zdCkge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgdGhpcy5fY3JlYXRlRXZlbnRFbWl0dGVycyhbXHJcbiAgICAgICAgICAgIHsgZW1pdDogJ3RleHRDaGFuZ2UnIH0sXHJcbiAgICAgICAgICAgIHsgZW1pdDogJ3ZhbHVlQ2hhbmdlJyB9XHJcbiAgICAgICAgXSk7XHJcbiAgICAgICAgcGFyZW50T3B0aW9uSG9zdC5zZXROZXN0ZWRPcHRpb24odGhpcyk7XHJcbiAgICAgICAgb3B0aW9uSG9zdC5zZXRIb3N0KHRoaXMsIHRoaXMuX2Z1bGxPcHRpb25QYXRoLmJpbmQodGhpcykpO1xyXG4gICAgfVxyXG4gICAgZ2V0IF9vcHRpb25QYXRoKCkge1xyXG4gICAgICAgIHJldHVybiAnc2VhcmNoRWRpdG9yT3B0aW9ucyc7XHJcbiAgICB9XHJcbiAgICBnZXQgYnV0dG9uc0NoaWxkcmVuKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRPcHRpb24oJ2J1dHRvbnMnKTtcclxuICAgIH1cclxuICAgIHNldCBidXR0b25zQ2hpbGRyZW4odmFsdWUpIHtcclxuICAgICAgICB0aGlzLnNldENoaWxkcmVuKCdidXR0b25zJywgdmFsdWUpO1xyXG4gICAgfVxyXG4gICAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICAgICAgdGhpcy5fYWRkUmVtb3ZlZE9wdGlvbih0aGlzLl9mdWxsT3B0aW9uUGF0aCgpLnNsaWNlKDAsIC0xKSk7XHJcbiAgICB9XHJcbn07XHJcbkR4b1NlYXJjaEVkaXRvck9wdGlvbnNDb21wb25lbnQuY3RvclBhcmFtZXRlcnMgPSAoKSA9PiBbXHJcbiAgICB7IHR5cGU6IE5lc3RlZE9wdGlvbkhvc3QsIGRlY29yYXRvcnM6IFt7IHR5cGU6IFNraXBTZWxmIH0sIHsgdHlwZTogSG9zdCB9XSB9LFxyXG4gICAgeyB0eXBlOiBOZXN0ZWRPcHRpb25Ib3N0LCBkZWNvcmF0b3JzOiBbeyB0eXBlOiBIb3N0IH1dIH1cclxuXTtcclxudHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIE91dHB1dCgpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxyXG5dLCBEeG9TZWFyY2hFZGl0b3JPcHRpb25zQ29tcG9uZW50LnByb3RvdHlwZSwgXCJ0ZXh0Q2hhbmdlXCIsIHZvaWQgMCk7XHJcbnRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICBPdXRwdXQoKSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcclxuXSwgRHhvU2VhcmNoRWRpdG9yT3B0aW9uc0NvbXBvbmVudC5wcm90b3R5cGUsIFwidmFsdWVDaGFuZ2VcIiwgdm9pZCAwKTtcclxudHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIENvbnRlbnRDaGlsZHJlbihmb3J3YXJkUmVmKCgpID0+IER4aUJ1dHRvbkNvbXBvbmVudCkpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgUXVlcnlMaXN0KSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtPYmplY3RdKVxyXG5dLCBEeG9TZWFyY2hFZGl0b3JPcHRpb25zQ29tcG9uZW50LnByb3RvdHlwZSwgXCJidXR0b25zQ2hpbGRyZW5cIiwgbnVsbCk7XHJcbkR4b1NlYXJjaEVkaXRvck9wdGlvbnNDb21wb25lbnQgPSB0c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgQ29tcG9uZW50KHtcclxuICAgICAgICBzZWxlY3RvcjogJ2R4by1zZWFyY2gtZWRpdG9yLW9wdGlvbnMnLFxyXG4gICAgICAgIHRlbXBsYXRlOiAnJyxcclxuICAgICAgICBwcm92aWRlcnM6IFtOZXN0ZWRPcHRpb25Ib3N0XSxcclxuICAgICAgICBpbnB1dHM6IFtcclxuICAgICAgICAgICAgJ2FjY2Vzc0tleScsXHJcbiAgICAgICAgICAgICdhY3RpdmVTdGF0ZUVuYWJsZWQnLFxyXG4gICAgICAgICAgICAnYnV0dG9ucycsXHJcbiAgICAgICAgICAgICdkaXNhYmxlZCcsXHJcbiAgICAgICAgICAgICdlbGVtZW50QXR0cicsXHJcbiAgICAgICAgICAgICdmb2N1c1N0YXRlRW5hYmxlZCcsXHJcbiAgICAgICAgICAgICdoZWlnaHQnLFxyXG4gICAgICAgICAgICAnaGludCcsXHJcbiAgICAgICAgICAgICdob3ZlclN0YXRlRW5hYmxlZCcsXHJcbiAgICAgICAgICAgICdpbnB1dEF0dHInLFxyXG4gICAgICAgICAgICAnaXNWYWxpZCcsXHJcbiAgICAgICAgICAgICdtYXNrJyxcclxuICAgICAgICAgICAgJ21hc2tDaGFyJyxcclxuICAgICAgICAgICAgJ21hc2tJbnZhbGlkTWVzc2FnZScsXHJcbiAgICAgICAgICAgICdtYXNrUnVsZXMnLFxyXG4gICAgICAgICAgICAnbWF4TGVuZ3RoJyxcclxuICAgICAgICAgICAgJ21vZGUnLFxyXG4gICAgICAgICAgICAnbmFtZScsXHJcbiAgICAgICAgICAgICdvbkNoYW5nZScsXHJcbiAgICAgICAgICAgICdvbkNvbnRlbnRSZWFkeScsXHJcbiAgICAgICAgICAgICdvbkNvcHknLFxyXG4gICAgICAgICAgICAnb25DdXQnLFxyXG4gICAgICAgICAgICAnb25EaXNwb3NpbmcnLFxyXG4gICAgICAgICAgICAnb25FbnRlcktleScsXHJcbiAgICAgICAgICAgICdvbkZvY3VzSW4nLFxyXG4gICAgICAgICAgICAnb25Gb2N1c091dCcsXHJcbiAgICAgICAgICAgICdvbkluaXRpYWxpemVkJyxcclxuICAgICAgICAgICAgJ29uSW5wdXQnLFxyXG4gICAgICAgICAgICAnb25LZXlEb3duJyxcclxuICAgICAgICAgICAgJ29uS2V5UHJlc3MnLFxyXG4gICAgICAgICAgICAnb25LZXlVcCcsXHJcbiAgICAgICAgICAgICdvbk9wdGlvbkNoYW5nZWQnLFxyXG4gICAgICAgICAgICAnb25QYXN0ZScsXHJcbiAgICAgICAgICAgICdvblZhbHVlQ2hhbmdlZCcsXHJcbiAgICAgICAgICAgICdwbGFjZWhvbGRlcicsXHJcbiAgICAgICAgICAgICdyZWFkT25seScsXHJcbiAgICAgICAgICAgICdydGxFbmFibGVkJyxcclxuICAgICAgICAgICAgJ3Nob3dDbGVhckJ1dHRvbicsXHJcbiAgICAgICAgICAgICdzaG93TWFza01vZGUnLFxyXG4gICAgICAgICAgICAnc3BlbGxjaGVjaycsXHJcbiAgICAgICAgICAgICdzdHlsaW5nTW9kZScsXHJcbiAgICAgICAgICAgICd0YWJJbmRleCcsXHJcbiAgICAgICAgICAgICd0ZXh0JyxcclxuICAgICAgICAgICAgJ3VzZU1hc2tlZFZhbHVlJyxcclxuICAgICAgICAgICAgJ3ZhbGlkYXRpb25FcnJvcicsXHJcbiAgICAgICAgICAgICd2YWxpZGF0aW9uRXJyb3JzJyxcclxuICAgICAgICAgICAgJ3ZhbGlkYXRpb25NZXNzYWdlTW9kZScsXHJcbiAgICAgICAgICAgICd2YWxpZGF0aW9uU3RhdHVzJyxcclxuICAgICAgICAgICAgJ3ZhbHVlJyxcclxuICAgICAgICAgICAgJ3ZhbHVlQ2hhbmdlRXZlbnQnLFxyXG4gICAgICAgICAgICAndmlzaWJsZScsXHJcbiAgICAgICAgICAgICd3aWR0aCdcclxuICAgICAgICBdLFxyXG4gICAgICAgIHN0eWxlczogWycnXVxyXG4gICAgfSksXHJcbiAgICB0c2xpYl8xLl9fcGFyYW0oMCwgU2tpcFNlbGYoKSksIHRzbGliXzEuX19wYXJhbSgwLCBIb3N0KCkpLFxyXG4gICAgdHNsaWJfMS5fX3BhcmFtKDEsIEhvc3QoKSksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbTmVzdGVkT3B0aW9uSG9zdCxcclxuICAgICAgICBOZXN0ZWRPcHRpb25Ib3N0XSlcclxuXSwgRHhvU2VhcmNoRWRpdG9yT3B0aW9uc0NvbXBvbmVudCk7XHJcbmV4cG9ydCB7IER4b1NlYXJjaEVkaXRvck9wdGlvbnNDb21wb25lbnQgfTtcclxubGV0IER4b1NlYXJjaEVkaXRvck9wdGlvbnNNb2R1bGUgPSBjbGFzcyBEeG9TZWFyY2hFZGl0b3JPcHRpb25zTW9kdWxlIHtcclxufTtcclxuRHhvU2VhcmNoRWRpdG9yT3B0aW9uc01vZHVsZSA9IHRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICBOZ01vZHVsZSh7XHJcbiAgICAgICAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICAgICAgICAgIER4b1NlYXJjaEVkaXRvck9wdGlvbnNDb21wb25lbnRcclxuICAgICAgICBdLFxyXG4gICAgICAgIGV4cG9ydHM6IFtcclxuICAgICAgICAgICAgRHhvU2VhcmNoRWRpdG9yT3B0aW9uc0NvbXBvbmVudFxyXG4gICAgICAgIF0sXHJcbiAgICB9KVxyXG5dLCBEeG9TZWFyY2hFZGl0b3JPcHRpb25zTW9kdWxlKTtcclxuZXhwb3J0IHsgRHhvU2VhcmNoRWRpdG9yT3B0aW9uc01vZHVsZSB9O1xyIl19