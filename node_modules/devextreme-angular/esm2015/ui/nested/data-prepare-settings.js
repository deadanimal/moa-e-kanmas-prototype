/*!
 * devextreme-angular
 * Version: 19.2.6
 * Build date: Thu Jan 30 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
/* tslint:disable:max-line-length */
import { Component, NgModule, Host, SkipSelf, Input } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'devextreme-angular/core';
let DxoDataPrepareSettingsComponent = class DxoDataPrepareSettingsComponent extends NestedOption {
    constructor(parentOptionHost, optionHost) {
        super();
        parentOptionHost.setNestedOption(this);
        optionHost.setHost(this, this._fullOptionPath.bind(this));
    }
    get checkTypeForAllData() {
        return this._getOption('checkTypeForAllData');
    }
    set checkTypeForAllData(value) {
        this._setOption('checkTypeForAllData', value);
    }
    get convertToAxisDataType() {
        return this._getOption('convertToAxisDataType');
    }
    set convertToAxisDataType(value) {
        this._setOption('convertToAxisDataType', value);
    }
    get sortingMethod() {
        return this._getOption('sortingMethod');
    }
    set sortingMethod(value) {
        this._setOption('sortingMethod', value);
    }
    get _optionPath() {
        return 'dataPrepareSettings';
    }
    ngOnDestroy() {
        this._addRemovedOption(this._fullOptionPath().slice(0, -1));
    }
};
DxoDataPrepareSettingsComponent.ɵfac = function DxoDataPrepareSettingsComponent_Factory(t) { return new (t || DxoDataPrepareSettingsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 5), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 1)); };
DxoDataPrepareSettingsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxoDataPrepareSettingsComponent, selectors: [["dxo-data-prepare-settings"]], inputs: { checkTypeForAllData: "checkTypeForAllData", convertToAxisDataType: "convertToAxisDataType", sortingMethod: "sortingMethod" }, features: [ɵngcc0.ɵɵProvidersFeature([NestedOptionHost]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoDataPrepareSettingsComponent_Template(rf, ctx) { }, styles: [""] });
DxoDataPrepareSettingsComponent.ctorParameters = () => [
    { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
    { type: NestedOptionHost, decorators: [{ type: Host }] }
];
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [Boolean])
], DxoDataPrepareSettingsComponent.prototype, "checkTypeForAllData", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [Boolean])
], DxoDataPrepareSettingsComponent.prototype, "convertToAxisDataType", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], DxoDataPrepareSettingsComponent.prototype, "sortingMethod", null);
DxoDataPrepareSettingsComponent = tslib_1.__decorate([ tslib_1.__param(0, SkipSelf()), tslib_1.__param(0, Host()),
    tslib_1.__param(1, Host()),
    tslib_1.__metadata("design:paramtypes", [NestedOptionHost,
        NestedOptionHost])
], DxoDataPrepareSettingsComponent);
export { DxoDataPrepareSettingsComponent };
let DxoDataPrepareSettingsModule = class DxoDataPrepareSettingsModule {
};
DxoDataPrepareSettingsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxoDataPrepareSettingsModule });
DxoDataPrepareSettingsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxoDataPrepareSettingsModule_Factory(t) { return new (t || DxoDataPrepareSettingsModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoDataPrepareSettingsComponent, [{
        type: Component,
        args: [{
                selector: 'dxo-data-prepare-settings',
                template: '',
                providers: [NestedOptionHost],
                styles: ['']
            }]
    }], function () { return [{ type: ɵngcc1.NestedOptionHost, decorators: [{
                type: SkipSelf
            }, {
                type: Host
            }] }, { type: ɵngcc1.NestedOptionHost, decorators: [{
                type: Host
            }] }]; }, { checkTypeForAllData: [{
            type: Input
        }], convertToAxisDataType: [{
            type: Input
        }], sortingMethod: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxoDataPrepareSettingsModule, { declarations: [DxoDataPrepareSettingsComponent], exports: [DxoDataPrepareSettingsComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoDataPrepareSettingsModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DxoDataPrepareSettingsComponent
                ],
                exports: [
                    DxoDataPrepareSettingsComponent
                ]
            }]
    }], null, null); })();
export { DxoDataPrepareSettingsModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9wbnNiL0Rlc2t0b3AvTU9BIC0gRS1LQU5NQVMvbm9kZV9tb2R1bGVzL2RldmV4dHJlbWUtYW5ndWxhci9lc20yMDE1L3VpL25lc3RlZC9kYXRhLXByZXBhcmUtc2V0dGluZ3MuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3dlQThCRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7c0RBb0JvRCxBQU9uRDs7Ozs7Ozs7O0VBT0Q7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFVK0IiLCJmaWxlIjoiZGF0YS1wcmVwYXJlLXNldHRpbmdzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXHJcbiAqIGRldmV4dHJlbWUtYW5ndWxhclxyXG4gKiBWZXJzaW9uOiAxOS4yLjZcclxuICogQnVpbGQgZGF0ZTogVGh1IEphbiAzMCAyMDIwXHJcbiAqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxMiAtIDIwMjAgRGV2ZWxvcGVyIEV4cHJlc3MgSW5jLiBBTEwgUklHSFRTIFJFU0VSVkVEXHJcbiAqXHJcbiAqIFRoaXMgc29mdHdhcmUgbWF5IGJlIG1vZGlmaWVkIGFuZCBkaXN0cmlidXRlZCB1bmRlciB0aGUgdGVybXNcclxuICogb2YgdGhlIE1JVCBsaWNlbnNlLiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBvZiB0aGUgcHJvamVjdCBmb3IgZGV0YWlscy5cclxuICpcclxuICogaHR0cHM6Ly9naXRodWIuY29tL0RldkV4cHJlc3MvZGV2ZXh0cmVtZS1hbmd1bGFyXHJcbiAqL1xyXG5pbXBvcnQgKiBhcyB0c2xpYl8xIGZyb20gXCJ0c2xpYlwiO1xyXG4vKiB0c2xpbnQ6ZGlzYWJsZTptYXgtbGluZS1sZW5ndGggKi9cclxuaW1wb3J0IHsgQ29tcG9uZW50LCBOZ01vZHVsZSwgSG9zdCwgU2tpcFNlbGYsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE5lc3RlZE9wdGlvbkhvc3QsIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBOZXN0ZWRPcHRpb24gfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvY29yZSc7XHJcbmxldCBEeG9EYXRhUHJlcGFyZVNldHRpbmdzQ29tcG9uZW50ID0gY2xhc3MgRHhvRGF0YVByZXBhcmVTZXR0aW5nc0NvbXBvbmVudCBleHRlbmRzIE5lc3RlZE9wdGlvbiB7XHJcbiAgICBjb25zdHJ1Y3RvcihwYXJlbnRPcHRpb25Ib3N0LCBvcHRpb25Ib3N0KSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICBwYXJlbnRPcHRpb25Ib3N0LnNldE5lc3RlZE9wdGlvbih0aGlzKTtcclxuICAgICAgICBvcHRpb25Ib3N0LnNldEhvc3QodGhpcywgdGhpcy5fZnVsbE9wdGlvblBhdGguYmluZCh0aGlzKSk7XHJcbiAgICB9XHJcbiAgICBnZXQgY2hlY2tUeXBlRm9yQWxsRGF0YSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZ2V0T3B0aW9uKCdjaGVja1R5cGVGb3JBbGxEYXRhJyk7XHJcbiAgICB9XHJcbiAgICBzZXQgY2hlY2tUeXBlRm9yQWxsRGF0YSh2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuX3NldE9wdGlvbignY2hlY2tUeXBlRm9yQWxsRGF0YScsIHZhbHVlKTtcclxuICAgIH1cclxuICAgIGdldCBjb252ZXJ0VG9BeGlzRGF0YVR5cGUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dldE9wdGlvbignY29udmVydFRvQXhpc0RhdGFUeXBlJyk7XHJcbiAgICB9XHJcbiAgICBzZXQgY29udmVydFRvQXhpc0RhdGFUeXBlKHZhbHVlKSB7XHJcbiAgICAgICAgdGhpcy5fc2V0T3B0aW9uKCdjb252ZXJ0VG9BeGlzRGF0YVR5cGUnLCB2YWx1ZSk7XHJcbiAgICB9XHJcbiAgICBnZXQgc29ydGluZ01ldGhvZCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZ2V0T3B0aW9uKCdzb3J0aW5nTWV0aG9kJyk7XHJcbiAgICB9XHJcbiAgICBzZXQgc29ydGluZ01ldGhvZCh2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuX3NldE9wdGlvbignc29ydGluZ01ldGhvZCcsIHZhbHVlKTtcclxuICAgIH1cclxuICAgIGdldCBfb3B0aW9uUGF0aCgpIHtcclxuICAgICAgICByZXR1cm4gJ2RhdGFQcmVwYXJlU2V0dGluZ3MnO1xyXG4gICAgfVxyXG4gICAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICAgICAgdGhpcy5fYWRkUmVtb3ZlZE9wdGlvbih0aGlzLl9mdWxsT3B0aW9uUGF0aCgpLnNsaWNlKDAsIC0xKSk7XHJcbiAgICB9XHJcbn07XHJcbkR4b0RhdGFQcmVwYXJlU2V0dGluZ3NDb21wb25lbnQuY3RvclBhcmFtZXRlcnMgPSAoKSA9PiBbXHJcbiAgICB7IHR5cGU6IE5lc3RlZE9wdGlvbkhvc3QsIGRlY29yYXRvcnM6IFt7IHR5cGU6IFNraXBTZWxmIH0sIHsgdHlwZTogSG9zdCB9XSB9LFxyXG4gICAgeyB0eXBlOiBOZXN0ZWRPcHRpb25Ib3N0LCBkZWNvcmF0b3JzOiBbeyB0eXBlOiBIb3N0IH1dIH1cclxuXTtcclxudHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIElucHV0KCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtCb29sZWFuXSlcclxuXSwgRHhvRGF0YVByZXBhcmVTZXR0aW5nc0NvbXBvbmVudC5wcm90b3R5cGUsIFwiY2hlY2tUeXBlRm9yQWxsRGF0YVwiLCBudWxsKTtcclxudHNsaWJfMS5fX2RlY29yYXRlKFtcclxuICAgIElucHV0KCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtCb29sZWFuXSlcclxuXSwgRHhvRGF0YVByZXBhcmVTZXR0aW5nc0NvbXBvbmVudC5wcm90b3R5cGUsIFwiY29udmVydFRvQXhpc0RhdGFUeXBlXCIsIG51bGwpO1xyXG50c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgSW5wdXQoKSxcclxuICAgIHRzbGliXzEuX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdCksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbT2JqZWN0XSlcclxuXSwgRHhvRGF0YVByZXBhcmVTZXR0aW5nc0NvbXBvbmVudC5wcm90b3R5cGUsIFwic29ydGluZ01ldGhvZFwiLCBudWxsKTtcclxuRHhvRGF0YVByZXBhcmVTZXR0aW5nc0NvbXBvbmVudCA9IHRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICBDb21wb25lbnQoe1xyXG4gICAgICAgIHNlbGVjdG9yOiAnZHhvLWRhdGEtcHJlcGFyZS1zZXR0aW5ncycsXHJcbiAgICAgICAgdGVtcGxhdGU6ICcnLFxyXG4gICAgICAgIHByb3ZpZGVyczogW05lc3RlZE9wdGlvbkhvc3RdLFxyXG4gICAgICAgIHN0eWxlczogWycnXVxyXG4gICAgfSksXHJcbiAgICB0c2xpYl8xLl9fcGFyYW0oMCwgU2tpcFNlbGYoKSksIHRzbGliXzEuX19wYXJhbSgwLCBIb3N0KCkpLFxyXG4gICAgdHNsaWJfMS5fX3BhcmFtKDEsIEhvc3QoKSksXHJcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbTmVzdGVkT3B0aW9uSG9zdCxcclxuICAgICAgICBOZXN0ZWRPcHRpb25Ib3N0XSlcclxuXSwgRHhvRGF0YVByZXBhcmVTZXR0aW5nc0NvbXBvbmVudCk7XHJcbmV4cG9ydCB7IER4b0RhdGFQcmVwYXJlU2V0dGluZ3NDb21wb25lbnQgfTtcclxubGV0IER4b0RhdGFQcmVwYXJlU2V0dGluZ3NNb2R1bGUgPSBjbGFzcyBEeG9EYXRhUHJlcGFyZVNldHRpbmdzTW9kdWxlIHtcclxufTtcclxuRHhvRGF0YVByZXBhcmVTZXR0aW5nc01vZHVsZSA9IHRzbGliXzEuX19kZWNvcmF0ZShbXHJcbiAgICBOZ01vZHVsZSh7XHJcbiAgICAgICAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICAgICAgICAgIER4b0RhdGFQcmVwYXJlU2V0dGluZ3NDb21wb25lbnRcclxuICAgICAgICBdLFxyXG4gICAgICAgIGV4cG9ydHM6IFtcclxuICAgICAgICAgICAgRHhvRGF0YVByZXBhcmVTZXR0aW5nc0NvbXBvbmVudFxyXG4gICAgICAgIF0sXHJcbiAgICB9KVxyXG5dLCBEeG9EYXRhUHJlcGFyZVNldHRpbmdzTW9kdWxlKTtcclxuZXhwb3J0IHsgRHhvRGF0YVByZXBhcmVTZXR0aW5nc01vZHVsZSB9O1xyIl19