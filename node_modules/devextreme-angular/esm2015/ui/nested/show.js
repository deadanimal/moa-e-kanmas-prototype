/*!
 * devextreme-angular
 * Version: 19.2.6
 * Build date: Thu Jan 30 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
/* tslint:disable:max-line-length */
/* tslint:disable:use-input-property-decorator */
import { Component, NgModule, Host, SkipSelf } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { DxoAnimationConfig } from './base/animation-config';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'devextreme-angular/core';
let DxoShowComponent = class DxoShowComponent extends DxoAnimationConfig {
    constructor(parentOptionHost, optionHost) {
        super();
        parentOptionHost.setNestedOption(this);
        optionHost.setHost(this, this._fullOptionPath.bind(this));
    }
    get _optionPath() {
        return 'show';
    }
    ngOnDestroy() {
        this._addRemovedOption(this._fullOptionPath().slice(0, -1));
    }
};
DxoShowComponent.ɵfac = function DxoShowComponent_Factory(t) { return new (t || DxoShowComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 5), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 1)); };
DxoShowComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxoShowComponent, selectors: [["dxo-show"]], inputs: { complete: "complete", delay: "delay", direction: "direction", duration: "duration", easing: "easing", from: "from", staggerDelay: "staggerDelay", start: "start", to: "to", type: "type" }, features: [ɵngcc0.ɵɵProvidersFeature([NestedOptionHost]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoShowComponent_Template(rf, ctx) { }, styles: [""] });
DxoShowComponent.ctorParameters = () => [
    { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
    { type: NestedOptionHost, decorators: [{ type: Host }] }
];
DxoShowComponent = tslib_1.__decorate([ tslib_1.__param(0, SkipSelf()), tslib_1.__param(0, Host()),
    tslib_1.__param(1, Host()),
    tslib_1.__metadata("design:paramtypes", [NestedOptionHost,
        NestedOptionHost])
], DxoShowComponent);
export { DxoShowComponent };
let DxoShowModule = class DxoShowModule {
};
DxoShowModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxoShowModule });
DxoShowModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxoShowModule_Factory(t) { return new (t || DxoShowModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoShowComponent, [{
        type: Component,
        args: [{
                selector: 'dxo-show',
                template: '',
                providers: [NestedOptionHost],
                inputs: [
                    'complete',
                    'delay',
                    'direction',
                    'duration',
                    'easing',
                    'from',
                    'staggerDelay',
                    'start',
                    'to',
                    'type'
                ],
                styles: ['']
            }]
    }], function () { return [{ type: ɵngcc1.NestedOptionHost, decorators: [{
                type: SkipSelf
            }, {
                type: Host
            }] }, { type: ɵngcc1.NestedOptionHost, decorators: [{
                type: Host
            }] }]; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxoShowModule, { declarations: [DxoShowComponent], exports: [DxoShowComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoShowModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DxoShowComponent
                ],
                exports: [
                    DxoShowComponent
                ]
            }]
    }], null, null); })();
export { DxoShowModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9wbnNiL0Rlc2t0b3AvTU9BIC0gRS1LQU5NQVMvbm9kZV9tb2R1bGVzL2RldmV4dHJlbWUtYW5ndWxhci9lc20yMDE1L3VpL25lc3RlZC9zaG93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCQTs7Ozs7Ozs7Ozs7Ozs7d2VBWUU7Ozs7O3VDQUtxQyxBQW1CcEM7Ozs7Ozs7OztFQU9EOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBVWdCIiwiZmlsZSI6InNob3cuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcclxuICogZGV2ZXh0cmVtZS1hbmd1bGFyXHJcbiAqIFZlcnNpb246IDE5LjIuNlxyXG4gKiBCdWlsZCBkYXRlOiBUaHUgSmFuIDMwIDIwMjBcclxuICpcclxuICogQ29weXJpZ2h0IChjKSAyMDEyIC0gMjAyMCBEZXZlbG9wZXIgRXhwcmVzcyBJbmMuIEFMTCBSSUdIVFMgUkVTRVJWRURcclxuICpcclxuICogVGhpcyBzb2Z0d2FyZSBtYXkgYmUgbW9kaWZpZWQgYW5kIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSB0ZXJtc1xyXG4gKiBvZiB0aGUgTUlUIGxpY2Vuc2UuIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IG9mIHRoZSBwcm9qZWN0IGZvciBkZXRhaWxzLlxyXG4gKlxyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vRGV2RXhwcmVzcy9kZXZleHRyZW1lLWFuZ3VsYXJcclxuICovXHJcbmltcG9ydCAqIGFzIHRzbGliXzEgZnJvbSBcInRzbGliXCI7XHJcbi8qIHRzbGludDpkaXNhYmxlOm1heC1saW5lLWxlbmd0aCAqL1xyXG4vKiB0c2xpbnQ6ZGlzYWJsZTp1c2UtaW5wdXQtcHJvcGVydHktZGVjb3JhdG9yICovXHJcbmltcG9ydCB7IENvbXBvbmVudCwgTmdNb2R1bGUsIEhvc3QsIFNraXBTZWxmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE5lc3RlZE9wdGlvbkhvc3QsIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBEeG9BbmltYXRpb25Db25maWcgfSBmcm9tICcuL2Jhc2UvYW5pbWF0aW9uLWNvbmZpZyc7XHJcbmxldCBEeG9TaG93Q29tcG9uZW50ID0gY2xhc3MgRHhvU2hvd0NvbXBvbmVudCBleHRlbmRzIER4b0FuaW1hdGlvbkNvbmZpZyB7XHJcbiAgICBjb25zdHJ1Y3RvcihwYXJlbnRPcHRpb25Ib3N0LCBvcHRpb25Ib3N0KSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICBwYXJlbnRPcHRpb25Ib3N0LnNldE5lc3RlZE9wdGlvbih0aGlzKTtcclxuICAgICAgICBvcHRpb25Ib3N0LnNldEhvc3QodGhpcywgdGhpcy5fZnVsbE9wdGlvblBhdGguYmluZCh0aGlzKSk7XHJcbiAgICB9XHJcbiAgICBnZXQgX29wdGlvblBhdGgoKSB7XHJcbiAgICAgICAgcmV0dXJuICdzaG93JztcclxuICAgIH1cclxuICAgIG5nT25EZXN0cm95KCkge1xyXG4gICAgICAgIHRoaXMuX2FkZFJlbW92ZWRPcHRpb24odGhpcy5fZnVsbE9wdGlvblBhdGgoKS5zbGljZSgwLCAtMSkpO1xyXG4gICAgfVxyXG59O1xyXG5EeG9TaG93Q29tcG9uZW50LmN0b3JQYXJhbWV0ZXJzID0gKCkgPT4gW1xyXG4gICAgeyB0eXBlOiBOZXN0ZWRPcHRpb25Ib3N0LCBkZWNvcmF0b3JzOiBbeyB0eXBlOiBTa2lwU2VsZiB9LCB7IHR5cGU6IEhvc3QgfV0gfSxcclxuICAgIHsgdHlwZTogTmVzdGVkT3B0aW9uSG9zdCwgZGVjb3JhdG9yczogW3sgdHlwZTogSG9zdCB9XSB9XHJcbl07XHJcbkR4b1Nob3dDb21wb25lbnQgPSB0c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgQ29tcG9uZW50KHtcclxuICAgICAgICBzZWxlY3RvcjogJ2R4by1zaG93JyxcclxuICAgICAgICB0ZW1wbGF0ZTogJycsXHJcbiAgICAgICAgcHJvdmlkZXJzOiBbTmVzdGVkT3B0aW9uSG9zdF0sXHJcbiAgICAgICAgaW5wdXRzOiBbXHJcbiAgICAgICAgICAgICdjb21wbGV0ZScsXHJcbiAgICAgICAgICAgICdkZWxheScsXHJcbiAgICAgICAgICAgICdkaXJlY3Rpb24nLFxyXG4gICAgICAgICAgICAnZHVyYXRpb24nLFxyXG4gICAgICAgICAgICAnZWFzaW5nJyxcclxuICAgICAgICAgICAgJ2Zyb20nLFxyXG4gICAgICAgICAgICAnc3RhZ2dlckRlbGF5JyxcclxuICAgICAgICAgICAgJ3N0YXJ0JyxcclxuICAgICAgICAgICAgJ3RvJyxcclxuICAgICAgICAgICAgJ3R5cGUnXHJcbiAgICAgICAgXSxcclxuICAgICAgICBzdHlsZXM6IFsnJ11cclxuICAgIH0pLFxyXG4gICAgdHNsaWJfMS5fX3BhcmFtKDAsIFNraXBTZWxmKCkpLCB0c2xpYl8xLl9fcGFyYW0oMCwgSG9zdCgpKSxcclxuICAgIHRzbGliXzEuX19wYXJhbSgxLCBIb3N0KCkpLFxyXG4gICAgdHNsaWJfMS5fX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW05lc3RlZE9wdGlvbkhvc3QsXHJcbiAgICAgICAgTmVzdGVkT3B0aW9uSG9zdF0pXHJcbl0sIER4b1Nob3dDb21wb25lbnQpO1xyXG5leHBvcnQgeyBEeG9TaG93Q29tcG9uZW50IH07XHJcbmxldCBEeG9TaG93TW9kdWxlID0gY2xhc3MgRHhvU2hvd01vZHVsZSB7XHJcbn07XHJcbkR4b1Nob3dNb2R1bGUgPSB0c2xpYl8xLl9fZGVjb3JhdGUoW1xyXG4gICAgTmdNb2R1bGUoe1xyXG4gICAgICAgIGRlY2xhcmF0aW9uczogW1xyXG4gICAgICAgICAgICBEeG9TaG93Q29tcG9uZW50XHJcbiAgICAgICAgXSxcclxuICAgICAgICBleHBvcnRzOiBbXHJcbiAgICAgICAgICAgIER4b1Nob3dDb21wb25lbnRcclxuICAgICAgICBdLFxyXG4gICAgfSlcclxuXSwgRHhvU2hvd01vZHVsZSk7XHJcbmV4cG9ydCB7IER4b1Nob3dNb2R1bGUgfTtcciJdfQ==